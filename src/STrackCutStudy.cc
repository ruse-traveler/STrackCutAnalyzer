// STrackCutStudy.cc
// Derek Anderson
// 12.15.2022
//
// Reads in the 'ntp_track' Ntuple
// generated by the SVtxEvaluator
// class and studies the impact
// of cutting on various quantities.

#define STRACKCUTSTUDY_CC

// header file
#include "STrackCutStudy.h"

using namespace std;



// ctor/dtor ------------------------------------------------------------------

STrackCutStudy::STrackCutStudy() {

  doIntNorm       = false;
  useOnlyPrimary  = false; 
  normalPtFracMin = 0.;
  normalPtFracMax = 9999.;
  cout << "\n  Beginning track cut study."  << endl;

}  // end ctor




STrackCutStudy::~STrackCutStudy() {

  const bool doTuplesExist = (ntTrkEO || ntTrkPU);
  if (!doTuplesExist) {
    return;
  } else {
    delete ntTrkEO -> GetCurrentFile();
    delete ntTrkPU -> GetCurrentFile();
  }

}  // end dtor



// public methods -------------------------------------------------------------

void STrackCutStudy::SetInputOutputFiles(const TString sEmbedOnlyInput, const TString sPileupInput, const TString sOutput) {

  sInFileEO = sEmbedOnlyInput;
  sInFilePU = sPileupInput;
  sOutfile  = sOutput;
  cout << "    Set i/o files:\n"
       << "      Embed Only  = " << sInFileEO.Data() << "\n"
       << "      With Pileup = " << sInFilePU.Data() << "\n"
       << "      Output      = " << sOutput.Data()
       << endl;

}  // end 'SetInputOutputFiles(TString, TString, TString)'



void STrackCutStudy::SetInputTuples(const TString sEmbedOnlyTuple, const TString sPileupTuple) {

  sInTupleEO = sEmbedOnlyTuple;
  sInTuplePU = sPileupTuple;
  cout << "    Set input tuples:\n"
       << "      Embed Only  = " << sInTupleEO.Data() << "\n"
       << "      With Pileup = " << sInTuplePU.Data()
       << endl;

}  // end 'SetInputTuples(TString, TString)'



void STrackCutStudy::SetStudyParameters(const Bool_t intNorm, const Bool_t onlyPrim, const Double_t normalFracMin, const Double_t normalFracMax) {

  doIntNorm       = intNorm;
  useOnlyPrimary  = onlyPrim;
  normalPtFracMin = normalFracMin;
  normalPtFracMax = normalFracMax;
  cout << "    Set normal pT fraction:\n"
       << "      Normal Pt Fraction = (" << normalPtFracMin << ", " << normalPtFracMax << ")"
       << endl;

  if (doIntNorm) {
    cout << "    Normalizing by integral." << endl;
  } else {
    cout << "    No normalization." << endl;
  }

  if (useOnlyPrimary) {
    cout << "    Considering only primary embed-only tracks." << endl;
  } else {
    cout << "    Considering all embed-only tracks." << endl;
  }

}  // end 'SetStudyParameters(double, double)'



void STrackCutStudy::Init() {

  // announce method
  cout << "    Initializing:" << endl;
  InitFiles();
  InitTuples();
  InitHists();
  return;

}  // end Init()



void STrackCutStudy::Analyze() {

  // check for tree and announce method
  const bool doTuplesExist = (ntTrkEO && ntTrkPU);
  if (!doTuplesExist) {
    cerr << "PANIC: no input tuples!\n"
         << "        ntTrkEO = " << ntTrkEO << ", ntTrkPU = " << ntTrkPU
         << endl;
    assert(doTuplesExist);
  }
  cout << "    Analyzing:" <<endl;

  // prepare for embed-only entry loop
  Long64_t nEntriesEO = ntTrkEO -> GetEntries();
  cout << "      Beginning embed-only entry loop: " << nEntriesEO << " entries to process..." << endl;

  // loop over embed-only tuple entries
  Long64_t nBytesEO(0);
  for (Long64_t iEntry = 0; iEntry < nEntriesEO; iEntry++) {

    // grab entry
    const Long64_t bytesEO = ntTrkEO -> GetEntry(iEntry);
    if (bytesEO < 0.) {
      cerr << "WARNING: something wrong with embed-only entry #" << iEntry << "! Aborting loop!" << endl;
      break;
    }
    nBytesEO += bytesEO;

    // announce progress
    const Long64_t iProg = iEntry + 1;
    if (iProg == nEntriesEO) {
      cout << "        Processing embed-only entry " << iProg << "/" << nEntriesEO << "..." << endl;
    } else {
      cout << "        Processing embed-only entry " << iProg << "/" << nEntriesEO << "...\r" << flush;
    }

    // perform calculations
    const Float_t  glayers    = gnlmms + gnlmaps + gnlintt + gnltpc;
    const Double_t perMms     = (Double_t) nlmms / (Double_t) gnlmms;
    const Double_t perMaps    = (Double_t) nlmaps / (Double_t) gnlmaps;
    const Double_t perIntt    = (Double_t) nlintt / (Double_t) gnlintt;
    const Double_t perTpc     = (Double_t) nltpc / (Double_t) gnltpc;
    const Double_t perTot     = (Double_t) layers / (Double_t) glayers;
    const Double_t umDcaXY    = dca3dxy * 10000;
    const Double_t umDcaZ     = dca3dz * 10000;
    const Double_t deltaDcaXY = abs(dca3dxysigma / dca3dxy);
    const Double_t deltaDcaZ  = abs(dca3dzsigma / dca3dz);
    const Double_t deltaEta   = abs(deltaeta / eta);
    const Double_t deltaPhi   = abs(deltaphi / phi);
    const Double_t deltaPt    = abs(deltapt / pt);
    const Double_t etaFrac    = eta / geta;
    const Double_t phiFrac    = phi / gphi;
    const Double_t ptFrac     = pt / gpt;
    const Double_t etaDiff    = eta - geta;
    const Double_t phiDiff    = phi - gphi;
    const Double_t ptDiff     = pt - gpt;
    const Double_t vxDiff     = vx - gvx;
    const Double_t vyDiff     = vy - gvy;
    const Double_t vzDiff     = vz - gvz;

    // select only primaries if need be
    const Bool_t isPrimary = (gprimary == 1);
    if (useOnlyPrimary && !isPrimary) continue;

    // fill embed-only track histograms
    hTrackNMms         -> Fill(nlmms);
    hTrackNMap         -> Fill(nlmaps);
    hTrackNInt         -> Fill(nlintt);
    hTrackNTpc         -> Fill(nltpc);
    hTrackNTot         -> Fill(layers);
    hTrackPerMms       -> Fill(perMms);
    hTrackPerMap       -> Fill(perMaps);
    hTrackPerInt       -> Fill(perIntt);
    hTrackPerTpc       -> Fill(perTpc);
    hTrackPerTot       -> Fill(perTot);
    hTrackChi2         -> Fill(chisq);
    hTrackNDF          -> Fill(ndf);
    hTrackQuality      -> Fill(quality);
    hTrackDCAxy        -> Fill(umDcaXY);
    hTrackDCAz         -> Fill(umDcaZ);
    hTrackVx           -> Fill(vx);
    hTrackVy           -> Fill(vy);
    hTrackVz           -> Fill(vz);
    hTrackEta          -> Fill(eta);
    hTrackPhi          -> Fill(phi);
    hTrackPt           -> Fill(pt);
    hDeltaDCAxy        -> Fill(deltaDcaXY);
    hDeltaDCAz         -> Fill(deltaDcaZ);
    hDeltaEta          -> Fill(deltaEta);
    hDeltaPhi          -> Fill(deltaPhi);
    hDeltaPt           -> Fill(deltaPt);
    hTrackPtVsNMms     -> Fill(nlmms, pt);
    hTrackPtVsNMap     -> Fill(nlmaps, pt);
    hTrackPtVsNInt     -> Fill(nlintt, pt);
    hTrackPtVsNTpc     -> Fill(nltpc, pt);
    hTrackPtVsNTot     -> Fill(layers, pt);
    hTrackPtVsPerMms   -> Fill(perMms, pt);
    hTrackPtVsPerMap   -> Fill(perMaps, pt);
    hTrackPtVsPerInt   -> Fill(perIntt, pt);
    hTrackPtVsPerTpc   -> Fill(perTpc, pt);
    hTrackPtVsPerTot   -> Fill(perTot, pt);
    hTrackPtVsChi2     -> Fill(chisq, pt);
    hTrackPtVsNDF      -> Fill(ndf, pt);
    hTrackPtVsQuality  -> Fill(quality, pt);
    hTrackPtVsDCAxy    -> Fill(umDcaXY, pt);
    hTrackPtVsDCAz     -> Fill(umDcaZ, pt);
    hDeltaDCAxyVsTrkPt -> Fill(pt, deltaDcaXY);
    hDeltaDCAzVsTrkPt  -> Fill(pt, deltaDcaZ);
    hDeltaEtaVsTrkPt   -> Fill(pt, deltaEta);
    hDeltaPhiVsTrkPt   -> Fill(pt, deltaPhi);
    hDeltaPtVsTrkPt    -> Fill(pt, deltaPt);

    // fill embed-only truth histograms
    hTruthNMms         -> Fill(gnlmms);
    hTruthNMap         -> Fill(gnlmaps);
    hTruthNInt         -> Fill(gnlintt);
    hTruthNTpc         -> Fill(gnltpc);
    hTruthNTot         -> Fill(glayers);
    hTruthEta          -> Fill(geta);
    hTruthPhi          -> Fill(gphi);
    hTruthPt           -> Fill(gpt);
    hTruthVx           -> Fill(gvx);
    hTruthVy           -> Fill(gvy);
    hTruthVz           -> Fill(gvz);
    hTruthEtaFrac      -> Fill(etaFrac);
    hTruthPhiFrac      -> Fill(phiFrac);
    hTruthPtFrac       -> Fill(ptFrac);
    hTruthEtaDiff      -> Fill(etaDiff);
    hTruthPhiDiff      -> Fill(phiDiff);
    hTruthPtDiff       -> Fill(ptDiff);
    hTruthVxDiff       -> Fill(vxDiff);
    hTruthVyDiff       -> Fill(vyDiff);
    hTruthVzDiff       -> Fill(vzDiff);
    hTruthVsTrackEta   -> Fill(eta, geta);
    hTruthVsTrackPhi   -> Fill(phi, gphi);
    hTruthVsTrackPt    -> Fill(pt, gpt);
    hTruthVsTrackVx    -> Fill(vx, gvx);
    hTruthVsTrackVy    -> Fill(vy, gvy);
    hTruthVsTrackVz    -> Fill(vz, gvz);
    hFracVsTruthEta    -> Fill(geta, etaFrac);
    hFracVsTruthPhi    -> Fill(gphi, phiFrac);
    hFracVsTruthPt     -> Fill(gpt, ptFrac);
    hDiffVsTruthEta    -> Fill(geta, etaDiff);
    hDiffVsTruthPhi    -> Fill(gphi, phiDiff);
    hDiffVsTruthPt     -> Fill(gpt, ptDiff);
    hTruthPtVsNMap     -> Fill(gnlmaps, gpt);
    hTruthPtVsNInt     -> Fill(gnlintt, gpt);
    hTruthPtVsNTpc     -> Fill(gnltpc, gpt);
    hTruthPtVsNTot     -> Fill(glayers, gpt);
    hTruthPtVsNTpc     -> Fill(nltpc, gpt);
    hTruthPtVsChi2     -> Fill(chisq, gpt);
    hTruthPtVsNDF      -> Fill(ndf, gpt);
    hTruthPtVsQuality  -> Fill(quality, gpt);
    hFracPtVsQuality   -> Fill(quality, ptFrac);
    hTruthPtVsDCAxy    -> Fill(umDcaXY, gpt);
    hTruthPtVsDCAz     -> Fill(umDcaZ, gpt);
    hDeltaDCAxyVsTruPt -> Fill(gpt, deltaDcaXY);
    hDeltaDCAzVsTruPt  -> Fill(gpt, deltaDcaZ);
    hDeltaEtaVsTruPt   -> Fill(gpt, deltaEta);
    hDeltaPhiVsTruPt   -> Fill(gpt, deltaPhi);
    hDeltaPtVsTruPt    -> Fill(gpt, deltaPt);
  
    // fill embed_only weird histograms
    const Bool_t isWeirdTrack = ((ptFrac < normalPtFracMin) || (ptFrac > normalPtFracMax));
    if (isWeirdTrack) {
      hWeirdNMms        -> Fill(nlmms);
      hWeirdNMap        -> Fill(nlmaps);
      hWeirdNInt        -> Fill(nlintt);
      hWeirdNTpc        -> Fill(nltpc);
      hWeirdNTot        -> Fill(layers);
      hWeirdPerMms      -> Fill(perMms);
      hWeirdPerMap      -> Fill(perMaps);
      hWeirdPerInt      -> Fill(perIntt);
      hWeirdPerTpc      -> Fill(perTpc);
      hWeirdPerTot      -> Fill(perTot);
      hWeirdChi2        -> Fill(chisq);
      hWeirdNDF         -> Fill(ndf);
      hWeirdQuality     -> Fill(quality);
      hWeirdDCAxy       -> Fill(umDcaXY);
      hWeirdDCAz        -> Fill(umDcaZ);
      hWeirdVx          -> Fill(vx);
      hWeirdVy          -> Fill(vy);
      hWeirdVz          -> Fill(vz);
      hWeirdEta         -> Fill(eta);
      hWeirdPhi         -> Fill(phi);
      hWeirdPt          -> Fill(pt); 
      hWeirdDeltaDCAxy  -> Fill(deltaDcaXY);
      hWeirdDeltaDCAz   -> Fill(deltaDcaZ);
      hWeirdDeltaEta    -> Fill(deltaEta);
      hWeirdDeltaPhi    -> Fill(deltaPhi);
      hWeirdDeltaPt     -> Fill(deltaPt);
      hWeirdVxDiff      -> Fill(vxDiff);
      hWeirdVyDiff      -> Fill(vyDiff);
      hWeirdVzDiff      -> Fill(vzDiff);
    } else {
      hNormalNMms       -> Fill(nlmms);
      hNormalNMap       -> Fill(nlmaps);
      hNormalNInt       -> Fill(nlintt);
      hNormalNTpc       -> Fill(nltpc);
      hNormalNTot       -> Fill(layers);
      hNormalPerMms     -> Fill(perMms);
      hNormalPerMap     -> Fill(perMaps);
      hNormalPerInt     -> Fill(perIntt);
      hNormalPerTpc     -> Fill(perTpc);
      hNormalPerTot     -> Fill(perTot);
      hNormalChi2       -> Fill(chisq);
      hNormalNDF        -> Fill(ndf);
      hNormalQuality    -> Fill(quality);
      hNormalDCAxy      -> Fill(umDcaXY);
      hNormalDCAz       -> Fill(umDcaZ);
      hNormalVx         -> Fill(vx);
      hNormalVy         -> Fill(vy);
      hNormalVz         -> Fill(vz);
      hNormalEta        -> Fill(eta);
      hNormalPhi        -> Fill(phi);
      hNormalPt         -> Fill(pt); 
      hNormalDeltaDCAxy -> Fill(deltaDcaXY);
      hNormalDeltaDCAz  -> Fill(deltaDcaZ);
      hNormalDeltaEta   -> Fill(deltaEta);
      hNormalDeltaPhi   -> Fill(deltaPhi);
      hNormalDeltaPt    -> Fill(deltaPt);
      hNormalVxDiff     -> Fill(vxDiff);
      hNormalVyDiff     -> Fill(vyDiff);
      hNormalVzDiff     -> Fill(vzDiff);
    }
  }  // end embed-only entry loop
  cout << "      Finished embed-only entry loop." << endl;

  // prepare for with-pileup entry loop
  Long64_t nEntriesPU = ntTrkPU -> GetEntries();
  cout << "      Beginning with-pileup entry loop: " << nEntriesPU << " entries to process..." << endl;

  // loop over with-pileup tuple entries
  Long64_t nBytesPU(0);
  for (Long64_t iEntry = 0; iEntry < nEntriesPU; iEntry++) {

    // grab entry
    const Long64_t bytesPU = ntTrkPU -> GetEntry(iEntry);
    if (bytesPU < 0.) {
      cerr << "WARNING: something wrong with with-pileup entry #" << iEntry << "! Aborting loop!" << endl;
      break;
    }
    nBytesPU += bytesPU;

    // announce progress
    const Long64_t iProg = iEntry + 1;
    if (iProg == nEntriesPU) {
      cout << "        Processing with-pileup entry " << iProg << "/" << nEntriesPU << "..." << endl;
    } else {
      cout << "        Processing with-pileup entry " << iProg << "/" << nEntriesPU << "...\r" << flush;
    }

    // perform calculations
    const Float_t  pu_glayers = pu_gnlmms + pu_gnlmaps + pu_gnlintt + pu_gnltpc;
    const Double_t perMms     = (Double_t) pu_nlmms / (Double_t) pu_gnlmms;
    const Double_t perMaps    = (Double_t) pu_nlmaps / (Double_t) pu_gnlmaps;
    const Double_t perIntt    = (Double_t) pu_nlintt / (Double_t) pu_gnlintt;
    const Double_t perTpc     = (Double_t) pu_nltpc / (Double_t) pu_gnltpc;
    const Double_t perTot     = (Double_t) pu_layers / (Double_t) pu_glayers;
    const Double_t umDcaXY    = pu_dca3dxy * 10000;
    const Double_t umDcaZ     = pu_dca3dz * 10000;
    const Double_t deltaDcaXY = abs(pu_dca3dxysigma / pu_dca3dxy);
    const Double_t deltaDcaZ  = abs(pu_dca3dzsigma / pu_dca3dz);
    const Double_t deltaEta   = abs(pu_deltaeta / pu_eta);
    const Double_t deltaPhi   = abs(pu_deltaphi / pu_phi);
    const Double_t deltaPt    = abs(pu_deltapt / pu_pt);

    // check if values are defined & if primary or not
    const Bool_t thereAreNans = (isnan(pu_dca3dxy) || isnan(pu_dca3dz) || isnan(pu_eta) || isnan(pu_phi) || isnan(pu_pt));
    const Bool_t isPrimary    = (pu_gprimary == 1);
    if (thereAreNans) continue;

    // fill with-pileup track histograms
    hTrackNMms_PU         -> Fill(pu_nlmms);
    hTrackNMap_PU         -> Fill(pu_nlmaps);
    hTrackNInt_PU         -> Fill(pu_nlintt);
    hTrackNTpc_PU         -> Fill(pu_nltpc);
    hTrackNTot_PU         -> Fill(pu_layers);
    hTrackPerMms_PU       -> Fill(perMms);
    hTrackPerMap_PU       -> Fill(perMaps);
    hTrackPerInt_PU       -> Fill(perIntt);
    hTrackPerTpc_PU       -> Fill(perTpc);
    hTrackPerTot_PU       -> Fill(perTot);
    hTrackChi2_PU         -> Fill(pu_chisq);
    hTrackNDF_PU          -> Fill(pu_ndf);
    hTrackQuality_PU      -> Fill(pu_quality);
    hTrackDCAxy_PU        -> Fill(umDcaXY);
    hTrackDCAz_PU         -> Fill(umDcaZ);
    hTrackVx_PU           -> Fill(pu_vx);
    hTrackVy_PU           -> Fill(pu_vy);
    hTrackVz_PU           -> Fill(pu_vz);
    hTrackEta_PU          -> Fill(pu_eta);
    hTrackPhi_PU          -> Fill(pu_phi);
    hTrackPt_PU           -> Fill(pu_pt);
    hDeltaDCAxy_PU        -> Fill(deltaDcaXY);
    hDeltaDCAz_PU         -> Fill(deltaDcaZ);
    hDeltaEta_PU          -> Fill(deltaEta);
    hDeltaPhi_PU          -> Fill(deltaPhi);
    hDeltaPt_PU           -> Fill(deltaPt);
    hTrackPtVsNMms_PU     -> Fill(pu_nlmaps, pu_pt);
    hTrackPtVsNMap_PU     -> Fill(pu_nlmaps, pu_pt);
    hTrackPtVsNInt_PU     -> Fill(pu_nlintt, pu_pt);
    hTrackPtVsNTpc_PU     -> Fill(pu_nltpc, pu_pt);
    hTrackPtVsNTot_PU     -> Fill(pu_layers, pu_pt);
    hTrackPtVsPerMms_PU   -> Fill(perMms, pu_pt);
    hTrackPtVsPerMap_PU   -> Fill(perMaps, pu_pt);
    hTrackPtVsPerInt_PU   -> Fill(perIntt, pu_pt);
    hTrackPtVsPerTpc_PU   -> Fill(perTpc, pu_pt);
    hTrackPtVsPerTot_PU   -> Fill(perTot, pu_pt);
    hTrackPtVsChi2_PU     -> Fill(pu_chisq, pu_pt);
    hTrackPtVsNDF_PU      -> Fill(pu_ndf, pu_pt);
    hTrackPtVsQuality_PU  -> Fill(pu_quality, pu_pt);
    hTrackPtVsDCAxy_PU    -> Fill(umDcaXY, pu_pt);
    hTrackPtVsDCAz_PU     -> Fill(umDcaZ, pu_pt);
    hDeltaDCAxyVsTrkPt_PU -> Fill(pu_pt, deltaDcaXY);
    hDeltaDCAzVsTrkPt_PU  -> Fill(pu_pt, deltaDcaZ);
    hDeltaEtaVsTrkPt_PU   -> Fill(pu_pt, deltaEta);
    hDeltaPhiVsTrkPt_PU   -> Fill(pu_pt, deltaPhi);
    hDeltaPtVsTrkPt_PU    -> Fill(pu_pt, deltaPt);
    if (isPrimary) {
      hPrimaryNMms_PU        -> Fill(pu_nlmms);
      hPrimaryNMap_PU        -> Fill(pu_nlmaps);
      hPrimaryNInt_PU        -> Fill(pu_nlintt);
      hPrimaryNTpc_PU        -> Fill(pu_nltpc);
      hPrimaryNTot_PU        -> Fill(pu_layers);
      hPrimaryPerMms_PU      -> Fill(perMms);
      hPrimaryPerMap_PU      -> Fill(perMaps);
      hPrimaryPerInt_PU      -> Fill(perIntt);
      hPrimaryPerTpc_PU      -> Fill(perTpc);
      hPrimaryPerTot_PU      -> Fill(perTot);
      hPrimaryChi2_PU        -> Fill(pu_chisq);
      hPrimaryNDF_PU         -> Fill(pu_ndf);
      hPrimaryQuality_PU     -> Fill(pu_quality);
      hPrimaryDCAxy_PU       -> Fill(umDcaXY);
      hPrimaryDCAz_PU        -> Fill(umDcaZ);
      hPrimaryVx_PU          -> Fill(pu_vx);
      hPrimaryVy_PU          -> Fill(pu_vy);
      hPrimaryVz_PU          -> Fill(pu_vz);
      hPrimaryEta_PU         -> Fill(pu_eta);
      hPrimaryPhi_PU         -> Fill(pu_phi);
      hPrimaryPt_PU          -> Fill(pu_pt);
      hDeltaPrimDCAxy_PU     -> Fill(deltaDcaXY);
      hDeltaPrimDCAz_PU      -> Fill(deltaDcaZ);
      hDeltaPrimEta_PU       -> Fill(deltaEta);
      hDeltaPrimPhi_PU       -> Fill(deltaPhi);
      hDeltaPrimPt_PU        -> Fill(deltaPt);
      hPrimaryPtVsNMms_PU    -> Fill(pu_nlmaps, pu_pt);
      hPrimaryPtVsNMap_PU    -> Fill(pu_nlmaps, pu_pt);
      hPrimaryPtVsNInt_PU    -> Fill(pu_nlintt, pu_pt);
      hPrimaryPtVsNTpc_PU    -> Fill(pu_nltpc, pu_pt);
      hPrimaryPtVsNTot_PU    -> Fill(pu_layers, pu_pt);
      hPrimaryPtVsPerMms_PU  -> Fill(perMms, pu_pt);
      hPrimaryPtVsPerMap_PU  -> Fill(perMaps, pu_pt);
      hPrimaryPtVsPerInt_PU  -> Fill(perIntt, pu_pt);
      hPrimaryPtVsPerTpc_PU  -> Fill(perTpc, pu_pt);
      hPrimaryPtVsPerTot_PU  -> Fill(perTot, pu_pt);
      hPrimaryPtVsChi2_PU    -> Fill(pu_chisq, pu_pt);
      hPrimaryPtVsNDF_PU     -> Fill(pu_ndf, pu_pt);
      hPrimaryPtVsQuality_PU -> Fill(pu_quality, pu_pt);
      hPrimaryPtVsDCAxy_PU   -> Fill(umDcaXY, pu_pt);
      hPrimaryPtVsDCAz_PU    -> Fill(umDcaZ, pu_pt);
      hDeltaDCAxyVsPrimPt_PU -> Fill(pu_pt, deltaDcaXY);
      hDeltaDCAzVsPrimPt_PU  -> Fill(pu_pt, deltaDcaZ);
      hDeltaEtaVsPrimPt_PU   -> Fill(pu_pt, deltaEta);
      hDeltaPhiVsPrimPt_PU   -> Fill(pu_pt, deltaPhi);
      hDeltaPtVsPrimPt_PU    -> Fill(pu_pt, deltaPt);
    } else {
      hNonPrimNMms_PU        -> Fill(pu_nlmms);
      hNonPrimNMap_PU        -> Fill(pu_nlmaps);
      hNonPrimNInt_PU        -> Fill(pu_nlintt);
      hNonPrimNTpc_PU        -> Fill(pu_nltpc);
      hNonPrimNTot_PU        -> Fill(pu_layers);
      hNonPrimPerMms_PU      -> Fill(perMms);
      hNonPrimPerMap_PU      -> Fill(perMaps);
      hNonPrimPerInt_PU      -> Fill(perIntt);
      hNonPrimPerTpc_PU      -> Fill(perTpc);
      hNonPrimPerTot_PU      -> Fill(perTot);
      hNonPrimChi2_PU        -> Fill(pu_chisq);
      hNonPrimNDF_PU         -> Fill(pu_ndf);
      hNonPrimQuality_PU     -> Fill(pu_quality);
      hNonPrimDCAxy_PU       -> Fill(umDcaXY);
      hNonPrimDCAz_PU        -> Fill(umDcaZ);
      hNonPrimVx_PU          -> Fill(pu_vx);
      hNonPrimVy_PU          -> Fill(pu_vy);
      hNonPrimVz_PU          -> Fill(pu_vz);
      hNonPrimEta_PU         -> Fill(pu_eta);
      hNonPrimPhi_PU         -> Fill(pu_phi);
      hNonPrimPt_PU          -> Fill(pu_pt);
      hDeltaNoPrDCAxy_PU     -> Fill(deltaDcaXY);
      hDeltaNoPrDCAz_PU      -> Fill(deltaDcaZ);
      hDeltaNoPrEta_PU       -> Fill(deltaEta);
      hDeltaNoPrPhi_PU       -> Fill(deltaPhi);
      hDeltaNoPrPt_PU        -> Fill(deltaPt);
      hNonPrimPtVsNMms_PU    -> Fill(pu_nlmaps, pu_pt);
      hNonPrimPtVsNMap_PU    -> Fill(pu_nlmaps, pu_pt);
      hNonPrimPtVsNInt_PU    -> Fill(pu_nlintt, pu_pt);
      hNonPrimPtVsNTpc_PU    -> Fill(pu_nltpc, pu_pt);
      hNonPrimPtVsNTot_PU    -> Fill(pu_layers, pu_pt);
      hNonPrimPtVsPerMms_PU  -> Fill(perMms, pu_pt);
      hNonPrimPtVsPerMap_PU  -> Fill(perMaps, pu_pt);
      hNonPrimPtVsPerInt_PU  -> Fill(perIntt, pu_pt);
      hNonPrimPtVsPerTpc_PU  -> Fill(perTpc, pu_pt);
      hNonPrimPtVsPerTot_PU  -> Fill(perTot, pu_pt);
      hNonPrimPtVsChi2_PU    -> Fill(pu_chisq, pu_pt);
      hNonPrimPtVsNDF_PU     -> Fill(pu_ndf, pu_pt);
      hNonPrimPtVsQuality_PU -> Fill(pu_quality, pu_pt);
      hNonPrimPtVsDCAxy_PU   -> Fill(umDcaXY, pu_pt);
      hNonPrimPtVsDCAz_PU    -> Fill(umDcaZ, pu_pt);
      hDeltaDCAxyVsNoPrPt_PU -> Fill(pu_pt, deltaDcaXY);
      hDeltaDCAzVsNoPrPt_PU  -> Fill(pu_pt, deltaDcaZ);
      hDeltaEtaVsNoPrPt_PU   -> Fill(pu_pt, deltaEta);
      hDeltaPhiVsNoPrPt_PU   -> Fill(pu_pt, deltaPhi);
      hDeltaPtVsNoPrPt_PU    -> Fill(pu_pt, deltaPt);
    }
  }  // end with-pileup entry loop
  cout << "      Finished with-pileup entry loop." << endl;

  // normalize histograms if needed
  if (doIntNorm) {

    // track histograms
    const Double_t iTrackNMms         = hTrackNMms         -> Integral();
    const Double_t iTrackNMap         = hTrackNMap         -> Integral();
    const Double_t iTrackNInt         = hTrackNInt         -> Integral();
    const Double_t iTrackNTpc         = hTrackNTpc         -> Integral();
    const Double_t iTrackNTot         = hTrackNTot         -> Integral();
    const Double_t iTrackPerMms       = hTrackPerMms       -> Integral();
    const Double_t iTrackPerMap       = hTrackPerMap       -> Integral();
    const Double_t iTrackPerInt       = hTrackPerInt       -> Integral();
    const Double_t iTrackPerTpc       = hTrackPerTpc       -> Integral();
    const Double_t iTrackPerTot       = hTrackPerTot       -> Integral();
    const Double_t iTrackChi2         = hTrackChi2         -> Integral();
    const Double_t iTrackNDF          = hTrackNDF          -> Integral();
    const Double_t iTrackQuality      = hTrackQuality      -> Integral();
    const Double_t iTrackDCAxy        = hTrackDCAxy        -> Integral();
    const Double_t iTrackDCAz         = hTrackDCAz         -> Integral();
    const Double_t iTrackVx           = hTrackVx           -> Integral();
    const Double_t iTrackVy           = hTrackVy           -> Integral();
    const Double_t iTrackVz           = hTrackVz           -> Integral();
    const Double_t iTrackEta          = hTrackEta          -> Integral();
    const Double_t iTrackPhi          = hTrackPhi          -> Integral();
    const Double_t iTrackPt           = hTrackPt           -> Integral();
    const Double_t iDeltaDCAxy        = hDeltaDCAxy        -> Integral();
    const Double_t iDeltaDCAz         = hDeltaDCAz         -> Integral();
    const Double_t iDeltaEta          = hDeltaEta          -> Integral();
    const Double_t iDeltaPhi          = hDeltaPhi          -> Integral();
    const Double_t iDeltaPt           = hDeltaPt           -> Integral();
    const Double_t iTrackPtVsNMms     = hTrackPtVsNMms     -> Integral();
    const Double_t iTrackPtVsNMap     = hTrackPtVsNMap     -> Integral();
    const Double_t iTrackPtVsNInt     = hTrackPtVsNInt     -> Integral();
    const Double_t iTrackPtVsNTpc     = hTrackPtVsNTpc     -> Integral();
    const Double_t iTrackPtVsNTot     = hTrackPtVsNTot     -> Integral();
    const Double_t iTrackPtVsPerMap   = hTrackPtVsPerMap   -> Integral();
    const Double_t iTrackPtVsPerInt   = hTrackPtVsPerInt   -> Integral();
    const Double_t iTrackPtVsPerTpc   = hTrackPtVsPerTpc   -> Integral();
    const Double_t iTrackPtVsPerTot   = hTrackPtVsPerTot   -> Integral();
    const Double_t iTrackPtVsChi2     = hTrackPtVsChi2     -> Integral();
    const Double_t iTrackPtVsNDF      = hTrackPtVsNDF      -> Integral();
    const Double_t iTrackPtVsQuality  = hTrackPtVsQuality  -> Integral();
    const Double_t iTrackPtVsDCAxy    = hTrackPtVsDCAxy    -> Integral();
    const Double_t iTrackPtVsDCAz     = hTrackPtVsDCAz     -> Integral();
    const Double_t iDeltaDCAxyVsTrkPt = hDeltaDCAxyVsTrkPt -> Integral();
    const Double_t iDeltaDCAzVsTrkPt  = hDeltaDCAzVsTrkPt  -> Integral();
    const Double_t iDeltaEtaVsTrkPt   = hDeltaEtaVsTrkPt   -> Integral();
    const Double_t iDeltaPhiVsTrkPt   = hDeltaPhiVsTrkPt   -> Integral();
    const Double_t iDeltaPtVsTrkPt    = hDeltaPtVsTrkPt    -> Integral();
    if (iTrackNMms         > 0.) hTrackNMms         -> Scale(1. / iTrackNMms);
    if (iTrackNMap         > 0.) hTrackNMap         -> Scale(1. / iTrackNMap);
    if (iTrackNInt         > 0.) hTrackNInt         -> Scale(1. / iTrackNInt);
    if (iTrackNTpc         > 0.) hTrackNTpc         -> Scale(1. / iTrackNTpc);
    if (iTrackNTot         > 0.) hTrackNTot         -> Scale(1. / iTrackNTot);
    if (iTrackPerMms       > 0.) hTrackPerMms       -> Scale(1. / iTrackPerMms);
    if (iTrackPerMap       > 0.) hTrackPerMap       -> Scale(1. / iTrackPerMap);
    if (iTrackPerInt       > 0.) hTrackPerInt       -> Scale(1. / iTrackPerInt);
    if (iTrackPerTpc       > 0.) hTrackPerTpc       -> Scale(1. / iTrackPerTpc);
    if (iTrackPerTot       > 0.) hTrackPerTot       -> Scale(1. / iTrackPerTot);
    if (iTrackChi2         > 0.) hTrackChi2         -> Scale(1. / iTrackChi2);
    if (iTrackNDF          > 0.) hTrackNDF          -> Scale(1. / iTrackNDF);
    if (iTrackQuality      > 0.) hTrackQuality      -> Scale(1. / iTrackQuality);
    if (iTrackDCAxy        > 0.) hTrackDCAxy        -> Scale(1. / iTrackDCAxy);
    if (iTrackDCAz         > 0.) hTrackDCAz         -> Scale(1. / iTrackDCAz);
    if (iTrackVx           > 0.) hTrackVx           -> Scale(1. / iTrackVx);
    if (iTrackVy           > 0.) hTrackVy           -> Scale(1. / iTrackVy);
    if (iTrackVz           > 0.) hTrackVz           -> Scale(1. / iTrackVz);
    if (iTrackEta          > 0.) hTrackEta          -> Scale(1. / iTrackEta);
    if (iTrackPhi          > 0.) hTrackPhi          -> Scale(1. / iTrackPhi);
    if (iTrackPt           > 0.) hTrackPt           -> Scale(1. / iTrackPt);
    if (iDeltaDCAxy        > 0.) hDeltaDCAxy        -> Scale(1. / iDeltaDCAxy);
    if (iDeltaDCAz         > 0.) hDeltaDCAz         -> Scale(1. / iDeltaDCAz);
    if (iDeltaEta          > 0.) hDeltaEta          -> Scale(1. / iDeltaEta);
    if (iDeltaPhi          > 0.) hDeltaPhi          -> Scale(1. / iDeltaPhi);
    if (iDeltaPt           > 0.) hDeltaPt           -> Scale(1. / iDeltaPt);
    if (iTrackPtVsNMms     > 0.) hTrackPtVsNMms     -> Scale(1. / iTrackPtVsNMms);
    if (iTrackPtVsNMap     > 0.) hTrackPtVsNMap     -> Scale(1. / iTrackPtVsNMap);
    if (iTrackPtVsNInt     > 0.) hTrackPtVsNInt     -> Scale(1. / iTrackPtVsNInt);
    if (iTrackPtVsNTpc     > 0.) hTrackPtVsNTpc     -> Scale(1. / iTrackPtVsNTpc);
    if (iTrackPtVsNTot     > 0.) hTrackPtVsNTot     -> Scale(1. / iTrackPtVsNTot);
    if (iTrackPtVsPerMap   > 0.) hTrackPtVsPerMap   -> Scale(1. / iTrackPtVsPerMap);
    if (iTrackPtVsPerInt   > 0.) hTrackPtVsPerInt   -> Scale(1. / iTrackPtVsPerInt);
    if (iTrackPtVsPerTpc   > 0.) hTrackPtVsPerTpc   -> Scale(1. / iTrackPtVsPerTpc);
    if (iTrackPtVsPerTot   > 0.) hTrackPtVsPerTot   -> Scale(1. / iTrackPtVsPerTot);
    if (iTrackPtVsChi2     > 0.) hTrackPtVsChi2     -> Scale(1. / iTrackPtVsChi2);
    if (iTrackPtVsNDF      > 0.) hTrackPtVsNDF      -> Scale(1. / iTrackPtVsNDF);
    if (iTrackPtVsQuality  > 0.) hTrackPtVsQuality  -> Scale(1. / iTrackPtVsQuality);
    if (iTrackPtVsDCAxy    > 0.) hTrackPtVsDCAxy    -> Scale(1. / iTrackPtVsDCAxy);
    if (iTrackPtVsDCAz     > 0.) hTrackPtVsDCAz     -> Scale(1. / iTrackPtVsDCAz);
    if (iDeltaDCAxyVsTrkPt > 0.) hDeltaDCAxyVsTrkPt -> Scale(1. / iDeltaDCAxyVsTrkPt);
    if (iDeltaDCAzVsTrkPt  > 0.) hDeltaDCAzVsTrkPt  -> Scale(1. / iDeltaDCAzVsTrkPt);
    if (iDeltaEtaVsTrkPt   > 0.) hDeltaEtaVsTrkPt   -> Scale(1. / iDeltaEtaVsTrkPt);
    if (iDeltaPhiVsTrkPt   > 0.) hDeltaPhiVsTrkPt   -> Scale(1. / iDeltaPhiVsTrkPt);
    if (iDeltaPtVsTrkPt    > 0.) hDeltaPtVsTrkPt    -> Scale(1. / iDeltaPtVsTrkPt);

    // truth histograms
    const Double_t iTruthNMms         = hTruthNMms         -> Integral();
    const Double_t iTruthNMap         = hTruthNMap         -> Integral();
    const Double_t iTruthNInt         = hTruthNInt         -> Integral();
    const Double_t iTruthNTpc         = hTruthNTpc         -> Integral();
    const Double_t iTruthNTot         = hTruthNTot         -> Integral();
    const Double_t iTruthEta          = hTruthEta          -> Integral();
    const Double_t iTruthPhi          = hTruthPhi          -> Integral();
    const Double_t iTruthPt           = hTruthPt           -> Integral();
    const Double_t iTruthVx           = hTruthVx           -> Integral();
    const Double_t iTruthVy           = hTruthVy           -> Integral();
    const Double_t iTruthVz           = hTruthVz           -> Integral();
    const Double_t iTruthEtaFrac      = hTruthEtaFrac      -> Integral();
    const Double_t iTruthPhiFrac      = hTruthPhiFrac      -> Integral();
    const Double_t iTruthPtFrac       = hTruthPtFrac       -> Integral();
    const Double_t iTruthEtaDiff      = hTruthEtaDiff      -> Integral();
    const Double_t iTruthPhiDiff      = hTruthPhiDiff      -> Integral();
    const Double_t iTruthPtDiff       = hTruthPtDiff       -> Integral();
    const Double_t iTruthVxDiff       = hTruthVxDiff       -> Integral();
    const Double_t iTruthVyDiff       = hTruthVyDiff       -> Integral();
    const Double_t iTruthVzDiff       = hTruthVzDiff       -> Integral();
    const Double_t iTruthVsTrackEta   = hTruthVsTrackEta   -> Integral();
    const Double_t iTruthVsTrackPhi   = hTruthVsTrackPhi   -> Integral();
    const Double_t iTruthVsTrackPt    = hTruthVsTrackPt    -> Integral();
    const Double_t iTruthVsTrackVx    = hTruthVsTrackVx    -> Integral();
    const Double_t iTruthVsTrackVy    = hTruthVsTrackVy    -> Integral();
    const Double_t iTruthVsTrackVz    = hTruthVsTrackVz    -> Integral();
    const Double_t iFracVsTruthEta    = hFracVsTruthEta    -> Integral();
    const Double_t iFracVsTruthPhi    = hFracVsTruthPhi    -> Integral();
    const Double_t iFracVsTruthPt     = hFracVsTruthPt     -> Integral();
    const Double_t iDiffVsTruthEta    = hDiffVsTruthEta    -> Integral();
    const Double_t iDiffVsTruthPhi    = hDiffVsTruthPhi    -> Integral();
    const Double_t iDiffVsTruthPt     = hDiffVsTruthPt     -> Integral();
    const Double_t iTruthPtVsNMms     = hTruthPtVsNMms     -> Integral();
    const Double_t iTruthPtVsNMap     = hTruthPtVsNMap     -> Integral();
    const Double_t iTruthPtVsNInt     = hTruthPtVsNInt     -> Integral();
    const Double_t iTruthPtVsNTpc     = hTruthPtVsNTpc     -> Integral();
    const Double_t iTruthPtVsNTot     = hTruthPtVsNTot     -> Integral();
    const Double_t iTruthPtVsChi2     = hTruthPtVsChi2     -> Integral();
    const Double_t iTruthPtVsNDF      = hTruthPtVsNDF      -> Integral();
    const Double_t iTruthPtVsQuality  = hTruthPtVsQuality  -> Integral();
    const Double_t iFracPtVsQuality   = hFracPtVsQuality   -> Integral();
    const Double_t iTruthPtVsDCAxy    = hTruthPtVsDCAxy    -> Integral();
    const Double_t iTruthPtVsDCAz     = hTruthPtVsDCAz     -> Integral();
    const Double_t iDeltaDCAxyVsTruPt = hDeltaDCAxyVsTruPt -> Integral();
    const Double_t iDeltaDCAzVsTruPt  = hDeltaDCAzVsTruPt  -> Integral();
    const Double_t iDeltaEtaVsTruPt   = hDeltaEtaVsTruPt   -> Integral();
    const Double_t iDeltaPhiVsTruPt   = hDeltaPhiVsTruPt   -> Integral();
    const Double_t iDeltaPtVsTruPt    = hDeltaPtVsTruPt    -> Integral();
    if (iTruthNMms         > 0.) hTruthNMms         -> Scale(1. / iTruthNMms);
    if (iTruthNMap         > 0.) hTruthNMap         -> Scale(1. / iTruthNMap);
    if (iTruthNInt         > 0.) hTruthNInt         -> Scale(1. / iTruthNInt);
    if (iTruthNTpc         > 0.) hTruthNTpc         -> Scale(1. / iTruthNTpc);
    if (iTruthNTot         > 0.) hTruthNTot         -> Scale(1. / iTruthNTot);
    if (iTruthEta          > 0.) hTruthEta          -> Scale(1. / iTruthEta);
    if (iTruthPhi          > 0.) hTruthPhi          -> Scale(1. / iTruthPhi);
    if (iTruthPt           > 0.) hTruthPt           -> Scale(1. / iTruthPt);
    if (iTruthVx           > 0.) hTruthVx           -> Scale(1. / iTruthVx);
    if (iTruthVy           > 0.) hTruthVy           -> Scale(1. / iTruthVy);
    if (iTruthVz           > 0.) hTruthVz           -> Scale(1. / iTruthVz);
    if (iTruthEtaFrac      > 0.) hTruthEtaFrac      -> Scale(1. / iTruthEtaFrac);
    if (iTruthPhiFrac      > 0.) hTruthPhiFrac      -> Scale(1. / iTruthPhiFrac);
    if (iTruthPtFrac       > 0.) hTruthPtFrac       -> Scale(1. / iTruthPtFrac);
    if (iTruthEtaDiff      > 0.) hTruthEtaDiff      -> Scale(1. / iTruthEtaDiff);
    if (iTruthPhiDiff      > 0.) hTruthPhiDiff      -> Scale(1. / iTruthPhiDiff);
    if (iTruthPtDiff       > 0.) hTruthPtDiff       -> Scale(1. / iTruthPtDiff);
    if (iTruthVxDiff       > 0.) hTruthVxDiff       -> Scale(1. / iTruthVxDiff);
    if (iTruthVyDiff       > 0.) hTruthVyDiff       -> Scale(1. / iTruthVyDiff);
    if (iTruthVzDiff       > 0.) hTruthVzDiff       -> Scale(1. / iTruthVzDiff);
    if (iTruthVsTrackEta   > 0.) hTruthVsTrackEta   -> Scale(1. / iTruthVsTrackEta);
    if (iTruthVsTrackPhi   > 0.) hTruthVsTrackPhi   -> Scale(1. / iTruthVsTrackPhi);
    if (iTruthVsTrackPt    > 0.) hTruthVsTrackPt    -> Scale(1. / iTruthVsTrackPt);
    if (iTruthVsTrackVx    > 0.) hTruthVsTrackVx    -> Scale(1. / iTruthVsTrackVx);
    if (iTruthVsTrackVy    > 0.) hTruthVsTrackVy    -> Scale(1. / iTruthVsTrackVy);
    if (iTruthVsTrackVz    > 0.) hTruthVsTrackVz    -> Scale(1. / iTruthVsTrackVz);
    if (iFracVsTruthEta    > 0.) hFracVsTruthEta    -> Scale(1. / iFracVsTruthEta);
    if (iFracVsTruthPhi    > 0.) hFracVsTruthPhi    -> Scale(1. / iFracVsTruthPhi);
    if (iFracVsTruthPt     > 0.) hFracVsTruthPt     -> Scale(1. / iFracVsTruthPt);
    if (iDiffVsTruthEta    > 0.) hDiffVsTruthEta    -> Scale(1. / iDiffVsTruthEta);
    if (iDiffVsTruthPhi    > 0.) hDiffVsTruthPhi    -> Scale(1. / iDiffVsTruthPhi);
    if (iDiffVsTruthPt     > 0.) hDiffVsTruthPt     -> Scale(1. / iDiffVsTruthPt);
    if (iTruthPtVsNMms     > 0.) hTruthPtVsNMms     -> Scale(1. / iTruthPtVsNMms);
    if (iTruthPtVsNMap     > 0.) hTruthPtVsNMap     -> Scale(1. / iTruthPtVsNMap);
    if (iTruthPtVsNInt     > 0.) hTruthPtVsNInt     -> Scale(1. / iTruthPtVsNInt);
    if (iTruthPtVsNTpc     > 0.) hTruthPtVsNTpc     -> Scale(1. / iTruthPtVsNTpc);
    if (iTruthPtVsNTot     > 0.) hTruthPtVsNTot     -> Scale(1. / iTruthPtVsNTot);
    if (iTruthPtVsChi2     > 0.) hTruthPtVsChi2     -> Scale(1. / iTruthPtVsChi2);
    if (iTruthPtVsNDF      > 0.) hTruthPtVsNDF      -> Scale(1. / iTruthPtVsNDF);
    if (iTruthPtVsQuality  > 0.) hTruthPtVsQuality  -> Scale(1. / iTruthPtVsQuality);
    if (iFracPtVsQuality   > 0.) hFracPtVsQuality   -> Scale(1. / iFracPtVsQuality);
    if (iTruthPtVsDCAxy    > 0.) hTruthPtVsDCAxy    -> Scale(1. / iTruthPtVsDCAxy);
    if (iTruthPtVsDCAz     > 0.) hTruthPtVsDCAz     -> Scale(1. / iTruthPtVsDCAz);
    if (iDeltaDCAxyVsTruPt > 0.) hDeltaDCAxyVsTruPt -> Scale(1. / iDeltaDCAxyVsTruPt);
    if (iDeltaDCAzVsTruPt  > 0.) hDeltaDCAzVsTruPt  -> Scale(1. / iDeltaDCAzVsTruPt);
    if (iDeltaEtaVsTruPt   > 0.) hDeltaEtaVsTruPt   -> Scale(1. / iDeltaEtaVsTruPt);
    if (iDeltaPhiVsTruPt   > 0.) hDeltaPhiVsTruPt   -> Scale(1. / iDeltaPhiVsTruPt);
    if (iDeltaPtVsTruPt    > 0.) hDeltaPtVsTruPt    -> Scale(1. / iDeltaPtVsTruPt);

    // weird histograms
    const Double_t iWeirdNMms       = hWeirdNMms       -> Integral();
    const Double_t iWeirdNMap       = hWeirdNMap       -> Integral();
    const Double_t iWeirdNInt       = hWeirdNInt       -> Integral();
    const Double_t iWeirdNTpc       = hWeirdNTpc       -> Integral();
    const Double_t iWeirdNTot       = hWeirdNTot       -> Integral();
    const Double_t iWeirdPerMms     = hWeirdPerMms     -> Integral();
    const Double_t iWeirdPerMap     = hWeirdPerMap     -> Integral();
    const Double_t iWeirdPerInt     = hWeirdPerInt     -> Integral();
    const Double_t iWeirdPerTpc     = hWeirdPerTpc     -> Integral();
    const Double_t iWeirdPerTot     = hWeirdPerTot     -> Integral();
    const Double_t iWeirdChi2       = hWeirdChi2       -> Integral();
    const Double_t iWeirdNDF        = hWeirdNDF        -> Integral();
    const Double_t iWeirdQuality    = hWeirdQuality    -> Integral();
    const Double_t iWeirdDCAxy      = hWeirdDCAxy      -> Integral();
    const Double_t iWeirdDCAz       = hWeirdDCAz       -> Integral();
    const Double_t iWeirdVx         = hWeirdVx         -> Integral();
    const Double_t iWeirdVy         = hWeirdVy         -> Integral();
    const Double_t iWeirdVz         = hWeirdVz         -> Integral();
    const Double_t iWeirdEta        = hWeirdEta        -> Integral();
    const Double_t iWeirdPhi        = hWeirdPhi        -> Integral();
    const Double_t iWeirdPt         = hWeirdPt         -> Integral();
    const Double_t iWeirdDeltaDCAxy = hWeirdDeltaDCAxy -> Integral();
    const Double_t iWeirdDeltaDCAz  = hWeirdDeltaDCAz  -> Integral();
    const Double_t iWeirdDeltaEta   = hWeirdDeltaEta   -> Integral();
    const Double_t iWeirdDeltaPhi   = hWeirdDeltaPhi   -> Integral();
    const Double_t iWeirdDeltaPt    = hWeirdDeltaPt    -> Integral();
    const Double_t iWeirdVxDiff     = hWeirdVxDiff     -> Integral();
    const Double_t iWeirdVyDiff     = hWeirdVyDiff     -> Integral();
    const Double_t iWeirdVzDiff     = hWeirdVzDiff     -> Integral();
    if (iWeirdNMms       > 0.) hWeirdNMms       -> Scale(1. / iWeirdNMms);
    if (iWeirdNMap       > 0.) hWeirdNMap       -> Scale(1. / iWeirdNMap);
    if (iWeirdNInt       > 0.) hWeirdNInt       -> Scale(1. / iWeirdNInt);
    if (iWeirdNTpc       > 0.) hWeirdNTpc       -> Scale(1. / iWeirdNTpc);
    if (iWeirdNTot       > 0.) hWeirdNTot       -> Scale(1. / iWeirdNTot);
    if (iWeirdPerMms     > 0.) hWeirdPerMms     -> Scale(1. / iWeirdPerMms);
    if (iWeirdPerMap     > 0.) hWeirdPerMap     -> Scale(1. / iWeirdPerMap);
    if (iWeirdPerInt     > 0.) hWeirdPerInt     -> Scale(1. / iWeirdPerInt);
    if (iWeirdPerTpc     > 0.) hWeirdPerTpc     -> Scale(1. / iWeirdPerTpc);
    if (iWeirdPerTot     > 0.) hWeirdPerTot     -> Scale(1. / iWeirdPerTot);
    if (iWeirdChi2       > 0.) hWeirdChi2       -> Scale(1. / iWeirdChi2);
    if (iWeirdNDF        > 0.) hWeirdNDF        -> Scale(1. / iWeirdNDF);
    if (iWeirdQuality    > 0.) hWeirdQuality    -> Scale(1. / iWeirdQuality);
    if (iWeirdDCAxy      > 0.) hWeirdDCAxy      -> Scale(1. / iWeirdDCAxy);
    if (iWeirdDCAz       > 0.) hWeirdDCAz       -> Scale(1. / iWeirdDCAz);
    if (iWeirdVx         > 0.) hWeirdVx         -> Scale(1. / iWeirdVx);
    if (iWeirdVy         > 0.) hWeirdVy         -> Scale(1. / iWeirdVy);
    if (iWeirdVz         > 0.) hWeirdVz         -> Scale(1. / iWeirdVz);
    if (iWeirdEta        > 0.) hWeirdEta        -> Scale(1. / iWeirdEta);
    if (iWeirdPhi        > 0.) hWeirdPhi        -> Scale(1. / iWeirdPhi);
    if (iWeirdPt         > 0.) hWeirdPt         -> Scale(1. / iWeirdPt);
    if (iWeirdDeltaDCAxy > 0.) hWeirdDeltaDCAxy -> Scale(1. / iWeirdDeltaDCAxy);
    if (iWeirdDeltaDCAz  > 0.) hWeirdDeltaDCAz  -> Scale(1. / iWeirdDeltaDCAz);
    if (iWeirdDeltaEta   > 0.) hWeirdDeltaEta   -> Scale(1. / iWeirdDeltaEta);
    if (iWeirdDeltaPhi   > 0.) hWeirdDeltaPhi   -> Scale(1. / iWeirdDeltaPhi);
    if (iWeirdDeltaPt    > 0.) hWeirdDeltaPt    -> Scale(1. / iWeirdDeltaPt);
    if (iWeirdVxDiff     > 0.) hWeirdVxDiff     -> Scale(1. / iWeirdVxDiff);
    if (iWeirdVyDiff     > 0.) hWeirdVyDiff     -> Scale(1. / iWeirdVyDiff);
    if (iWeirdVzDiff     > 0.) hWeirdVzDiff     -> Scale(1. / iWeirdVzDiff);

    // normal histograms
    const Double_t iNormalNMms       = hNormalNMms       -> Integral();
    const Double_t iNormalNMap       = hNormalNMap       -> Integral();
    const Double_t iNormalNInt       = hNormalNInt       -> Integral();
    const Double_t iNormalNTpc       = hNormalNTpc       -> Integral();
    const Double_t iNormalNTot       = hNormalNTot       -> Integral();
    const Double_t iNormalPerMms     = hNormalPerMms     -> Integral();
    const Double_t iNormalPerMap     = hNormalPerMap     -> Integral();
    const Double_t iNormalPerInt     = hNormalPerInt     -> Integral();
    const Double_t iNormalPerTpc     = hNormalPerTpc     -> Integral();
    const Double_t iNormalPerTot     = hNormalPerTot     -> Integral();
    const Double_t iNormalChi2       = hNormalChi2       -> Integral();
    const Double_t iNormalNDF        = hNormalNDF        -> Integral();
    const Double_t iNormalQuality    = hNormalQuality    -> Integral();
    const Double_t iNormalDCAxy      = hNormalDCAxy      -> Integral();
    const Double_t iNormalDCAz       = hNormalDCAz       -> Integral();
    const Double_t iNormalVx         = hNormalVx         -> Integral();
    const Double_t iNormalVy         = hNormalVy         -> Integral();
    const Double_t iNormalVz         = hNormalVz         -> Integral();
    const Double_t iNormalEta        = hNormalEta        -> Integral();
    const Double_t iNormalPhi        = hNormalPhi        -> Integral();
    const Double_t iNormalPt         = hNormalPt         -> Integral();
    const Double_t iNormalDeltaDCAxy = hNormalDeltaDCAxy -> Integral();
    const Double_t iNormalDeltaDCAz  = hNormalDeltaDCAz  -> Integral();
    const Double_t iNormalDeltaEta   = hNormalDeltaEta   -> Integral();
    const Double_t iNormalDeltaPhi   = hNormalDeltaPhi   -> Integral();
    const Double_t iNormalDeltaPt    = hNormalDeltaPt    -> Integral();
    const Double_t iNormalVxDiff     = hNormalVxDiff     -> Integral();
    const Double_t iNormalVyDiff     = hNormalVyDiff     -> Integral();
    const Double_t iNormalVzDiff     = hNormalVzDiff     -> Integral();
    if (iNormalNMms       > 0.) hNormalNMms       -> Scale(1. / iNormalNMms);
    if (iNormalNMap       > 0.) hNormalNMap       -> Scale(1. / iNormalNMap);
    if (iNormalNInt       > 0.) hNormalNInt       -> Scale(1. / iNormalNInt);
    if (iNormalNTpc       > 0.) hNormalNTpc       -> Scale(1. / iNormalNTpc);
    if (iNormalNTot       > 0.) hNormalNTot       -> Scale(1. / iNormalNTot);
    if (iNormalPerMms     > 0.) hNormalPerMms     -> Scale(1. / iNormalPerMms);
    if (iNormalPerMap     > 0.) hNormalPerMap     -> Scale(1. / iNormalPerMap);
    if (iNormalPerInt     > 0.) hNormalPerInt     -> Scale(1. / iNormalPerInt);
    if (iNormalPerTpc     > 0.) hNormalPerTpc     -> Scale(1. / iNormalPerTpc);
    if (iNormalPerTot     > 0.) hNormalPerTot     -> Scale(1. / iNormalPerTot);
    if (iNormalChi2       > 0.) hNormalChi2       -> Scale(1. / iNormalChi2);
    if (iNormalNDF        > 0.) hNormalNDF        -> Scale(1. / iNormalNDF);
    if (iNormalQuality    > 0.) hNormalQuality    -> Scale(1. / iNormalQuality);
    if (iNormalDCAxy      > 0.) hNormalDCAxy      -> Scale(1. / iNormalDCAxy);
    if (iNormalDCAz       > 0.) hNormalDCAz       -> Scale(1. / iNormalDCAz);
    if (iNormalVx         > 0.) hNormalVx         -> Scale(1. / iNormalVx);
    if (iNormalVy         > 0.) hNormalVy         -> Scale(1. / iNormalVy);
    if (iNormalVz         > 0.) hNormalVz         -> Scale(1. / iNormalVz);
    if (iNormalEta        > 0.) hNormalEta        -> Scale(1. / iNormalEta);
    if (iNormalPhi        > 0.) hNormalPhi        -> Scale(1. / iNormalPhi);
    if (iNormalPt         > 0.) hNormalPt         -> Scale(1. / iNormalPt);
    if (iNormalDeltaDCAxy > 0.) hNormalDeltaDCAxy -> Scale(1. / iNormalDeltaDCAxy);
    if (iNormalDeltaDCAz  > 0.) hNormalDeltaDCAz  -> Scale(1. / iNormalDeltaDCAz);
    if (iNormalDeltaEta   > 0.) hNormalDeltaEta   -> Scale(1. / iNormalDeltaEta);
    if (iNormalDeltaPhi   > 0.) hNormalDeltaPhi   -> Scale(1. / iNormalDeltaPhi);
    if (iNormalDeltaPt    > 0.) hNormalDeltaPt    -> Scale(1. / iNormalDeltaPt);
    if (iNormalVxDiff     > 0.) hNormalVxDiff     -> Scale(1. / iNormalVxDiff);
    if (iNormalVyDiff     > 0.) hNormalVyDiff     -> Scale(1. / iNormalVyDiff);
    if (iNormalVzDiff     > 0.) hNormalVzDiff     -> Scale(1. / iNormalVzDiff);

    // pile-up histograms
    const Double_t iTrackNMms_PU         = hTrackNMms_PU         -> Integral();
    const Double_t iTrackNMap_PU         = hTrackNMap_PU         -> Integral();
    const Double_t iTrackNInt_PU         = hTrackNInt_PU         -> Integral();
    const Double_t iTrackNTpc_PU         = hTrackNTpc_PU         -> Integral();
    const Double_t iTrackNTot_PU         = hTrackNTot_PU         -> Integral();
    const Double_t iTrackPerMms_PU       = hTrackPerMms_PU       -> Integral();
    const Double_t iTrackPerMap_PU       = hTrackPerMap_PU       -> Integral();
    const Double_t iTrackPerInt_PU       = hTrackPerInt_PU       -> Integral();
    const Double_t iTrackPerTpc_PU       = hTrackPerTpc_PU       -> Integral();
    const Double_t iTrackPerTot_PU       = hTrackPerTot_PU       -> Integral();
    const Double_t iTrackChi2_PU         = hTrackChi2_PU         -> Integral();
    const Double_t iTrackNDF_PU          = hTrackNDF_PU          -> Integral();
    const Double_t iTrackQuality_PU      = hTrackQuality_PU      -> Integral();
    const Double_t iTrackDCAxy_PU        = hTrackDCAxy_PU        -> Integral();
    const Double_t iTrackDCAz_PU         = hTrackDCAz_PU         -> Integral();
    const Double_t iTrackVx_PU           = hTrackVx_PU           -> Integral();
    const Double_t iTrackVy_PU           = hTrackVy_PU           -> Integral();
    const Double_t iTrackVz_PU           = hTrackVz_PU           -> Integral();
    const Double_t iTrackEta_PU          = hTrackEta_PU          -> Integral();
    const Double_t iTrackPhi_PU          = hTrackPhi_PU          -> Integral();
    const Double_t iTrackPt_PU           = hTrackPt_PU           -> Integral();
    const Double_t iDeltaDCAxy_PU        = hDeltaDCAxy_PU        -> Integral();
    const Double_t iDeltaDCAz_PU         = hDeltaDCAz_PU         -> Integral();
    const Double_t iDeltaEta_PU          = hDeltaEta_PU          -> Integral();
    const Double_t iDeltaPhi_PU          = hDeltaPhi_PU          -> Integral();
    const Double_t iDeltaPt_PU           = hDeltaPt_PU           -> Integral();
    const Double_t iTrackPtVsNMms_PU     = hTrackPtVsNMms_PU     -> Integral();
    const Double_t iTrackPtVsNMap_PU     = hTrackPtVsNMap_PU     -> Integral();
    const Double_t iTrackPtVsNInt_PU     = hTrackPtVsNInt_PU     -> Integral();
    const Double_t iTrackPtVsNTpc_PU     = hTrackPtVsNTpc_PU     -> Integral();
    const Double_t iTrackPtVsNTot_PU     = hTrackPtVsNTot_PU     -> Integral();
    const Double_t iTrackPtVsPerMap_PU   = hTrackPtVsPerMap_PU   -> Integral();
    const Double_t iTrackPtVsPerInt_PU   = hTrackPtVsPerInt_PU   -> Integral();
    const Double_t iTrackPtVsPerTpc_PU   = hTrackPtVsPerTpc_PU   -> Integral();
    const Double_t iTrackPtVsPerTot_PU   = hTrackPtVsPerTot_PU   -> Integral();
    const Double_t iTrackPtVsChi2_PU     = hTrackPtVsChi2_PU     -> Integral();
    const Double_t iTrackPtVsNDF_PU      = hTrackPtVsNDF_PU      -> Integral();
    const Double_t iTrackPtVsQuality_PU  = hTrackPtVsQuality_PU  -> Integral();
    const Double_t iTrackPtVsDCAxy_PU    = hTrackPtVsDCAxy_PU    -> Integral();
    const Double_t iTrackPtVsDCAz_PU     = hTrackPtVsDCAz_PU     -> Integral();
    const Double_t iDeltaDCAxyVsTrkPt_PU = hDeltaDCAxyVsTrkPt_PU -> Integral();
    const Double_t iDeltaDCAzVsTrkPt_PU  = hDeltaDCAzVsTrkPt_PU  -> Integral();
    const Double_t iDeltaEtaVsTrkPt_PU   = hDeltaEtaVsTrkPt_PU   -> Integral();
    const Double_t iDeltaPhiVsTrkPt_PU   = hDeltaPhiVsTrkPt_PU   -> Integral();
    const Double_t iDeltaPtVsTrkPt_PU    = hDeltaPtVsTrkPt_PU    -> Integral();
    if (iTrackNMms_PU         > 0.) hTrackNMms_PU         -> Scale(1. / iTrackNMms_PU);
    if (iTrackNMap_PU         > 0.) hTrackNMap_PU         -> Scale(1. / iTrackNMap_PU);
    if (iTrackNInt_PU         > 0.) hTrackNInt_PU         -> Scale(1. / iTrackNInt_PU);
    if (iTrackNTpc_PU         > 0.) hTrackNTpc_PU         -> Scale(1. / iTrackNTpc_PU);
    if (iTrackNTot_PU         > 0.) hTrackNTot_PU         -> Scale(1. / iTrackNTot_PU);
    if (iTrackPerMms_PU       > 0.) hTrackPerMms_PU       -> Scale(1. / iTrackPerMms_PU);
    if (iTrackPerMap_PU       > 0.) hTrackPerMap_PU       -> Scale(1. / iTrackPerMap_PU);
    if (iTrackPerInt_PU       > 0.) hTrackPerInt_PU       -> Scale(1. / iTrackPerInt_PU);
    if (iTrackPerTpc_PU       > 0.) hTrackPerTpc_PU       -> Scale(1. / iTrackPerTpc_PU);
    if (iTrackPerTot_PU       > 0.) hTrackPerTot_PU       -> Scale(1. / iTrackPerTot_PU);
    if (iTrackChi2_PU         > 0.) hTrackChi2_PU         -> Scale(1. / iTrackChi2_PU);
    if (iTrackNDF_PU          > 0.) hTrackNDF_PU          -> Scale(1. / iTrackNDF_PU);
    if (iTrackQuality_PU      > 0.) hTrackQuality_PU      -> Scale(1. / iTrackQuality_PU);
    if (iTrackDCAxy_PU        > 0.) hTrackDCAxy_PU        -> Scale(1. / iTrackDCAxy_PU);
    if (iTrackDCAz_PU         > 0.) hTrackDCAz_PU         -> Scale(1. / iTrackDCAz_PU);
    if (iTrackVx_PU           > 0.) hTrackVx_PU           -> Scale(1. / iTrackVx_PU);
    if (iTrackVy_PU           > 0.) hTrackVy_PU           -> Scale(1. / iTrackVy_PU);
    if (iTrackVz_PU           > 0.) hTrackVz_PU           -> Scale(1. / iTrackVz_PU);
    if (iTrackEta_PU          > 0.) hTrackEta_PU          -> Scale(1. / iTrackEta_PU);
    if (iTrackPhi_PU          > 0.) hTrackPhi_PU          -> Scale(1. / iTrackPhi_PU);
    if (iTrackPt_PU           > 0.) hTrackPt_PU           -> Scale(1. / iTrackPt_PU);
    if (iDeltaDCAxy_PU        > 0.) hDeltaDCAxy_PU        -> Scale(1. / iDeltaDCAxy_PU);
    if (iDeltaDCAz_PU         > 0.) hDeltaDCAz_PU         -> Scale(1. / iDeltaDCAz_PU);
    if (iDeltaEta_PU          > 0.) hDeltaEta_PU          -> Scale(1. / iDeltaEta_PU);
    if (iDeltaPhi_PU          > 0.) hDeltaPhi_PU          -> Scale(1. / iDeltaPhi_PU);
    if (iDeltaPt_PU           > 0.) hDeltaPt_PU           -> Scale(1. / iDeltaPt_PU);
    if (iTrackPtVsNMms_PU     > 0.) hTrackPtVsNMms_PU     -> Scale(1. / iTrackPtVsNMms_PU);
    if (iTrackPtVsNMap_PU     > 0.) hTrackPtVsNMap_PU     -> Scale(1. / iTrackPtVsNMap_PU);
    if (iTrackPtVsNInt_PU     > 0.) hTrackPtVsNInt_PU     -> Scale(1. / iTrackPtVsNInt_PU);
    if (iTrackPtVsNTpc_PU     > 0.) hTrackPtVsNTpc_PU     -> Scale(1. / iTrackPtVsNTpc_PU);
    if (iTrackPtVsNTot_PU     > 0.) hTrackPtVsNTot_PU     -> Scale(1. / iTrackPtVsNTot_PU);
    if (iTrackPtVsPerMap_PU   > 0.) hTrackPtVsPerMap_PU   -> Scale(1. / iTrackPtVsPerMap_PU);
    if (iTrackPtVsPerInt_PU   > 0.) hTrackPtVsPerInt_PU   -> Scale(1. / iTrackPtVsPerInt_PU);
    if (iTrackPtVsPerTpc_PU   > 0.) hTrackPtVsPerTpc_PU   -> Scale(1. / iTrackPtVsPerTpc_PU);
    if (iTrackPtVsPerTot_PU   > 0.) hTrackPtVsPerTot_PU   -> Scale(1. / iTrackPtVsPerTot_PU);
    if (iTrackPtVsChi2_PU     > 0.) hTrackPtVsChi2_PU     -> Scale(1. / iTrackPtVsChi2_PU);
    if (iTrackPtVsNDF_PU      > 0.) hTrackPtVsNDF_PU      -> Scale(1. / iTrackPtVsNDF_PU);
    if (iTrackPtVsQuality_PU  > 0.) hTrackPtVsQuality_PU  -> Scale(1. / iTrackPtVsQuality_PU);
    if (iTrackPtVsDCAxy_PU    > 0.) hTrackPtVsDCAxy_PU    -> Scale(1. / iTrackPtVsDCAxy_PU);
    if (iTrackPtVsDCAz_PU     > 0.) hTrackPtVsDCAz_PU     -> Scale(1. / iTrackPtVsDCAz_PU);
    if (iDeltaDCAxyVsTrkPt_PU > 0.) hDeltaDCAxyVsTrkPt_PU -> Scale(1. / iDeltaDCAxyVsTrkPt_PU);
    if (iDeltaDCAzVsTrkPt_PU  > 0.) hDeltaDCAzVsTrkPt_PU  -> Scale(1. / iDeltaDCAzVsTrkPt_PU);
    if (iDeltaEtaVsTrkPt_PU   > 0.) hDeltaEtaVsTrkPt_PU   -> Scale(1. / iDeltaEtaVsTrkPt_PU);
    if (iDeltaPhiVsTrkPt_PU   > 0.) hDeltaPhiVsTrkPt_PU   -> Scale(1. / iDeltaPhiVsTrkPt_PU);
    if (iDeltaPtVsTrkPt_PU    > 0.) hDeltaPtVsTrkPt_PU    -> Scale(1. / iDeltaPtVsTrkPt_PU);

    // with-pileup primary histograms
    const Double_t iPrimaryNMms_PU        = hPrimaryNMms_PU        -> Integral();
    const Double_t iPrimaryNMap_PU        = hPrimaryNMap_PU        -> Integral();
    const Double_t iPrimaryNInt_PU        = hPrimaryNInt_PU        -> Integral();
    const Double_t iPrimaryNTpc_PU        = hPrimaryNTpc_PU        -> Integral();
    const Double_t iPrimaryNTot_PU        = hPrimaryNTot_PU        -> Integral();
    const Double_t iPrimaryPerMms_PU      = hPrimaryPerMms_PU      -> Integral();
    const Double_t iPrimaryPerMap_PU      = hPrimaryPerMap_PU      -> Integral();
    const Double_t iPrimaryPerInt_PU      = hPrimaryPerInt_PU      -> Integral();
    const Double_t iPrimaryPerTpc_PU      = hPrimaryPerTpc_PU      -> Integral();
    const Double_t iPrimaryPerTot_PU      = hPrimaryPerTot_PU      -> Integral();
    const Double_t iPrimaryChi2_PU        = hPrimaryChi2_PU        -> Integral();
    const Double_t iPrimaryNDF_PU         = hPrimaryNDF_PU         -> Integral();
    const Double_t iPrimaryQuality_PU     = hPrimaryQuality_PU     -> Integral();
    const Double_t iPrimaryDCAxy_PU       = hPrimaryDCAxy_PU       -> Integral();
    const Double_t iPrimaryDCAz_PU        = hPrimaryDCAz_PU        -> Integral();
    const Double_t iPrimaryVx_PU          = hPrimaryVx_PU          -> Integral();
    const Double_t iPrimaryVy_PU          = hPrimaryVy_PU          -> Integral();
    const Double_t iPrimaryVz_PU          = hPrimaryVz_PU          -> Integral();
    const Double_t iPrimaryEta_PU         = hPrimaryEta_PU         -> Integral();
    const Double_t iPrimaryPhi_PU         = hPrimaryPhi_PU         -> Integral();
    const Double_t iPrimaryPt_PU          = hPrimaryPt_PU          -> Integral();
    const Double_t iDeltaPrimDCAxy_PU     = hDeltaPrimDCAxy_PU     -> Integral();
    const Double_t iDeltaPrimDCAz_PU      = hDeltaPrimDCAz_PU      -> Integral();
    const Double_t iDeltaPrimEta_PU       = hDeltaPrimEta_PU       -> Integral();
    const Double_t iDeltaPrimPhi_PU       = hDeltaPrimPhi_PU       -> Integral();
    const Double_t iDeltaPrimPt_PU        = hDeltaPrimPt_PU        -> Integral();
    const Double_t iPrimaryPtVsNMms_PU    = hPrimaryPtVsNMms_PU    -> Integral();
    const Double_t iPrimaryPtVsNMap_PU    = hPrimaryPtVsNMap_PU    -> Integral();
    const Double_t iPrimaryPtVsNInt_PU    = hPrimaryPtVsNInt_PU    -> Integral();
    const Double_t iPrimaryPtVsNTpc_PU    = hPrimaryPtVsNTpc_PU    -> Integral();
    const Double_t iPrimaryPtVsNTot_PU    = hPrimaryPtVsNTot_PU    -> Integral();
    const Double_t iPrimaryPtVsPerMms_PU  = hPrimaryPtVsPerMms_PU  -> Integral();
    const Double_t iPrimaryPtVsPerMap_PU  = hPrimaryPtVsPerMap_PU  -> Integral();
    const Double_t iPrimaryPtVsPerInt_PU  = hPrimaryPtVsPerInt_PU  -> Integral();
    const Double_t iPrimaryPtVsPerTpc_PU  = hPrimaryPtVsPerTpc_PU  -> Integral();
    const Double_t iPrimaryPtVsPerTot_PU  = hPrimaryPtVsPerTot_PU  -> Integral();
    const Double_t iPrimaryPtVsChi2_PU    = hPrimaryPtVsChi2_PU    -> Integral();
    const Double_t iPrimaryPtVsNDF_PU     = hPrimaryPtVsNDF_PU     -> Integral();
    const Double_t iPrimaryPtVsQuality_PU = hPrimaryPtVsQuality_PU -> Integral();
    const Double_t iPrimaryPtVsDCAxy_PU   = hPrimaryPtVsDCAxy_PU   -> Integral();
    const Double_t iPrimaryPtVsDCAz_PU    = hPrimaryPtVsDCAz_PU    -> Integral();
    const Double_t iDeltaDCAxyVsPrimPt_PU = hDeltaDCAxyVsPrimPt_PU -> Integral();
    const Double_t iDeltaDCAzVsPrimPt_PU  = hDeltaDCAzVsPrimPt_PU  -> Integral();
    const Double_t iDeltaEtaVsPrimPt_PU   = hDeltaEtaVsPrimPt_PU   -> Integral();
    const Double_t iDeltaPhiVsPrimPt_PU   = hDeltaPhiVsPrimPt_PU   -> Integral();
    const Double_t iDeltaPtVsPrimPt_PU    = hDeltaPtVsPrimPt_PU    -> Integral();
    if (iPrimaryNMms_PU        > 0.) hPrimaryNMms_PU        -> Scale(1. / iPrimaryNMms_PU);
    if (iPrimaryNMap_PU        > 0.) hPrimaryNMap_PU        -> Scale(1. / iPrimaryNMap_PU);
    if (iPrimaryNInt_PU        > 0.) hPrimaryNInt_PU        -> Scale(1. / iPrimaryNInt_PU);
    if (iPrimaryNTpc_PU        > 0.) hPrimaryNTpc_PU        -> Scale(1. / iPrimaryNTpc_PU);
    if (iPrimaryNTot_PU        > 0.) hPrimaryNTot_PU        -> Scale(1. / iPrimaryNTot_PU);
    if (iPrimaryPerMms_PU      > 0.) hPrimaryPerMms_PU      -> Scale(1. / iPrimaryPerMms_PU);
    if (iPrimaryPerMap_PU      > 0.) hPrimaryPerMap_PU      -> Scale(1. / iPrimaryPerMap_PU);
    if (iPrimaryPerInt_PU      > 0.) hPrimaryPerInt_PU      -> Scale(1. / iPrimaryPerInt_PU);
    if (iPrimaryPerTpc_PU      > 0.) hPrimaryPerTpc_PU      -> Scale(1. / iPrimaryPerTpc_PU);
    if (iPrimaryPerTot_PU      > 0.) hPrimaryPerTot_PU      -> Scale(1. / iPrimaryPerTot_PU);
    if (iPrimaryChi2_PU        > 0.) hPrimaryChi2_PU        -> Scale(1. / iPrimaryChi2_PU);
    if (iPrimaryNDF_PU         > 0.) hPrimaryNDF_PU         -> Scale(1. / iPrimaryNDF_PU);
    if (iPrimaryQuality_PU     > 0.) hPrimaryQuality_PU     -> Scale(1. / iPrimaryQuality_PU);
    if (iPrimaryDCAxy_PU       > 0.) hPrimaryDCAxy_PU       -> Scale(1. / iPrimaryDCAxy_PU);
    if (iPrimaryDCAz_PU        > 0.) hPrimaryDCAz_PU        -> Scale(1. / iPrimaryDCAz_PU);
    if (iPrimaryVx_PU          > 0.) hPrimaryVx_PU          -> Scale(1. / iPrimaryVx_PU);
    if (iPrimaryVy_PU          > 0.) hPrimaryVy_PU          -> Scale(1. / iPrimaryVy_PU);
    if (iPrimaryVz_PU          > 0.) hPrimaryVz_PU          -> Scale(1. / iPrimaryVz_PU);
    if (iPrimaryEta_PU         > 0.) hPrimaryEta_PU         -> Scale(1. / iPrimaryEta_PU);
    if (iPrimaryPhi_PU         > 0.) hPrimaryPhi_PU         -> Scale(1. / iPrimaryPhi_PU);
    if (iPrimaryPt_PU          > 0.) hPrimaryPt_PU          -> Scale(1. / iPrimaryPt_PU);
    if (iDeltaPrimDCAxy_PU     > 0.) hDeltaPrimDCAxy_PU     -> Scale(1. / iDeltaPrimDCAxy_PU);
    if (iDeltaPrimDCAz_PU      > 0.) hDeltaPrimDCAz_PU      -> Scale(1. / iDeltaPrimDCAz_PU);
    if (iDeltaPrimEta_PU       > 0.) hDeltaPrimEta_PU       -> Scale(1. / iDeltaPrimEta_PU);
    if (iDeltaPrimPhi_PU       > 0.) hDeltaPrimPhi_PU       -> Scale(1. / iDeltaPrimPhi_PU);
    if (iDeltaPrimPt_PU        > 0.) hDeltaPrimPt_PU        -> Scale(1. / iDeltaPrimPt_PU);
    if (iPrimaryPtVsNMms_PU    > 0.) hPrimaryPtVsNMms_PU    -> Scale(1. / iPrimaryPtVsNMms_PU);
    if (iPrimaryPtVsNMap_PU    > 0.) hPrimaryPtVsNMap_PU    -> Scale(1. / iPrimaryPtVsNMap_PU);
    if (iPrimaryPtVsNInt_PU    > 0.) hPrimaryPtVsNInt_PU    -> Scale(1. / iPrimaryPtVsNInt_PU);
    if (iPrimaryPtVsNTpc_PU    > 0.) hPrimaryPtVsNTpc_PU    -> Scale(1. / iPrimaryPtVsNTpc_PU);
    if (iPrimaryPtVsNTot_PU    > 0.) hPrimaryPtVsNTot_PU    -> Scale(1. / iPrimaryPtVsNTot_PU);
    if (iPrimaryPtVsPerMms_PU  > 0.) hPrimaryPtVsPerMms_PU  -> Scale(1. / iPrimaryPtVsPerMms_PU);
    if (iPrimaryPtVsPerMap_PU  > 0.) hPrimaryPtVsPerMap_PU  -> Scale(1. / iPrimaryPtVsPerMap_PU);
    if (iPrimaryPtVsPerInt_PU  > 0.) hPrimaryPtVsPerInt_PU  -> Scale(1. / iPrimaryPtVsPerInt_PU);
    if (iPrimaryPtVsPerTpc_PU  > 0.) hPrimaryPtVsPerTpc_PU  -> Scale(1. / iPrimaryPtVsPerTpc_PU);
    if (iPrimaryPtVsPerTot_PU  > 0.) hPrimaryPtVsPerTot_PU  -> Scale(1. / iPrimaryPtVsPerTot_PU);
    if (iPrimaryPtVsChi2_PU    > 0.) hPrimaryPtVsChi2_PU    -> Scale(1. / iPrimaryPtVsChi2_PU);
    if (iPrimaryPtVsNDF_PU     > 0.) hPrimaryPtVsNDF_PU     -> Scale(1. / iPrimaryPtVsNDF_PU);
    if (iPrimaryPtVsQuality_PU > 0.) hPrimaryPtVsQuality_PU -> Scale(1. / iPrimaryPtVsQuality_PU);
    if (iPrimaryPtVsDCAxy_PU   > 0.) hPrimaryPtVsDCAxy_PU   -> Scale(1. / iPrimaryPtVsDCAxy_PU);
    if (iPrimaryPtVsDCAz_PU    > 0.) hPrimaryPtVsDCAz_PU    -> Scale(1. / iPrimaryPtVsDCAz_PU);
    if (iDeltaDCAxyVsPrimPt_PU > 0.) hDeltaDCAxyVsPrimPt_PU -> Scale(1. / iDeltaDCAxyVsPrimPt_PU);
    if (iDeltaDCAzVsPrimPt_PU  > 0.) hDeltaDCAzVsPrimPt_PU  -> Scale(1. / iDeltaDCAzVsPrimPt_PU);
    if (iDeltaEtaVsPrimPt_PU   > 0.) hDeltaEtaVsPrimPt_PU   -> Scale(1. / iDeltaEtaVsPrimPt_PU);
    if (iDeltaPhiVsPrimPt_PU   > 0.) hDeltaPhiVsPrimPt_PU   -> Scale(1. / iDeltaPhiVsPrimPt_PU);
    if (iDeltaPtVsPrimPt_PU    > 0.) hDeltaPtVsPrimPt_PU    -> Scale(1. / iDeltaPtVsPrimPt_PU);

    // with-pileup non-primary histograms
    const Double_t iNonPrimNMms_PU        = hNonPrimNMms_PU        -> Integral();
    const Double_t iNonPrimNMap_PU        = hNonPrimNMap_PU        -> Integral();
    const Double_t iNonPrimNInt_PU        = hNonPrimNInt_PU        -> Integral();
    const Double_t iNonPrimNTpc_PU        = hNonPrimNTpc_PU        -> Integral();
    const Double_t iNonPrimNTot_PU        = hNonPrimNTot_PU        -> Integral();
    const Double_t iNonPrimPerMms_PU      = hNonPrimPerMms_PU      -> Integral();
    const Double_t iNonPrimPerMap_PU      = hNonPrimPerMap_PU      -> Integral();
    const Double_t iNonPrimPerInt_PU      = hNonPrimPerInt_PU      -> Integral();
    const Double_t iNonPrimPerTpc_PU      = hNonPrimPerTpc_PU      -> Integral();
    const Double_t iNonPrimPerTot_PU      = hNonPrimPerTot_PU      -> Integral();
    const Double_t iNonPrimChi2_PU        = hNonPrimChi2_PU        -> Integral();
    const Double_t iNonPrimNDF_PU         = hNonPrimNDF_PU         -> Integral();
    const Double_t iNonPrimQuality_PU     = hNonPrimQuality_PU     -> Integral();
    const Double_t iNonPrimDCAxy_PU       = hNonPrimDCAxy_PU       -> Integral();
    const Double_t iNonPrimDCAz_PU        = hNonPrimDCAz_PU        -> Integral();
    const Double_t iNonPrimVx_PU          = hNonPrimVx_PU          -> Integral();
    const Double_t iNonPrimVy_PU          = hNonPrimVy_PU          -> Integral();
    const Double_t iNonPrimVz_PU          = hNonPrimVz_PU          -> Integral();
    const Double_t iNonPrimEta_PU         = hNonPrimEta_PU         -> Integral();
    const Double_t iNonPrimPhi_PU         = hNonPrimPhi_PU         -> Integral();
    const Double_t iNonPrimPt_PU          = hNonPrimPt_PU          -> Integral();
    const Double_t iDeltaNoPrDCAxy_PU     = hDeltaNoPrDCAxy_PU     -> Integral();
    const Double_t iDeltaNoPrDCAz_PU      = hDeltaNoPrDCAz_PU      -> Integral();
    const Double_t iDeltaNoPrEta_PU       = hDeltaNoPrEta_PU       -> Integral();
    const Double_t iDeltaNoPrPhi_PU       = hDeltaNoPrPhi_PU       -> Integral();
    const Double_t iDeltaNoPrPt_PU        = hDeltaNoPrPt_PU        -> Integral();
    const Double_t iNonPrimPtVsNMms_PU    = hNonPrimPtVsNMms_PU    -> Integral();
    const Double_t iNonPrimPtVsNMap_PU    = hNonPrimPtVsNMap_PU    -> Integral();
    const Double_t iNonPrimPtVsNInt_PU    = hNonPrimPtVsNInt_PU    -> Integral();
    const Double_t iNonPrimPtVsNTpc_PU    = hNonPrimPtVsNTpc_PU    -> Integral();
    const Double_t iNonPrimPtVsNTot_PU    = hNonPrimPtVsNTot_PU    -> Integral();
    const Double_t iNonPrimPtVsPerMms_PU  = hNonPrimPtVsPerMms_PU  -> Integral();
    const Double_t iNonPrimPtVsPerMap_PU  = hNonPrimPtVsPerMap_PU  -> Integral();
    const Double_t iNonPrimPtVsPerInt_PU  = hNonPrimPtVsPerInt_PU  -> Integral();
    const Double_t iNonPrimPtVsPerTpc_PU  = hNonPrimPtVsPerTpc_PU  -> Integral();
    const Double_t iNonPrimPtVsPerTot_PU  = hNonPrimPtVsPerTot_PU  -> Integral();
    const Double_t iNonPrimPtVsChi2_PU    = hNonPrimPtVsChi2_PU    -> Integral();
    const Double_t iNonPrimPtVsNDF_PU     = hNonPrimPtVsNDF_PU     -> Integral();
    const Double_t iNonPrimPtVsQuality_PU = hNonPrimPtVsQuality_PU -> Integral();
    const Double_t iNonPrimPtVsDCAxy_PU   = hNonPrimPtVsDCAxy_PU   -> Integral();
    const Double_t iNonPrimPtVsDCAz_PU    = hNonPrimPtVsDCAz_PU    -> Integral();
    const Double_t iDeltaDCAxyVsNoPrPt_PU = hDeltaDCAxyVsNoPrPt_PU -> Integral();
    const Double_t iDeltaDCAzVsNoPrPt_PU  = hDeltaDCAzVsNoPrPt_PU  -> Integral();
    const Double_t iDeltaEtaVsNoPrPt_PU   = hDeltaEtaVsNoPrPt_PU   -> Integral();
    const Double_t iDeltaPhiVsNoPrPt_PU   = hDeltaPhiVsNoPrPt_PU   -> Integral();
    if (iNonPrimNMms_PU        > 0.) hNonPrimNMms_PU        -> Scale(1. / iNonPrimNMms_PU);
    if (iNonPrimNMap_PU        > 0.) hNonPrimNMap_PU        -> Scale(1. / iNonPrimNMap_PU);
    if (iNonPrimNInt_PU        > 0.) hNonPrimNInt_PU        -> Scale(1. / iNonPrimNInt_PU);
    if (iNonPrimNTpc_PU        > 0.) hNonPrimNTpc_PU        -> Scale(1. / iNonPrimNTpc_PU);
    if (iNonPrimNTot_PU        > 0.) hNonPrimNTot_PU        -> Scale(1. / iNonPrimNTot_PU);
    if (iNonPrimPerMms_PU      > 0.) hNonPrimPerMms_PU      -> Scale(1. / iNonPrimPerMms_PU);
    if (iNonPrimPerMap_PU      > 0.) hNonPrimPerMap_PU      -> Scale(1. / iNonPrimPerMap_PU);
    if (iNonPrimPerInt_PU      > 0.) hNonPrimPerInt_PU      -> Scale(1. / iNonPrimPerInt_PU);
    if (iNonPrimPerTpc_PU      > 0.) hNonPrimPerTpc_PU      -> Scale(1. / iNonPrimPerTpc_PU);
    if (iNonPrimPerTot_PU      > 0.) hNonPrimPerTot_PU      -> Scale(1. / iNonPrimPerTot_PU);
    if (iNonPrimChi2_PU        > 0.) hNonPrimChi2_PU        -> Scale(1. / iNonPrimChi2_PU);
    if (iNonPrimNDF_PU         > 0.) hNonPrimNDF_PU         -> Scale(1. / iNonPrimNDF_PU);
    if (iNonPrimQuality_PU     > 0.) hNonPrimQuality_PU     -> Scale(1. / iNonPrimQuality_PU);
    if (iNonPrimDCAxy_PU       > 0.) hNonPrimDCAxy_PU       -> Scale(1. / iNonPrimDCAxy_PU);
    if (iNonPrimDCAz_PU        > 0.) hNonPrimDCAz_PU        -> Scale(1. / iNonPrimDCAz_PU);
    if (iNonPrimVx_PU          > 0.) hNonPrimVx_PU          -> Scale(1. / iNonPrimVx_PU);
    if (iNonPrimVy_PU          > 0.) hNonPrimVy_PU          -> Scale(1. / iNonPrimVy_PU);
    if (iNonPrimVz_PU          > 0.) hNonPrimVz_PU          -> Scale(1. / iNonPrimVz_PU);
    if (iNonPrimEta_PU         > 0.) hNonPrimEta_PU         -> Scale(1. / iNonPrimEta_PU);
    if (iNonPrimPhi_PU         > 0.) hNonPrimPhi_PU         -> Scale(1. / iNonPrimPhi_PU);
    if (iNonPrimPt_PU          > 0.) hNonPrimPt_PU          -> Scale(1. / iNonPrimPt_PU);
    if (iDeltaNoPrDCAxy_PU     > 0.) hDeltaNoPrDCAxy_PU     -> Scale(1. / iDeltaNoPrDCAxy_PU);
    if (iDeltaNoPrDCAz_PU      > 0.) hDeltaNoPrDCAz_PU      -> Scale(1. / iDeltaNoPrDCAz_PU);
    if (iDeltaNoPrEta_PU       > 0.) hDeltaNoPrEta_PU       -> Scale(1. / iDeltaNoPrEta_PU);
    if (iDeltaNoPrPhi_PU       > 0.) hDeltaNoPrPhi_PU       -> Scale(1. / iDeltaNoPrPhi_PU);
    if (iDeltaNoPrPt_PU        > 0.) hDeltaNoPrPt_PU        -> Scale(1. / iDeltaNoPrPt_PU);
    if (iNonPrimPtVsNMms_PU    > 0.) hNonPrimPtVsNMms_PU    -> Scale(1. / iNonPrimPtVsNMms_PU);
    if (iNonPrimPtVsNMap_PU    > 0.) hNonPrimPtVsNMap_PU    -> Scale(1. / iNonPrimPtVsNMap_PU);
    if (iNonPrimPtVsNInt_PU    > 0.) hNonPrimPtVsNInt_PU    -> Scale(1. / iNonPrimPtVsNInt_PU);
    if (iNonPrimPtVsNTpc_PU    > 0.) hNonPrimPtVsNTpc_PU    -> Scale(1. / iNonPrimPtVsNTpc_PU);
    if (iNonPrimPtVsNTot_PU    > 0.) hNonPrimPtVsNTot_PU    -> Scale(1. / iNonPrimPtVsNTot_PU);
    if (iNonPrimPtVsPerMms_PU  > 0.) hNonPrimPtVsPerMms_PU  -> Scale(1. / iNonPrimPtVsPerMms_PU);
    if (iNonPrimPtVsPerMap_PU  > 0.) hNonPrimPtVsPerMap_PU  -> Scale(1. / iNonPrimPtVsPerMap_PU);
    if (iNonPrimPtVsPerInt_PU  > 0.) hNonPrimPtVsPerInt_PU  -> Scale(1. / iNonPrimPtVsPerInt_PU);
    if (iNonPrimPtVsPerTpc_PU  > 0.) hNonPrimPtVsPerTpc_PU  -> Scale(1. / iNonPrimPtVsPerTpc_PU);
    if (iNonPrimPtVsPerTot_PU  > 0.) hNonPrimPtVsPerTot_PU  -> Scale(1. / iNonPrimPtVsPerTot_PU);
    if (iNonPrimPtVsChi2_PU    > 0.) hNonPrimPtVsChi2_PU    -> Scale(1. / iNonPrimPtVsChi2_PU);
    if (iNonPrimPtVsNDF_PU     > 0.) hNonPrimPtVsNDF_PU     -> Scale(1. / iNonPrimPtVsNDF_PU);
    if (iNonPrimPtVsQuality_PU > 0.) hNonPrimPtVsQuality_PU -> Scale(1. / iNonPrimPtVsQuality_PU);
    if (iNonPrimPtVsDCAxy_PU   > 0.) hNonPrimPtVsDCAxy_PU   -> Scale(1. / iNonPrimPtVsDCAxy_PU);
    if (iNonPrimPtVsDCAz_PU    > 0.) hNonPrimPtVsDCAz_PU    -> Scale(1. / iNonPrimPtVsDCAz_PU);
    if (iDeltaDCAxyVsNoPrPt_PU > 0.) hDeltaDCAxyVsNoPrPt_PU -> Scale(1. / iDeltaDCAxyVsNoPrPt_PU);
    if (iDeltaDCAzVsNoPrPt_PU  > 0.) hDeltaDCAzVsNoPrPt_PU  -> Scale(1. / iDeltaDCAzVsNoPrPt_PU);
    if (iDeltaEtaVsNoPrPt_PU   > 0.) hDeltaEtaVsNoPrPt_PU   -> Scale(1. / iDeltaEtaVsNoPrPt_PU);
    if (iDeltaPhiVsNoPrPt_PU   > 0.) hDeltaPhiVsNoPrPt_PU   -> Scale(1. / iDeltaPhiVsNoPrPt_PU);
  }  // end if (doIntNorm)
  return;

}  // end Analyze()



void STrackCutStudy::End() {

  // announce method
  cout << "    Ending:" << endl;
  SetHistStyles();
  CreatePlots();
  SaveHists();

  // close files
  fOut  -> cd();
  fOut  -> Close();
  fInEO -> cd();
  fInEO -> Close();
  fInPU -> cd();
  fInPU -> Close();
  cout << "      Closed files.\n"
       << "  Finished track cut study!\n"
       << endl;
  return ;

}  // end End()



// private methods ------------------------------------------------------------

void STrackCutStudy::InitFiles() {

  // open files
  fOut  = new TFile(sOutfile.Data(),  "recreate");
  fInEO = new TFile(sInFileEO.Data(), "read");
  fInPU = new TFile(sInFilePU.Data(), "read");
  if (!fOut || !fInEO || !fInPU) {
    cerr << "PANIC: couldn't open a file!\n"
         << "       fOut = " << fOut << ", fInEO = " << fInEO << ", fInPU = " << fInPU << "\n"
         << endl;
    assert(fOut && fInEO && fInPU);
  }
  cout << "      Initialized files." << endl;
  return;

}  // end 'InitFiles()'



void STrackCutStudy::InitTuples() {

  // grab tuples
  ntTrkEO = (TNtuple*) fInEO -> Get(sInTupleEO.Data());
  ntTrkPU = (TNtuple*) fInPU -> Get(sInTuplePU.Data());
  if (!ntTrkEO || !ntTrkPU) {
    cerr << "PANIC: couldn't grab an input Ntuple!\n"
         << "       ntTrkEO = " << ntTrkEO << ", ntTrkPU = " << ntTrkPU << "\n"
         << endl;
    assert(ntTrkEO && ntTrkPU);
  }
  cout << "      Initialized input ntuples." << endl;

  // set embed-only branch addresses
  ntTrkEO -> SetBranchAddress("event",           &event);
  ntTrkEO -> SetBranchAddress("seed",            &seed);
  ntTrkEO -> SetBranchAddress("trackID",         &trackID);
  ntTrkEO -> SetBranchAddress("crossing",        &crossing);
  ntTrkEO -> SetBranchAddress("px",              &px);
  ntTrkEO -> SetBranchAddress("py",              &py);
  ntTrkEO -> SetBranchAddress("pz",              &pz);
  ntTrkEO -> SetBranchAddress("pt",              &pt);
  ntTrkEO -> SetBranchAddress("eta",             &eta);
  ntTrkEO -> SetBranchAddress("phi",             &phi);
  ntTrkEO -> SetBranchAddress("deltapt",         &deltapt);
  ntTrkEO -> SetBranchAddress("deltaeta",        &deltaeta);
  ntTrkEO -> SetBranchAddress("deltaphi",        &deltaphi);
  ntTrkEO -> SetBranchAddress("charge",          &charge);
  ntTrkEO -> SetBranchAddress("quality",         &quality);
  ntTrkEO -> SetBranchAddress("chisq",           &chisq);
  ntTrkEO -> SetBranchAddress("ndf",             &ndf);
  ntTrkEO -> SetBranchAddress("nhits",           &nhits);
  ntTrkEO -> SetBranchAddress("nmaps",           &nmaps);
  ntTrkEO -> SetBranchAddress("nintt",           &nintt);
  ntTrkEO -> SetBranchAddress("ntpc",            &ntpc);
  ntTrkEO -> SetBranchAddress("nmms",            &nmms);
  ntTrkEO -> SetBranchAddress("ntpc1",           &ntpc1);
  ntTrkEO -> SetBranchAddress("ntpc11",          &ntpc11);
  ntTrkEO -> SetBranchAddress("ntpc2",           &ntpc2);
  ntTrkEO -> SetBranchAddress("ntpc3",           &ntpc3);
  ntTrkEO -> SetBranchAddress("nlmaps",          &nlmaps);
  ntTrkEO -> SetBranchAddress("nlintt",          &nlintt);
  ntTrkEO -> SetBranchAddress("nltpc",           &nltpc);
  ntTrkEO -> SetBranchAddress("nlmms",           &nlmms);
  ntTrkEO -> SetBranchAddress("layers",          &layers);
  ntTrkEO -> SetBranchAddress("vertexID",        &vertexID);
  ntTrkEO -> SetBranchAddress("vx",              &vx);
  ntTrkEO -> SetBranchAddress("vy",              &vy);
  ntTrkEO -> SetBranchAddress("vz",              &vz);
  ntTrkEO -> SetBranchAddress("dca2d",           &dca2d);
  ntTrkEO -> SetBranchAddress("dca2dsigma",      &dca2dsigma);
  ntTrkEO -> SetBranchAddress("dca3dxy",         &dca3dxy);
  ntTrkEO -> SetBranchAddress("dca3dxysigma",    &dca3dxysigma);
  ntTrkEO -> SetBranchAddress("dca3dz",          &dca3dz);
  ntTrkEO -> SetBranchAddress("dca3dzsigma",     &dca3dzsigma);
  ntTrkEO -> SetBranchAddress("pcax",            &pcax);
  ntTrkEO -> SetBranchAddress("pcay",            &pcay);
  ntTrkEO -> SetBranchAddress("pcaz",            &pcaz);
  ntTrkEO -> SetBranchAddress("gtrackID",        &gtrackID);
  ntTrkEO -> SetBranchAddress("gflavor",         &gflavor);
  ntTrkEO -> SetBranchAddress("gnhits",          &gnhits);
  ntTrkEO -> SetBranchAddress("gnmaps",          &gnmaps);
  ntTrkEO -> SetBranchAddress("gnintt",          &gnintt);
  ntTrkEO -> SetBranchAddress("gntpc",           &gntpc);
  ntTrkEO -> SetBranchAddress("gnmms",           &gnmms);
  ntTrkEO -> SetBranchAddress("gnlmaps",         &gnlmaps);
  ntTrkEO -> SetBranchAddress("gnlintt",         &gnlintt);
  ntTrkEO -> SetBranchAddress("gnltpc",          &gnltpc);
  ntTrkEO -> SetBranchAddress("gnlmms",          &gnlmms);
  ntTrkEO -> SetBranchAddress("gpx",             &gpx);
  ntTrkEO -> SetBranchAddress("gpy",             &gpy);
  ntTrkEO -> SetBranchAddress("gpz",             &gpz);
  ntTrkEO -> SetBranchAddress("gpt",             &gpt);
  ntTrkEO -> SetBranchAddress("geta",            &geta);
  ntTrkEO -> SetBranchAddress("gphi",            &gphi);
  ntTrkEO -> SetBranchAddress("gvx",             &gvx);
  ntTrkEO -> SetBranchAddress("gvy",             &gvy);
  ntTrkEO -> SetBranchAddress("gvz",             &gvz);
  ntTrkEO -> SetBranchAddress("gvt",             &gvt);
  ntTrkEO -> SetBranchAddress("gfpx",            &gfpx);
  ntTrkEO -> SetBranchAddress("gfpy",            &gfpy);
  ntTrkEO -> SetBranchAddress("gfpz",            &gfpz);
  ntTrkEO -> SetBranchAddress("gfx",             &gfx);
  ntTrkEO -> SetBranchAddress("gfy",             &gfy);
  ntTrkEO -> SetBranchAddress("gfz",             &gfz);
  ntTrkEO -> SetBranchAddress("gembed",          &gembed);
  ntTrkEO -> SetBranchAddress("gprimary",        &gprimary);
  ntTrkEO -> SetBranchAddress("nfromtruth",      &nfromtruth);
  ntTrkEO -> SetBranchAddress("nwrong",          &nwrong);
  ntTrkEO -> SetBranchAddress("ntrumaps",        &ntrumaps);
  ntTrkEO -> SetBranchAddress("ntruintt",        &ntruintt);
  ntTrkEO -> SetBranchAddress("ntrutpc",         &ntrutpc);
  ntTrkEO -> SetBranchAddress("ntrumms",         &ntrumms);
  ntTrkEO -> SetBranchAddress("ntrutpc1",        &ntrutpc1);
  ntTrkEO -> SetBranchAddress("ntrutpc11",       &ntrutpc11);
  ntTrkEO -> SetBranchAddress("ntrutpc2",        &ntrutpc2);
  ntTrkEO -> SetBranchAddress("ntrutpc3",        &ntrutpc3);
  ntTrkEO -> SetBranchAddress("layersfromtruth", &layersfromtruth);
  ntTrkEO -> SetBranchAddress("nhittpcall",      &nhittpcall);
  ntTrkEO -> SetBranchAddress("nhittpcin",       &nhittpcin);
  ntTrkEO -> SetBranchAddress("nhittpcmid",      &nhittpcmid);
  ntTrkEO -> SetBranchAddress("nhittpcout",      &nhittpcout);
  ntTrkEO -> SetBranchAddress("nclusall",        &nclusall);
  ntTrkEO -> SetBranchAddress("nclustpc",        &nclustpc);
  ntTrkEO -> SetBranchAddress("nclusintt",       &nclusintt);
  ntTrkEO -> SetBranchAddress("nclusmaps",       &nclusmaps);
  ntTrkEO -> SetBranchAddress("nclusmms",        &nclusmms);

  // set with-pileup branch
  ntTrkPU -> SetBranchAddress("event",           &pu_event);
  ntTrkPU -> SetBranchAddress("seed",            &pu_seed);
  ntTrkPU -> SetBranchAddress("gntracks",        &pu_gntracks);
  ntTrkPU -> SetBranchAddress("gtrackID",        &pu_gtrackID);
  ntTrkPU -> SetBranchAddress("gflavor",         &pu_gflavor);
  ntTrkPU -> SetBranchAddress("gnhits",          &pu_gnhits);
  ntTrkPU -> SetBranchAddress("gnmaps",          &pu_gnmaps);
  ntTrkPU -> SetBranchAddress("gnintt",          &pu_gnintt);
  ntTrkPU -> SetBranchAddress("gnmms",           &pu_gnmms);
  ntTrkPU -> SetBranchAddress("gnintt1",         &pu_gnintt1);
  ntTrkPU -> SetBranchAddress("gnintt2",         &pu_gnintt2);
  ntTrkPU -> SetBranchAddress("gnintt3",         &pu_gnintt3);
  ntTrkPU -> SetBranchAddress("gnintt4",         &pu_gnintt4);
  ntTrkPU -> SetBranchAddress("gnintt5",         &pu_gnintt5);
  ntTrkPU -> SetBranchAddress("gnintt6",         &pu_gnintt6);
  ntTrkPU -> SetBranchAddress("gnintt7",         &pu_gnintt7);
  ntTrkPU -> SetBranchAddress("gnintt8",         &pu_gnintt8);
  ntTrkPU -> SetBranchAddress("gntpc",           &pu_gntpc);
  ntTrkPU -> SetBranchAddress("gnlmaps",         &pu_gnlmaps);
  ntTrkPU -> SetBranchAddress("gnlintt",         &pu_gnlintt);
  ntTrkPU -> SetBranchAddress("gnltpc",          &pu_gnltpc);
  ntTrkPU -> SetBranchAddress("gnlmms",          &pu_gnlmms);
  ntTrkPU -> SetBranchAddress("gpx",             &pu_gpx);
  ntTrkPU -> SetBranchAddress("gpy",             &pu_gpy);
  ntTrkPU -> SetBranchAddress("gpz",             &pu_gpz);
  ntTrkPU -> SetBranchAddress("gpt",             &pu_gpt);
  ntTrkPU -> SetBranchAddress("geta",            &pu_geta);
  ntTrkPU -> SetBranchAddress("gphi",            &pu_gphi);
  ntTrkPU -> SetBranchAddress("gvx",             &pu_gvx);
  ntTrkPU -> SetBranchAddress("gvy",             &pu_gvy);
  ntTrkPU -> SetBranchAddress("gvz",             &pu_gvz);
  ntTrkPU -> SetBranchAddress("gvt",             &pu_gvt);
  ntTrkPU -> SetBranchAddress("gfpx",            &pu_gfpx);
  ntTrkPU -> SetBranchAddress("gfpy",            &pu_gfpy);
  ntTrkPU -> SetBranchAddress("gfpz",            &pu_gfpz);
  ntTrkPU -> SetBranchAddress("gfx",             &pu_gfx);
  ntTrkPU -> SetBranchAddress("gfy",             &pu_gfy);
  ntTrkPU -> SetBranchAddress("gfz",             &pu_gfz);
  ntTrkPU -> SetBranchAddress("gembed",          &pu_gembed);
  ntTrkPU -> SetBranchAddress("gprimary",        &pu_gprimary);
  ntTrkPU -> SetBranchAddress("trackID",         &pu_trackID);
  ntTrkPU -> SetBranchAddress("px",              &pu_px);
  ntTrkPU -> SetBranchAddress("py",              &pu_py);
  ntTrkPU -> SetBranchAddress("pz",              &pu_pz);
  ntTrkPU -> SetBranchAddress("pt",              &pu_pt);
  ntTrkPU -> SetBranchAddress("eta",             &pu_eta);
  ntTrkPU -> SetBranchAddress("phi",             &pu_phi);
  ntTrkPU -> SetBranchAddress("deltapt",         &pu_deltapt);
  ntTrkPU -> SetBranchAddress("deltaeta",        &pu_deltaeta);
  ntTrkPU -> SetBranchAddress("deltaphi",        &pu_deltaphi);
  ntTrkPU -> SetBranchAddress("charge",          &pu_charge);
  ntTrkPU -> SetBranchAddress("quality",         &pu_quality);
  ntTrkPU -> SetBranchAddress("chisq",           &pu_chisq);
  ntTrkPU -> SetBranchAddress("ndf",             &pu_ndf);
  ntTrkPU -> SetBranchAddress("nhits",           &pu_nhits);
  ntTrkPU -> SetBranchAddress("layers",          &pu_layers);
  ntTrkPU -> SetBranchAddress("nmaps",           &pu_nmaps);
  ntTrkPU -> SetBranchAddress("nintt",           &pu_nintt);
  ntTrkPU -> SetBranchAddress("ntpc",            &pu_ntpc);
  ntTrkPU -> SetBranchAddress("nmms",            &pu_nmms);
  ntTrkPU -> SetBranchAddress("ntpc1",           &pu_ntpc1);
  ntTrkPU -> SetBranchAddress("ntpc11",          &pu_ntpc11);
  ntTrkPU -> SetBranchAddress("ntpc2",           &pu_ntpc2);
  ntTrkPU -> SetBranchAddress("ntpc3",           &pu_ntpc3);
  ntTrkPU -> SetBranchAddress("nlmaps",          &pu_nlmaps);
  ntTrkPU -> SetBranchAddress("nlintt",          &pu_nlintt);
  ntTrkPU -> SetBranchAddress("nltpc",           &pu_nltpc);
  ntTrkPU -> SetBranchAddress("nlmms",           &pu_nlmms);
  ntTrkPU -> SetBranchAddress("vertexID",        &pu_vertexID);
  ntTrkPU -> SetBranchAddress("vx",              &pu_vx);
  ntTrkPU -> SetBranchAddress("vy",              &pu_vy);
  ntTrkPU -> SetBranchAddress("vz",              &pu_vz);
  ntTrkPU -> SetBranchAddress("dca2d",           &pu_dca2d);
  ntTrkPU -> SetBranchAddress("dca2dsigma",      &pu_dca2dsigma);
  ntTrkPU -> SetBranchAddress("dca3dxy",         &pu_dca3dxy);
  ntTrkPU -> SetBranchAddress("dca3dxysigma",    &pu_dca3dxysigma);
  ntTrkPU -> SetBranchAddress("dca3dz",          &pu_dca3dz);
  ntTrkPU -> SetBranchAddress("dca3dzsigma",     &pu_dca3dzsigma);
  ntTrkPU -> SetBranchAddress("pcax",            &pu_pcax);
  ntTrkPU -> SetBranchAddress("pcay",            &pu_pcay);
  ntTrkPU -> SetBranchAddress("pcaz",            &pu_pcaz);
  ntTrkPU -> SetBranchAddress("nfromtruth",      &pu_nfromtruth);
  ntTrkPU -> SetBranchAddress("nwrong",          &pu_nwrong);
  ntTrkPU -> SetBranchAddress("ntrumaps",        &pu_ntrumaps);
  ntTrkPU -> SetBranchAddress("ntruintt",        &pu_ntruintt);
  ntTrkPU -> SetBranchAddress("ntrutpc",         &pu_ntrutpc);
  ntTrkPU -> SetBranchAddress("ntrumms",         &pu_ntrumms);
  ntTrkPU -> SetBranchAddress("ntrutpc1",        &pu_ntrutpc1);
  ntTrkPU -> SetBranchAddress("ntrutpc11",       &pu_ntrutpc11);
  ntTrkPU -> SetBranchAddress("ntrutpc2",        &pu_ntrutpc2);
  ntTrkPU -> SetBranchAddress("ntrutpc3",        &pu_ntrutpc3);
  ntTrkPU -> SetBranchAddress("layersfromtruth", &pu_layersfromtruth);
  ntTrkPU -> SetBranchAddress("nhittpcall",      &pu_nhittpcall);
  ntTrkPU -> SetBranchAddress("nhittpcin",       &pu_nhittpcin);
  ntTrkPU -> SetBranchAddress("nhittpcmid",      &pu_nhittpcmid);
  ntTrkPU -> SetBranchAddress("nhittpcout",      &pu_nhittpcout);
  ntTrkPU -> SetBranchAddress("nclusall",        &pu_nclusall);
  ntTrkPU -> SetBranchAddress("nclustpc",        &pu_nclustpc);
  ntTrkPU -> SetBranchAddress("nclusintt",       &pu_nclusintt);
  ntTrkPU -> SetBranchAddress("nclusmaps",       &pu_nclusmaps);
  ntTrkPU -> SetBranchAddress("nclusmms",        &pu_nclusmms);
  cout << "      Set branch addresses." << endl;
  return;

}  // end 'InitTuples()'



void STrackCutStudy::InitHists() {

  const UInt_t  nNHitBins(100);
  const UInt_t  nChiBins(100);
  const UInt_t  nQualBins(40);
  const UInt_t  nDcaBins(2000);
  const UInt_t  nPerBins(200);
  const UInt_t  nEtaBins(400);
  const UInt_t  nPhiBins(60);
  const UInt_t  nPtBins(100);
  const UInt_t  nFracBins(100);
  const UInt_t  nPtFracBins(500);
  const UInt_t  nDiffBins(2000);
  const UInt_t  nErrBins(5000);
  const UInt_t  nVtxBins(1200);
  const UInt_t  nDVtxBins(2400);
  const Float_t rNHitBins[NRange]   = {0,     100};
  const Float_t rChiBins[NRange]    = {0.,    1000.};
  const Float_t rQualBins[NRange]   = {0.,    20.};
  const Float_t rDcaBins[NRange]    = {-100., 100.};
  const Float_t rPerBins[NRange]    = {0.,    2.};
  const Float_t rEtaBins[NRange]    = {-2.,   2.};
  const Float_t rPhiBins[NRange]    = {-3.15, 3.15};
  const Float_t rPtBins[NRange]     = {0.,    100.};
  const Float_t rFracBins[NRange]   = {0.,    5.};
  const Float_t rPtFracBins[NRange] = {0.,    5.};
  const Float_t rDiffBins[NRange]   = {-100., 100.};     
  const Float_t rErrBins[NRange]    = {0.,    100.};
  const Float_t rVtxBins[NRange]    = {-300., 300.};
  const Float_t rDVtxBins[NRange]   = {-600., 600.};
  // embed-only track histograms
  hTrackNMms             = new TH1D("hTrackNMms",         "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hTrackNMap             = new TH1D("hTrackNMap",         "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hTrackNInt             = new TH1D("hTrackNInt",         "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hTrackNTpc             = new TH1D("hTrackNTpc",         "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hTrackNTot             = new TH1D("hTrackNTot",         "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hTrackPerMms           = new TH1D("hTrackPerMms",       "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hTrackPerMap           = new TH1D("hTrackPerMap",       "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hTrackPerInt           = new TH1D("hTrackPerInt",       "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hTrackPerTpc           = new TH1D("hTrackPerTpc",       "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hTrackPerTot           = new TH1D("hTrackPerTot",       "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hTrackChi2             = new TH1D("hTrackChi2",         "", nChiBins,  rChiBins[0],  rChiBins[1]);
  hTrackNDF              = new TH1D("hTrackNDF",          "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hTrackQuality          = new TH1D("hTrackQuality",      "", nQualBins, rQualBins[0], rQualBins[1]);
  hTrackDCAxy            = new TH1D("hTrackDCAxy",        "", nDcaBins,  rDcaBins[0],  rDcaBins[1]);
  hTrackDCAz             = new TH1D("hTrackDCAz",         "", nDcaBins,  rDcaBins[0],  rDcaBins[1]);
  hTrackVx               = new TH1D("hTrackVx",           "", nVtxBins,  rVtxBins[0],  rVtxBins[1]);
  hTrackVy               = new TH1D("hTrackVy",           "", nVtxBins,  rVtxBins[0],  rVtxBins[1]);
  hTrackVz               = new TH1D("hTrackVz",           "", nVtxBins,  rVtxBins[0],  rVtxBins[1]);
  hTrackEta              = new TH1D("hTrackEta",          "", nEtaBins,  rEtaBins[0],  rEtaBins[1]);
  hTrackPhi              = new TH1D("hTrackPhi",          "", nPhiBins,  rPhiBins[0],  rPhiBins[1]);
  hTrackPt               = new TH1D("hTrackPt",           "", nPtBins,   rPtBins[0],   rPtBins[1]);
  hDeltaDCAxy            = new TH1D("hDeltaDCAxy",        "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hDeltaDCAz             = new TH1D("hDeltaDCAz",         "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hDeltaEta              = new TH1D("hDeltaEta",          "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hDeltaPhi              = new TH1D("hDeltaPhi",          "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hDeltaPt               = new TH1D("hDeltaPt",           "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hTrackPtVsNMms         = new TH2D("hTrackPtVsNMms",     "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsNMap         = new TH2D("hTrackPtVsNMap",     "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsNInt         = new TH2D("hTrackPtVsNInt",     "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsNTpc         = new TH2D("hTrackPtVsNTpc",     "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsNTot         = new TH2D("hTrackPtVsNTot",     "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsPerMms       = new TH2D("hTrackPtVsPerMms",   "", nPerBins,  rPerBins[0],  rPerBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsPerMap       = new TH2D("hTrackPtVsPerMap",   "", nPerBins,  rPerBins[0],  rPerBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsPerInt       = new TH2D("hTrackPtVsPerInt",   "", nPerBins,  rPerBins[0],  rPerBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsPerTpc       = new TH2D("hTrackPtVsPerTpc",   "", nPerBins,  rPerBins[0],  rPerBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsPerTot       = new TH2D("hTrackPtVsPerTot",   "", nPerBins,  rPerBins[0],  rPerBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsChi2         = new TH2D("hTrackPtVsChi2",     "", nChiBins,  rChiBins[0],  rChiBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsNDF          = new TH2D("hTrackPtVsNDF",      "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsQuality      = new TH2D("hTrackPtVsQuality",  "", nQualBins, rQualBins[0], rQualBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsDCAxy        = new TH2D("hTrackPtVsDCAxy",    "", nDcaBins,  rDcaBins[0],  rDcaBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsDCAz         = new TH2D("hTrackPtVsDCAz",     "", nDcaBins,  rDcaBins[0],  rDcaBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hDeltaDCAxyVsTrkPt     = new TH2D("hDeltaDCAxyVsTrkPt", "", nPtBins,   rPtBins[0],   rPtBins[1],   nErrBins, rErrBins[0], rErrBins[1]);
  hDeltaDCAzVsTrkPt      = new TH2D("hDeltaDCAzVsTrkPt",  "", nPtBins,   rPtBins[0],   rPtBins[1],   nErrBins, rErrBins[0], rErrBins[1]);
  hDeltaEtaVsTrkPt       = new TH2D("hDeltaEtaVsTrkPt",   "", nPtBins,   rPtBins[0],   rPtBins[1],   nErrBins, rErrBins[0], rErrBins[1]);
  hDeltaPhiVsTrkPt       = new TH2D("hDeltaPhiVsTrkPt",   "", nPtBins,   rPtBins[0],   rPtBins[1],   nErrBins, rErrBins[0], rErrBins[1]);
  hDeltaPtVsTrkPt        = new TH2D("hDeltaPtVsTrkPt",    "", nPtBins,   rPtBins[0],   rPtBins[1],   nErrBins, rErrBins[0], rErrBins[1]);
  // embed-only truth histograms
  hTruthNMms             = new TH1D("hTruthNMms",         "", nNHitBins,   rNHitBins[0],   rNHitBins[1]);
  hTruthNMap             = new TH1D("hTruthNMap",         "", nNHitBins,   rNHitBins[0],   rNHitBins[1]);
  hTruthNInt             = new TH1D("hTruthNInt",         "", nNHitBins,   rNHitBins[0],   rNHitBins[1]);
  hTruthNTpc             = new TH1D("hTruthNTpc",         "", nNHitBins,   rNHitBins[0],   rNHitBins[1]);
  hTruthNTot             = new TH1D("hTruthNTot",         "", nNHitBins,   rNHitBins[0],   rNHitBins[1]);
  hTruthEta              = new TH1D("hTruthEta",          "", nEtaBins,    rEtaBins[0],    rEtaBins[1]);
  hTruthPhi              = new TH1D("hTruthPhi",          "", nPhiBins,    rPhiBins[0],    rPhiBins[1]);
  hTruthPt               = new TH1D("hTruthPt",           "", nPtBins,     rPtBins[0],     rPtBins[1]);
  hTruthVx               = new TH1D("hTruthVx",           "", nVtxBins,    rVtxBins[0],    rVtxBins[1]);
  hTruthVy               = new TH1D("hTruthVy",           "", nVtxBins,    rVtxBins[0],    rVtxBins[1]);
  hTruthVz               = new TH1D("hTruthVz",           "", nVtxBins,    rVtxBins[0],    rVtxBins[1]);
  hTruthEtaFrac          = new TH1D("hTruthEtaFrac",      "", nFracBins,   rFracBins[0],   rFracBins[1]);
  hTruthPhiFrac          = new TH1D("hTruthPhiFrac",      "", nFracBins,   rFracBins[0],   rFracBins[1]);
  hTruthPtFrac           = new TH1D("hTruthPtFrac",       "", nPtFracBins, rPtFracBins[0], rPtFracBins[1]);
  hTruthEtaDiff          = new TH1D("hTruthEtaDiff",      "", nDiffBins,   rDiffBins[0],   rDiffBins[1]);
  hTruthPhiDiff          = new TH1D("hTruthPhiDiff",      "", nDiffBins,   rDiffBins[0],   rDiffBins[1]);
  hTruthPtDiff           = new TH1D("hTruthPtDiff",       "", nDiffBins,   rDiffBins[0],   rDiffBins[1]);
  hTruthVxDiff           = new TH1D("hTruthVxDiff",       "", nDVtxBins,   rDVtxBins[0],   rDVtxBins[1]);
  hTruthVyDiff           = new TH1D("hTruthVyDiff",       "", nDVtxBins,   rDVtxBins[0],   rDVtxBins[1]);
  hTruthVzDiff           = new TH1D("hTruthVzDiff",       "", nDVtxBins,   rDVtxBins[0],   rDVtxBins[1]);
  hTruthVsTrackEta       = new TH2D("hTruthVsTrackEta",   "", nEtaBins,    rEtaBins[0],    rEtaBins[1],  nEtaBins,    rEtaBins[0],    rEtaBins[1]);
  hTruthVsTrackPhi       = new TH2D("hTruthVsTrackPhi",   "", nPhiBins,    rPhiBins[0],    rPhiBins[1],  nPhiBins,    rPhiBins[0],    rPhiBins[1]);
  hTruthVsTrackPt        = new TH2D("hTruthVsTrackPt",    "", nPtBins,     rPtBins[0],     rPtBins[1],   nPtBins,     rPtBins[0],     rPtBins[1]);
  hTruthVsTrackVx        = new TH2D("hTruthVsTrackVx",    "", nVtxBins,    rVtxBins[0],    rVtxBins[1],  nVtxBins,    rVtxBins[0],    rVtxBins[1]);
  hTruthVsTrackVy        = new TH2D("hTruthVsTrackVy",    "", nVtxBins,    rVtxBins[0],    rVtxBins[1],  nVtxBins,    rVtxBins[0],    rVtxBins[1]);
  hTruthVsTrackVz        = new TH2D("hTruthVsTrackVz",    "", nVtxBins,    rVtxBins[0],    rVtxBins[1],  nVtxBins,    rVtxBins[0],    rVtxBins[1]);
  hFracVsTruthEta        = new TH2D("hFracVsTruthEta",    "", nEtaBins,    rEtaBins[0],    rEtaBins[1],  nFracBins,   rFracBins[0],   rFracBins[1]);
  hFracVsTruthPhi        = new TH2D("hFracVsTruthPhi",    "", nPhiBins,    rPhiBins[0],    rPhiBins[1],  nFracBins,   rFracBins[0],   rFracBins[1]);
  hFracVsTruthPt         = new TH2D("hFracVsTruthPt",     "", nPtBins,     rPtBins[0],     rPtBins[1],   nFracBins,   rFracBins[0],   rFracBins[1]);
  hDiffVsTruthEta        = new TH2D("hDiffVsTruthEta",    "", nEtaBins,    rEtaBins[0],    rEtaBins[1],  nDiffBins,   rDiffBins[0],   rDiffBins[1]);
  hDiffVsTruthPhi        = new TH2D("hDiffVsTruthPhi",    "", nPhiBins,    rPhiBins[0],    rPhiBins[1],  nDiffBins,   rDiffBins[0],   rDiffBins[1]);
  hDiffVsTruthPt         = new TH2D("hDiffVsTruthPt",     "", nPtBins,     rPtBins[0],     rPtBins[1],   nDiffBins,   rDiffBins[0],   rDiffBins[1]);
  hTruthPtVsNMms         = new TH2D("hTruthPtVsNMms",     "", nNHitBins,   rNHitBins[0],   rNHitBins[1], nPtBins,     rPtBins[0],     rPtBins[1]);
  hTruthPtVsNMap         = new TH2D("hTruthPtVsNMap",     "", nNHitBins,   rNHitBins[0],   rNHitBins[1], nPtBins,     rPtBins[0],     rPtBins[1]);
  hTruthPtVsNInt         = new TH2D("hTruthPtVsNInt",     "", nNHitBins,   rNHitBins[0],   rNHitBins[1], nPtBins,     rPtBins[0],     rPtBins[1]);
  hTruthPtVsNTpc         = new TH2D("hTruthPtVsNTpc",     "", nNHitBins,   rNHitBins[0],   rNHitBins[1], nPtBins,     rPtBins[0],     rPtBins[1]);
  hTruthPtVsNTot         = new TH2D("hTruthPtVsNTot",     "", nNHitBins,   rNHitBins[0],   rNHitBins[1], nPtBins,     rPtBins[0],     rPtBins[1]);
  hTruthPtVsChi2         = new TH2D("hTruthPtVsChi2",     "", nChiBins,    rChiBins[0],    rChiBins[1],  nPtBins,     rPtBins[0],     rPtBins[1]);
  hTruthPtVsNDF          = new TH2D("hTruthPtVsNDF",      "", nNHitBins,   rNHitBins[0],   rNHitBins[1], nPtBins,     rPtBins[0],     rPtBins[1]);
  hTruthPtVsQuality      = new TH2D("hTruthPtVsQuality",  "", nQualBins,   rQualBins[0],   rQualBins[1], nPtBins,     rPtBins[0],     rPtBins[1]);
  hFracPtVsQuality       = new TH2D("hFracPtVsQuality",   "", nQualBins,   rQualBins[0],   rQualBins[1], nPtFracBins, rPtFracBins[0], rPtFracBins[1]);
  hTruthPtVsDCAxy        = new TH2D("hTruthPtVsDCAxy",    "", nDcaBins,    rDcaBins[0],    rDcaBins[1],  nPtBins,     rPtBins[0],     rPtBins[1]);
  hTruthPtVsDCAz         = new TH2D("hTruthPtVsDCAz",     "", nDcaBins,    rDcaBins[0],    rDcaBins[1],  nPtBins,     rPtBins[0],     rPtBins[1]);
  hDeltaDCAxyVsTruPt     = new TH2D("hDeltaDCAxyVsTruPt", "", nPtBins,     rPtBins[0],     rPtBins[1],   nDcaBins,    rDcaBins[0],    rDcaBins[1]);
  hDeltaDCAzVsTruPt      = new TH2D("hDeltaDCAzVsTruPt",  "", nPtBins,     rPtBins[0],     rPtBins[1],   nDcaBins,    rDcaBins[0],    rDcaBins[1]);
  hDeltaEtaVsTruPt       = new TH2D("hDeltaEtaVsTruPt",   "", nPtBins,     rPtBins[0],     rPtBins[1],   nEtaBins,    rEtaBins[0],    rEtaBins[1]);
  hDeltaPhiVsTruPt       = new TH2D("hDeltaPhiVsTruPt",   "", nPtBins,     rPtBins[0],     rPtBins[1],   nPhiBins,    rPhiBins[0],    rPhiBins[1]);
  hDeltaPtVsTruPt        = new TH2D("hDeltaPtVsTruPt",    "", nPtBins,     rPtBins[0],     rPtBins[1],   nPtBins,     rPtBins[0],     rPtBins[1]);
  // embed-only weird histograms
  hWeirdNMms             = new TH1D("hWeirdNMms",       "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hWeirdNMap             = new TH1D("hWeirdNMap",       "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hWeirdNInt             = new TH1D("hWeirdNInt",       "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hWeirdNTpc             = new TH1D("hWeirdNTpc",       "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hWeirdNTot             = new TH1D("hWeirdNTot",       "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hWeirdPerMms           = new TH1D("hWeirdPerMms",     "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hWeirdPerMap           = new TH1D("hWeirdPerMap",     "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hWeirdPerInt           = new TH1D("hWeirdPerInt",     "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hWeirdPerTpc           = new TH1D("hWeirdPerTpc",     "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hWeirdPerTot           = new TH1D("hWeirdPerTot",     "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hWeirdChi2             = new TH1D("hWeirdChi2",       "", nChiBins,  rChiBins[0],  rChiBins[1]);
  hWeirdNDF              = new TH1D("hWeirdNDF",        "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hWeirdQuality          = new TH1D("hWeirdQuality",    "", nQualBins, rQualBins[0], rQualBins[1]);
  hWeirdDCAxy            = new TH1D("hWeirdDCAxy",      "", nDcaBins,  rDcaBins[0],  rDcaBins[1]);
  hWeirdDCAz             = new TH1D("hWeirdDCAz",       "", nDcaBins,  rDcaBins[0],  rDcaBins[1]);
  hWeirdVx               = new TH1D("hWeirdVx",         "", nVtxBins,  rVtxBins[0],  rVtxBins[1]);
  hWeirdVy               = new TH1D("hWeirdVy",         "", nVtxBins,  rVtxBins[0],  rVtxBins[1]);
  hWeirdVz               = new TH1D("hWeirdVz",         "", nVtxBins,  rVtxBins[0],  rVtxBins[1]);
  hWeirdEta              = new TH1D("hWeirdEta",        "", nEtaBins,  rEtaBins[0],  rEtaBins[1]);
  hWeirdPhi              = new TH1D("hWeirdPhi",        "", nPhiBins,  rPhiBins[0],  rPhiBins[1]);
  hWeirdPt               = new TH1D("hWeirdPt",         "", nPtBins,   rPtBins[0],   rPtBins[1]);
  hWeirdDeltaDCAxy       = new TH1D("hWeirdDeltaDCAxy", "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hWeirdDeltaDCAz        = new TH1D("hWeirdDeltaDCAz",  "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hWeirdDeltaEta         = new TH1D("hWeirdDeltaEta",   "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hWeirdDeltaPhi         = new TH1D("hWeirdDeltaPhi",   "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hWeirdDeltaPt          = new TH1D("hWeirdDeltaPt",    "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hWeirdVxDiff           = new TH1D("hWeirdVxDiff",     "", nDVtxBins, rDVtxBins[0], rDVtxBins[1]);
  hWeirdVyDiff           = new TH1D("hWeirdVyDiff",     "", nDVtxBins, rDVtxBins[0], rDVtxBins[1]);
  hWeirdVzDiff           = new TH1D("hWeirdVzDiff",     "", nDVtxBins, rDVtxBins[0], rDVtxBins[1]);
  // embed-only normal histograms
  hNormalNMms            = new TH1D("hNormalNMms",       "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hNormalNMap            = new TH1D("hNormalNMap",       "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hNormalNInt            = new TH1D("hNormalNInt",       "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hNormalNTpc            = new TH1D("hNormalNTpc",       "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hNormalNTot            = new TH1D("hNormalNTot",       "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hNormalPerMms          = new TH1D("hNormalPerMms",     "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hNormalPerMap          = new TH1D("hNormalPerMap",     "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hNormalPerInt          = new TH1D("hNormalPerInt",     "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hNormalPerTpc          = new TH1D("hNormalPerTpc",     "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hNormalPerTot          = new TH1D("hNormalPerTot",     "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hNormalChi2            = new TH1D("hNormalChi2",       "", nChiBins,  rChiBins[0],  rChiBins[1]);
  hNormalNDF             = new TH1D("hNormalNDF",        "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hNormalQuality         = new TH1D("hNormalQuality",    "", nQualBins, rQualBins[0], rQualBins[1]);
  hNormalDCAxy           = new TH1D("hNormalDCAxy",      "", nDcaBins,  rDcaBins[0],  rDcaBins[1]);
  hNormalDCAz            = new TH1D("hNormalDCAz",       "", nDcaBins,  rDcaBins[0],  rDcaBins[1]);
  hNormalVx              = new TH1D("hNormalVx",         "", nVtxBins,  rVtxBins[0],  rVtxBins[1]);
  hNormalVy              = new TH1D("hNormalVy",         "", nVtxBins,  rVtxBins[0],  rVtxBins[1]);
  hNormalVz              = new TH1D("hNormalVz",         "", nVtxBins,  rVtxBins[0],  rVtxBins[1]);
  hNormalEta             = new TH1D("hNormalEta",        "", nEtaBins,  rEtaBins[0],  rEtaBins[1]);
  hNormalPhi             = new TH1D("hNormalPhi",        "", nPhiBins,  rPhiBins[0],  rPhiBins[1]);
  hNormalPt              = new TH1D("hNormalPt",         "", nPtBins,   rPtBins[0],   rPtBins[1]);
  hNormalDeltaDCAxy      = new TH1D("hNormalDeltaDCAxy", "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hNormalDeltaDCAz       = new TH1D("hNormalDeltaDCAz",  "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hNormalDeltaEta        = new TH1D("hNormalDeltaEta",   "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hNormalDeltaPhi        = new TH1D("hNormalDeltaPhi",   "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hNormalDeltaPt         = new TH1D("hNormalDeltaPt",    "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hNormalVxDiff          = new TH1D("hNormalVxDiff",     "", nDVtxBins, rDVtxBins[0], rDVtxBins[1]);
  hNormalVyDiff          = new TH1D("hNormalVyDiff",     "", nDVtxBins, rDVtxBins[0], rDVtxBins[1]);
  hNormalVzDiff          = new TH1D("hNormalVzDiff",     "", nDVtxBins, rDVtxBins[0], rDVtxBins[1]);
  // with-pileup track histograms
  hTrackNMms_PU          = new TH1D("hTrackNMms_PU",         "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hTrackNMap_PU          = new TH1D("hTrackNMap_PU",         "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hTrackNInt_PU          = new TH1D("hTrackNInt_PU",         "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hTrackNTpc_PU          = new TH1D("hTrackNTpc_PU",         "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hTrackNTot_PU          = new TH1D("hTrackNTot_PU",         "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hTrackPerMms_PU        = new TH1D("hTrackPerMms_PU",       "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hTrackPerMap_PU        = new TH1D("hTrackPerMap_PU",       "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hTrackPerInt_PU        = new TH1D("hTrackPerInt_PU",       "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hTrackPerTpc_PU        = new TH1D("hTrackPerTpc_PU",       "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hTrackPerTot_PU        = new TH1D("hTrackPerTot_PU",       "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hTrackChi2_PU          = new TH1D("hTrackChi2_PU",         "", nChiBins,  rChiBins[0],  rChiBins[1]);
  hTrackNDF_PU           = new TH1D("hTrackNDF_PU",          "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hTrackQuality_PU       = new TH1D("hTrackQuality_PU",      "", nQualBins, rQualBins[0], rQualBins[1]);
  hTrackDCAxy_PU         = new TH1D("hTrackDCAxy_PU",        "", nDcaBins,  rDcaBins[0],  rDcaBins[1]);
  hTrackDCAz_PU          = new TH1D("hTrackDCAz_PU",         "", nDcaBins,  rDcaBins[0],  rDcaBins[1]);
  hTrackVx_PU            = new TH1D("hTrackVx_PU",           "", nVtxBins,  rVtxBins[0],  rVtxBins[1]);
  hTrackVy_PU            = new TH1D("hTrackVy_PU",           "", nVtxBins,  rVtxBins[0],  rVtxBins[1]);
  hTrackVz_PU            = new TH1D("hTrackVz_PU",           "", nVtxBins,  rVtxBins[0],  rVtxBins[1]);
  hTrackEta_PU           = new TH1D("hTrackEta_PU",          "", nEtaBins,  rEtaBins[0],  rEtaBins[1]);
  hTrackPhi_PU           = new TH1D("hTrackPhi_PU",          "", nPhiBins,  rPhiBins[0],  rPhiBins[1]);
  hTrackPt_PU            = new TH1D("hTrackPt_PU",           "", nPtBins,   rPtBins[0],   rPtBins[1]);
  hDeltaDCAxy_PU         = new TH1D("hDeltaDCAxy_PU",        "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hDeltaDCAz_PU          = new TH1D("hDeltaDCAz_PU",         "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hDeltaEta_PU           = new TH1D("hDeltaEta_PU",          "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hDeltaPhi_PU           = new TH1D("hDeltaPhi_PU",          "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hDeltaPt_PU            = new TH1D("hDeltaPt_PU",           "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hTrackPtVsNMms_PU      = new TH2D("hTrackPtVsNMms_PU",     "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsNMap_PU      = new TH2D("hTrackPtVsNMap_PU",     "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsNInt_PU      = new TH2D("hTrackPtVsNInt_PU",     "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsNTpc_PU      = new TH2D("hTrackPtVsNTpc_PU",     "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsNTot_PU      = new TH2D("hTrackPtVsNTot_PU",     "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsPerMms_PU    = new TH2D("hTrackPtVsPerMms_PU",   "", nPerBins,  rPerBins[0],  rPerBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsPerMap_PU    = new TH2D("hTrackPtVsPerMap_PU",   "", nPerBins,  rPerBins[0],  rPerBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsPerInt_PU    = new TH2D("hTrackPtVsPerInt_PU",   "", nPerBins,  rPerBins[0],  rPerBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsPerTpc_PU    = new TH2D("hTrackPtVsPerTpc_PU",   "", nPerBins,  rPerBins[0],  rPerBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsPerTot_PU    = new TH2D("hTrackPtVsPerTot_PU",   "", nPerBins,  rPerBins[0],  rPerBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsChi2_PU      = new TH2D("hTrackPtVsChi2_PU",     "", nChiBins,  rChiBins[0],  rChiBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsNDF_PU       = new TH2D("hTrackPtVsNDF_PU",      "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsQuality_PU   = new TH2D("hTrackPtVsQuality_PU",  "", nQualBins, rQualBins[0], rQualBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsDCAxy_PU     = new TH2D("hTrackPtVsDCAxy_PU",    "", nDcaBins,  rDcaBins[0],  rDcaBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hTrackPtVsDCAz_PU      = new TH2D("hTrackPtVsDCAz_PU",     "", nDcaBins,  rDcaBins[0],  rDcaBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hDeltaDCAxyVsTrkPt_PU  = new TH2D("hDeltaDCAxyVsTrkPt_PU", "", nPtBins,   rPtBins[0],   rPtBins[1],   nErrBins, rErrBins[0], rErrBins[1]);
  hDeltaDCAzVsTrkPt_PU   = new TH2D("hDeltaDCAzVsTrkPt_PU",  "", nPtBins,   rPtBins[0],   rPtBins[1],   nErrBins, rErrBins[0], rErrBins[1]);
  hDeltaEtaVsTrkPt_PU    = new TH2D("hDeltaEtaVsTrkPt_PU",   "", nPtBins,   rPtBins[0],   rPtBins[1],   nErrBins, rErrBins[0], rErrBins[1]);
  hDeltaPhiVsTrkPt_PU    = new TH2D("hDeltaPhiVsTrkPt_PU",   "", nPtBins,   rPtBins[0],   rPtBins[1],   nErrBins, rErrBins[0], rErrBins[1]);
  hDeltaPtVsTrkPt_PU     = new TH2D("hDeltaPtVsTrkPt_PU",    "", nPtBins,   rPtBins[0],   rPtBins[1],   nErrBins, rErrBins[0], rErrBins[1]);
  // with-pileup primary histograms
  hPrimaryNMms_PU        = new TH1D("hPrimaryNMms_PU",        "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hPrimaryNMap_PU        = new TH1D("hPrimaryNMap_PU",        "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hPrimaryNInt_PU        = new TH1D("hPrimaryNInt_PU",        "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hPrimaryNTpc_PU        = new TH1D("hPrimaryNTpc_PU",        "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hPrimaryNTot_PU        = new TH1D("hPrimaryNTot_PU",        "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hPrimaryPerMms_PU      = new TH1D("hPrimaryPerMms_PU",      "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hPrimaryPerMap_PU      = new TH1D("hPrimaryPerMap_PU",      "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hPrimaryPerInt_PU      = new TH1D("hPrimaryPerInt_PU",      "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hPrimaryPerTpc_PU      = new TH1D("hPrimaryPerTpc_PU",      "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hPrimaryPerTot_PU      = new TH1D("hPrimaryPerTot_PU",      "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hPrimaryChi2_PU        = new TH1D("hPrimaryChi2_PU",        "", nChiBins,  rChiBins[0],  rChiBins[1]);
  hPrimaryNDF_PU         = new TH1D("hPrimaryNDF_PU",         "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hPrimaryQuality_PU     = new TH1D("hPrimaryQuality_PU",     "", nQualBins, rQualBins[0], rQualBins[1]);
  hPrimaryDCAxy_PU       = new TH1D("hPrimaryDCAxy_PU",       "", nDcaBins,  rDcaBins[0],  rDcaBins[1]);
  hPrimaryDCAz_PU        = new TH1D("hPrimaryDCAz_PU",        "", nDcaBins,  rDcaBins[0],  rDcaBins[1]);
  hPrimaryVx_PU          = new TH1D("hPrimaryVx_PU",          "", nVtxBins,  rVtxBins[0],  rVtxBins[1]);
  hPrimaryVy_PU          = new TH1D("hPrimaryVy_PU",          "", nVtxBins,  rVtxBins[0],  rVtxBins[1]);
  hPrimaryVz_PU          = new TH1D("hPrimaryVz_PU",          "", nVtxBins,  rVtxBins[0],  rVtxBins[1]);
  hPrimaryEta_PU         = new TH1D("hPrimaryEta_PU",         "", nEtaBins,  rEtaBins[0],  rEtaBins[1]);
  hPrimaryPhi_PU         = new TH1D("hPrimaryPhi_PU",         "", nPhiBins,  rPhiBins[0],  rPhiBins[1]);
  hPrimaryPt_PU          = new TH1D("hPrimaryPt_PU",          "", nPtBins,   rPtBins[0],   rPtBins[1]);
  hDeltaPrimDCAxy_PU     = new TH1D("hDeltaPrimDCAxy_PU",     "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hDeltaPrimDCAz_PU      = new TH1D("hDeltaPrimDCAz_PU",      "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hDeltaPrimEta_PU       = new TH1D("hDeltaPrimEta_PU",       "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hDeltaPrimPhi_PU       = new TH1D("hDeltaPrimPhi_PU",       "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hDeltaPrimPt_PU        = new TH1D("hDeltaPrimPt_PU",        "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hPrimaryPtVsNMms_PU    = new TH2D("hPrimaryPtVsNMms_PU",    "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hPrimaryPtVsNMap_PU    = new TH2D("hPrimaryPtVsNMap_PU",    "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hPrimaryPtVsNInt_PU    = new TH2D("hPrimaryPtVsNInt_PU",    "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hPrimaryPtVsNTpc_PU    = new TH2D("hPrimaryPtVsNTpc_PU",    "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hPrimaryPtVsNTot_PU    = new TH2D("hPrimaryPtVsNTot_PU",    "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hPrimaryPtVsPerMms_PU  = new TH2D("hPrimaryPtVsPerMms_PU",  "", nPerBins,  rPerBins[0],  rPerBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hPrimaryPtVsPerMap_PU  = new TH2D("hPrimaryPtVsPerMap_PU",  "", nPerBins,  rPerBins[0],  rPerBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hPrimaryPtVsPerInt_PU  = new TH2D("hPrimaryPtVsPerInt_PU",  "", nPerBins,  rPerBins[0],  rPerBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hPrimaryPtVsPerTpc_PU  = new TH2D("hPrimaryPtVsPerTpc_PU",  "", nPerBins,  rPerBins[0],  rPerBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hPrimaryPtVsPerTot_PU  = new TH2D("hPrimaryPtVsPerTot_PU",  "", nPerBins,  rPerBins[0],  rPerBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hPrimaryPtVsChi2_PU    = new TH2D("hPrimaryPtVsChi2_PU",    "", nChiBins,  rChiBins[0],  rChiBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hPrimaryPtVsNDF_PU     = new TH2D("hPrimaryPtVsNDF_PU",     "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hPrimaryPtVsQuality_PU = new TH2D("hPrimaryPtVsQuality_PU", "", nQualBins, rQualBins[0], rQualBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hPrimaryPtVsDCAxy_PU   = new TH2D("hPrimaryPtVsDCAxy_PU",   "", nDcaBins,  rDcaBins[0],  rDcaBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hPrimaryPtVsDCAz_PU    = new TH2D("hPrimaryPtVsDCAz_PU",    "", nDcaBins,  rDcaBins[0],  rDcaBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hDeltaDCAxyVsPrimPt_PU = new TH2D("hDeltaDCAxyVsPrimPt_PU", "", nPtBins,   rPtBins[0],   rPtBins[1],   nErrBins, rErrBins[0], rErrBins[1]);
  hDeltaDCAzVsPrimPt_PU  = new TH2D("hDeltaDCAzVsPrimPt_PU",  "", nPtBins,   rPtBins[0],   rPtBins[1],   nErrBins, rErrBins[0], rErrBins[1]);
  hDeltaEtaVsPrimPt_PU   = new TH2D("hDeltaEtaVsPrimPt_PU",   "", nPtBins,   rPtBins[0],   rPtBins[1],   nErrBins, rErrBins[0], rErrBins[1]);
  hDeltaPhiVsPrimPt_PU   = new TH2D("hDeltaPhiVsPrimPt_PU",   "", nPtBins,   rPtBins[0],   rPtBins[1],   nErrBins, rErrBins[0], rErrBins[1]);
  hDeltaPtVsPrimPt_PU    = new TH2D("hDeltaPtVsPrimPt_PU",    "", nPtBins,   rPtBins[0],   rPtBins[1],   nErrBins, rErrBins[0], rErrBins[1]);
  // with-pileup primary histograms
  hNonPrimNMms_PU        = new TH1D("hNonPrimNMms_PU",        "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hNonPrimNMap_PU        = new TH1D("hNonPrimNMap_PU",        "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hNonPrimNInt_PU        = new TH1D("hNonPrimNInt_PU",        "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hNonPrimNTpc_PU        = new TH1D("hNonPrimNTpc_PU",        "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hNonPrimNTot_PU        = new TH1D("hNonPrimNTot_PU",        "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hNonPrimPerMms_PU      = new TH1D("hNonPrimPerMms_PU",      "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hNonPrimPerMap_PU      = new TH1D("hNonPrimPerMap_PU",      "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hNonPrimPerInt_PU      = new TH1D("hNonPrimPerInt_PU",      "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hNonPrimPerTpc_PU      = new TH1D("hNonPrimPerTpc_PU",      "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hNonPrimPerTot_PU      = new TH1D("hNonPrimPerTot_PU",      "", nPerBins,  rPerBins[0],  rPerBins[1]);
  hNonPrimChi2_PU        = new TH1D("hNonPrimChi2_PU",        "", nChiBins,  rChiBins[0],  rChiBins[1]);
  hNonPrimNDF_PU         = new TH1D("hNonPrimNDF_PU",         "", nNHitBins, rNHitBins[0], rNHitBins[1]);
  hNonPrimQuality_PU     = new TH1D("hNonPrimQuality_PU",     "", nQualBins, rQualBins[0], rQualBins[1]);
  hNonPrimDCAxy_PU       = new TH1D("hNonPrimDCAxy_PU",       "", nDcaBins,  rDcaBins[0],  rDcaBins[1]);
  hNonPrimDCAz_PU        = new TH1D("hNonPrimDCAz_PU",        "", nDcaBins,  rDcaBins[0],  rDcaBins[1]);
  hNonPrimVx_PU          = new TH1D("hNonPrimVx_PU",          "", nVtxBins,  rVtxBins[0],  rVtxBins[1]);
  hNonPrimVy_PU          = new TH1D("hNonPrimVy_PU",          "", nVtxBins,  rVtxBins[0],  rVtxBins[1]);
  hNonPrimVz_PU          = new TH1D("hNonPrimVz_PU",          "", nVtxBins,  rVtxBins[0],  rVtxBins[1]);
  hNonPrimEta_PU         = new TH1D("hNonPrimEta_PU",         "", nEtaBins,  rEtaBins[0],  rEtaBins[1]);
  hNonPrimPhi_PU         = new TH1D("hNonPrimPhi_PU",         "", nPhiBins,  rPhiBins[0],  rPhiBins[1]);
  hNonPrimPt_PU          = new TH1D("hNonPrimPt_PU",          "", nPtBins,   rPtBins[0],   rPtBins[1]);
  hDeltaNoPrDCAxy_PU     = new TH1D("hDeltaNoPrDCAxy_PU",     "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hDeltaNoPrDCAz_PU      = new TH1D("hDeltaNoPrDCAz_PU",      "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hDeltaNoPrEta_PU       = new TH1D("hDeltaNoPrEta_PU",       "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hDeltaNoPrPhi_PU       = new TH1D("hDeltaNoPrPhi_PU",       "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hDeltaNoPrPt_PU        = new TH1D("hDeltaNoPrPt_PU",        "", nErrBins,  rErrBins[0],  rErrBins[1]);
  hNonPrimPtVsNMms_PU    = new TH2D("hNonPrimPtVsNMms_PU",    "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hNonPrimPtVsNMap_PU    = new TH2D("hNonPrimPtVsNMap_PU",    "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hNonPrimPtVsNInt_PU    = new TH2D("hNonPrimPtVsNInt_PU",    "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hNonPrimPtVsNTpc_PU    = new TH2D("hNonPrimPtVsNTpc_PU",    "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hNonPrimPtVsNTot_PU    = new TH2D("hNonPrimPtVsNTot_PU",    "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hNonPrimPtVsPerMms_PU  = new TH2D("hNonPrimPtVsPerMms_PU",  "", nPerBins,  rPerBins[0],  rPerBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hNonPrimPtVsPerMap_PU  = new TH2D("hNonPrimPtVsPerMap_PU",  "", nPerBins,  rPerBins[0],  rPerBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hNonPrimPtVsPerInt_PU  = new TH2D("hNonPrimPtVsPerInt_PU",  "", nPerBins,  rPerBins[0],  rPerBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hNonPrimPtVsPerTpc_PU  = new TH2D("hNonPrimPtVsPerTpc_PU",  "", nPerBins,  rPerBins[0],  rPerBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hNonPrimPtVsPerTot_PU  = new TH2D("hNonPrimPtVsPerTot_PU",  "", nPerBins,  rPerBins[0],  rPerBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hNonPrimPtVsChi2_PU    = new TH2D("hNonPrimPtVsChi2_PU",    "", nChiBins,  rChiBins[0],  rChiBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hNonPrimPtVsNDF_PU     = new TH2D("hNonPrimPtVsNDF_PU",     "", nNHitBins, rNHitBins[0], rNHitBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hNonPrimPtVsQuality_PU = new TH2D("hNonPrimPtVsQuality_PU", "", nQualBins, rQualBins[0], rQualBins[1], nPtBins,  rPtBins[0],  rPtBins[1]);
  hNonPrimPtVsDCAxy_PU   = new TH2D("hNonPrimPtVsDCAxy_PU",   "", nDcaBins,  rDcaBins[0],  rDcaBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hNonPrimPtVsDCAz_PU    = new TH2D("hNonPrimPtVsDCAz_PU",    "", nDcaBins,  rDcaBins[0],  rDcaBins[1],  nPtBins,  rPtBins[0],  rPtBins[1]);
  hDeltaDCAxyVsNoPrPt_PU = new TH2D("hDeltaDCAxyVsNoPrPt_PU", "", nPtBins,   rPtBins[0],   rPtBins[1],   nErrBins, rErrBins[0], rErrBins[1]);
  hDeltaDCAzVsNoPrPt_PU  = new TH2D("hDeltaDCAzVsNoPrPt_PU",  "", nPtBins,   rPtBins[0],   rPtBins[1],   nErrBins, rErrBins[0], rErrBins[1]);
  hDeltaEtaVsNoPrPt_PU   = new TH2D("hDeltaEtaVsNoPrPt_PU",   "", nPtBins,   rPtBins[0],   rPtBins[1],   nErrBins, rErrBins[0], rErrBins[1]);
  hDeltaPhiVsNoPrPt_PU   = new TH2D("hDeltaPhiVsNoPrPt_PU",   "", nPtBins,   rPtBins[0],   rPtBins[1],   nErrBins, rErrBins[0], rErrBins[1]);
  hDeltaPtVsNoPrPt_PU    = new TH2D("hDeltaPtVsNoPrPt_PU",    "", nPtBins,   rPtBins[0],   rPtBins[1],   nErrBins, rErrBins[0], rErrBins[1]);
  // embed-only errors
  hTrackNMms             -> Sumw2();
  hTrackNMap             -> Sumw2();
  hTrackNInt             -> Sumw2();
  hTrackNTpc             -> Sumw2();
  hTrackNTot             -> Sumw2();
  hTrackPerMms           -> Sumw2();
  hTrackPerMap           -> Sumw2();
  hTrackPerInt           -> Sumw2();
  hTrackPerTpc           -> Sumw2();
  hTrackPerTot           -> Sumw2();
  hTrackChi2             -> Sumw2();
  hTrackNDF              -> Sumw2();
  hTrackQuality          -> Sumw2();
  hTrackDCAxy            -> Sumw2();
  hTrackDCAz             -> Sumw2();
  hTrackVx               -> Sumw2();
  hTrackVy               -> Sumw2();
  hTrackVz               -> Sumw2();
  hTrackEta              -> Sumw2();
  hTrackPhi              -> Sumw2();
  hTrackPt               -> Sumw2();
  hDeltaDCAxy            -> Sumw2();
  hDeltaDCAz             -> Sumw2();
  hDeltaEta              -> Sumw2();
  hDeltaPhi              -> Sumw2();
  hDeltaPt               -> Sumw2();
  hTrackPtVsNMms         -> Sumw2();
  hTrackPtVsNMap         -> Sumw2();
  hTrackPtVsNInt         -> Sumw2();
  hTrackPtVsNTpc         -> Sumw2();
  hTrackPtVsNTot         -> Sumw2();
  hTrackPtVsPerMms       -> Sumw2();
  hTrackPtVsPerMap       -> Sumw2();
  hTrackPtVsPerInt       -> Sumw2();
  hTrackPtVsPerTpc       -> Sumw2();
  hTrackPtVsPerTot       -> Sumw2();
  hTrackPtVsChi2         -> Sumw2();
  hTrackPtVsNDF          -> Sumw2();
  hTrackPtVsQuality      -> Sumw2();
  hTrackPtVsDCAxy        -> Sumw2();
  hTrackPtVsDCAz         -> Sumw2();
  hDeltaDCAxyVsTrkPt     -> Sumw2();
  hDeltaDCAzVsTrkPt      -> Sumw2();
  hDeltaEtaVsTrkPt       -> Sumw2();
  hDeltaPhiVsTrkPt       -> Sumw2();
  hDeltaPtVsTrkPt        -> Sumw2();
  hTruthNMms             -> Sumw2();
  hTruthNMap             -> Sumw2();
  hTruthNInt             -> Sumw2();
  hTruthNTpc             -> Sumw2();
  hTruthNTot             -> Sumw2();
  hTruthEta              -> Sumw2();
  hTruthPhi              -> Sumw2();
  hTruthPt               -> Sumw2();
  hTruthVx               -> Sumw2();
  hTruthVy               -> Sumw2();
  hTruthVz               -> Sumw2();
  hTruthEtaFrac          -> Sumw2();
  hTruthPhiFrac          -> Sumw2();
  hTruthPtFrac           -> Sumw2();
  hTruthEtaDiff          -> Sumw2();
  hTruthPhiDiff          -> Sumw2();
  hTruthPtDiff           -> Sumw2();
  hTruthVxDiff           -> Sumw2();
  hTruthVyDiff           -> Sumw2();
  hTruthVzDiff           -> Sumw2();
  hTruthVsTrackEta       -> Sumw2();
  hTruthVsTrackPhi       -> Sumw2();
  hTruthVsTrackPt        -> Sumw2();
  hTruthVsTrackVx        -> Sumw2();
  hTruthVsTrackVy        -> Sumw2();
  hTruthVsTrackVz        -> Sumw2();
  hFracVsTruthEta        -> Sumw2();
  hFracVsTruthPhi        -> Sumw2();
  hFracVsTruthPt         -> Sumw2();
  hDiffVsTruthEta        -> Sumw2();
  hDiffVsTruthPhi        -> Sumw2();
  hDiffVsTruthPt         -> Sumw2();
  hTruthPtVsNMms         -> Sumw2();
  hTruthPtVsNMap         -> Sumw2();
  hTruthPtVsNInt         -> Sumw2();
  hTruthPtVsNTpc         -> Sumw2();
  hTruthPtVsNTot         -> Sumw2();
  hTruthPtVsChi2         -> Sumw2();
  hTruthPtVsNDF          -> Sumw2();
  hTruthPtVsQuality      -> Sumw2();
  hFracPtVsQuality       -> Sumw2();
  hTruthPtVsDCAxy        -> Sumw2();
  hTruthPtVsDCAz         -> Sumw2();
  hDeltaDCAxyVsTruPt     -> Sumw2();
  hDeltaDCAzVsTruPt      -> Sumw2();
  hDeltaEtaVsTruPt       -> Sumw2();
  hDeltaPhiVsTruPt       -> Sumw2();
  hDeltaPtVsTruPt        -> Sumw2();
  hWeirdNMms             -> Sumw2();
  hWeirdNMap             -> Sumw2();
  hWeirdNInt             -> Sumw2();
  hWeirdNTpc             -> Sumw2();
  hWeirdNTot             -> Sumw2();
  hWeirdPerMms           -> Sumw2();
  hWeirdPerMap           -> Sumw2();
  hWeirdPerInt           -> Sumw2();
  hWeirdPerTpc           -> Sumw2();
  hWeirdPerTot           -> Sumw2();
  hWeirdChi2             -> Sumw2();
  hWeirdNDF              -> Sumw2();
  hWeirdQuality          -> Sumw2();
  hWeirdDCAxy            -> Sumw2();
  hWeirdDCAz             -> Sumw2();
  hWeirdVx               -> Sumw2();
  hWeirdVy               -> Sumw2();
  hWeirdVz               -> Sumw2();
  hWeirdEta              -> Sumw2();
  hWeirdPhi              -> Sumw2();
  hWeirdPt               -> Sumw2();
  hWeirdDeltaDCAxy       -> Sumw2();
  hWeirdDeltaDCAz        -> Sumw2();
  hWeirdDeltaEta         -> Sumw2();
  hWeirdDeltaPhi         -> Sumw2();
  hWeirdDeltaPt          -> Sumw2();
  hWeirdVxDiff           -> Sumw2();
  hWeirdVyDiff           -> Sumw2();
  hWeirdVzDiff           -> Sumw2();
  hNormalNMms            -> Sumw2();
  hNormalNMap            -> Sumw2();
  hNormalNInt            -> Sumw2();
  hNormalNTpc            -> Sumw2();
  hNormalNTot            -> Sumw2();
  hNormalPerMms          -> Sumw2();
  hNormalPerMap          -> Sumw2();
  hNormalPerInt          -> Sumw2();
  hNormalPerTpc          -> Sumw2();
  hNormalPerTot          -> Sumw2();
  hNormalChi2            -> Sumw2();
  hNormalNDF             -> Sumw2();
  hNormalQuality         -> Sumw2();
  hNormalDCAxy           -> Sumw2();
  hNormalDCAz            -> Sumw2();
  hNormalVx              -> Sumw2();
  hNormalVy              -> Sumw2();
  hNormalVz              -> Sumw2();
  hNormalEta             -> Sumw2();
  hNormalPhi             -> Sumw2();
  hNormalPt              -> Sumw2();
  hNormalDeltaDCAxy      -> Sumw2();
  hNormalDeltaDCAz       -> Sumw2();
  hNormalDeltaEta        -> Sumw2();
  hNormalDeltaPhi        -> Sumw2();
  hNormalDeltaPt         -> Sumw2();
  hNormalVxDiff          -> Sumw2();
  hNormalVyDiff          -> Sumw2();
  hNormalVzDiff          -> Sumw2();
  // with-pileup errors
  hTrackNMms_PU          -> Sumw2();
  hTrackNMap_PU          -> Sumw2();
  hTrackNInt_PU          -> Sumw2();
  hTrackNTpc_PU          -> Sumw2();
  hTrackNTot_PU          -> Sumw2();
  hTrackPerMms_PU        -> Sumw2();
  hTrackPerMap_PU        -> Sumw2();
  hTrackPerInt_PU        -> Sumw2();
  hTrackPerTpc_PU        -> Sumw2();
  hTrackPerTot_PU        -> Sumw2();
  hTrackChi2_PU          -> Sumw2();
  hTrackNDF_PU           -> Sumw2();
  hTrackQuality_PU       -> Sumw2();
  hTrackDCAxy_PU         -> Sumw2();
  hTrackDCAz_PU          -> Sumw2();
  hTrackVx_PU            -> Sumw2();
  hTrackVy_PU            -> Sumw2();
  hTrackVz_PU            -> Sumw2();
  hTrackEta_PU           -> Sumw2();
  hTrackPhi_PU           -> Sumw2();
  hTrackPt_PU            -> Sumw2();
  hDeltaDCAxy_PU         -> Sumw2();
  hDeltaDCAz_PU          -> Sumw2();
  hDeltaEta_PU           -> Sumw2();
  hDeltaPhi_PU           -> Sumw2();
  hDeltaPt_PU            -> Sumw2();
  hTrackPtVsNMms_PU      -> Sumw2();
  hTrackPtVsNMap_PU      -> Sumw2();
  hTrackPtVsNInt_PU      -> Sumw2();
  hTrackPtVsNTpc_PU      -> Sumw2();
  hTrackPtVsNTot_PU      -> Sumw2();
  hTrackPtVsPerMms_PU    -> Sumw2();
  hTrackPtVsPerMap_PU    -> Sumw2();
  hTrackPtVsPerInt_PU    -> Sumw2();
  hTrackPtVsPerTpc_PU    -> Sumw2();
  hTrackPtVsPerTot_PU    -> Sumw2();
  hTrackPtVsChi2_PU      -> Sumw2();
  hTrackPtVsNDF_PU       -> Sumw2();
  hTrackPtVsQuality_PU   -> Sumw2();
  hTrackPtVsDCAxy_PU     -> Sumw2();
  hTrackPtVsDCAz_PU      -> Sumw2();
  hDeltaDCAxyVsTrkPt_PU  -> Sumw2();
  hDeltaDCAzVsTrkPt_PU   -> Sumw2();
  hDeltaEtaVsTrkPt_PU    -> Sumw2();
  hDeltaPhiVsTrkPt_PU    -> Sumw2();
  hDeltaPtVsTrkPt_PU     -> Sumw2();
  hPrimaryNMms_PU        -> Sumw2();
  hPrimaryNMap_PU        -> Sumw2();
  hPrimaryNInt_PU        -> Sumw2();
  hPrimaryNTpc_PU        -> Sumw2();
  hPrimaryNTot_PU        -> Sumw2();
  hPrimaryPerMms_PU      -> Sumw2();
  hPrimaryPerMap_PU      -> Sumw2();
  hPrimaryPerInt_PU      -> Sumw2();
  hPrimaryPerTpc_PU      -> Sumw2();
  hPrimaryPerTot_PU      -> Sumw2();
  hPrimaryChi2_PU        -> Sumw2();
  hPrimaryNDF_PU         -> Sumw2();
  hPrimaryQuality_PU     -> Sumw2();
  hPrimaryDCAxy_PU       -> Sumw2();
  hPrimaryDCAz_PU        -> Sumw2();
  hPrimaryVx_PU          -> Sumw2();
  hPrimaryVy_PU          -> Sumw2();
  hPrimaryVz_PU          -> Sumw2();
  hPrimaryEta_PU         -> Sumw2();
  hPrimaryPhi_PU         -> Sumw2();
  hPrimaryPt_PU          -> Sumw2();
  hDeltaPrimDCAxy_PU     -> Sumw2();
  hDeltaPrimDCAz_PU      -> Sumw2();
  hDeltaPrimEta_PU       -> Sumw2();
  hDeltaPrimPhi_PU       -> Sumw2();
  hDeltaPrimPt_PU        -> Sumw2();
  hPrimaryPtVsNMms_PU    -> Sumw2();
  hPrimaryPtVsNMap_PU    -> Sumw2();
  hPrimaryPtVsNInt_PU    -> Sumw2();
  hPrimaryPtVsNTpc_PU    -> Sumw2();
  hPrimaryPtVsNTot_PU    -> Sumw2();
  hPrimaryPtVsPerMms_PU  -> Sumw2();
  hPrimaryPtVsPerMap_PU  -> Sumw2();
  hPrimaryPtVsPerInt_PU  -> Sumw2();
  hPrimaryPtVsPerTpc_PU  -> Sumw2();
  hPrimaryPtVsPerTot_PU  -> Sumw2();
  hPrimaryPtVsChi2_PU    -> Sumw2();
  hPrimaryPtVsNDF_PU     -> Sumw2();
  hPrimaryPtVsQuality_PU -> Sumw2();
  hPrimaryPtVsDCAxy_PU   -> Sumw2();
  hPrimaryPtVsDCAz_PU    -> Sumw2();
  hDeltaDCAxyVsPrimPt_PU -> Sumw2();
  hDeltaDCAzVsPrimPt_PU  -> Sumw2();
  hDeltaEtaVsPrimPt_PU   -> Sumw2();
  hDeltaPhiVsPrimPt_PU   -> Sumw2();
  hDeltaPtVsPrimPt_PU    -> Sumw2();
  hNonPrimNMms_PU        -> Sumw2();
  hNonPrimNMap_PU        -> Sumw2();
  hNonPrimNInt_PU        -> Sumw2();
  hNonPrimNTpc_PU        -> Sumw2();
  hNonPrimNTot_PU        -> Sumw2();
  hNonPrimPerMms_PU      -> Sumw2();
  hNonPrimPerMap_PU      -> Sumw2();
  hNonPrimPerInt_PU      -> Sumw2();
  hNonPrimPerTpc_PU      -> Sumw2();
  hNonPrimPerTot_PU      -> Sumw2();
  hNonPrimChi2_PU        -> Sumw2();
  hNonPrimNDF_PU         -> Sumw2();
  hNonPrimQuality_PU     -> Sumw2();
  hNonPrimDCAxy_PU       -> Sumw2();
  hNonPrimDCAz_PU        -> Sumw2();
  hNonPrimVx_PU          -> Sumw2();
  hNonPrimVy_PU          -> Sumw2();
  hNonPrimVz_PU          -> Sumw2();
  hNonPrimEta_PU         -> Sumw2();
  hNonPrimPhi_PU         -> Sumw2();
  hNonPrimPt_PU          -> Sumw2();
  hDeltaNoPrDCAxy_PU     -> Sumw2();
  hDeltaNoPrDCAz_PU      -> Sumw2();
  hDeltaNoPrEta_PU       -> Sumw2();
  hDeltaNoPrPhi_PU       -> Sumw2();
  hDeltaNoPrPt_PU        -> Sumw2();
  hNonPrimPtVsNMms_PU    -> Sumw2();
  hNonPrimPtVsNMap_PU    -> Sumw2();
  hNonPrimPtVsNInt_PU    -> Sumw2();
  hNonPrimPtVsNTpc_PU    -> Sumw2();
  hNonPrimPtVsNTot_PU    -> Sumw2();
  hNonPrimPtVsPerMms_PU  -> Sumw2();
  hNonPrimPtVsPerMap_PU  -> Sumw2();
  hNonPrimPtVsPerInt_PU  -> Sumw2();
  hNonPrimPtVsPerTpc_PU  -> Sumw2();
  hNonPrimPtVsPerTot_PU  -> Sumw2();
  hNonPrimPtVsChi2_PU    -> Sumw2();
  hNonPrimPtVsNDF_PU     -> Sumw2();
  hNonPrimPtVsQuality_PU -> Sumw2();
  hNonPrimPtVsDCAxy_PU   -> Sumw2();
  hNonPrimPtVsDCAz_PU    -> Sumw2();
  hDeltaDCAxyVsNoPrPt_PU -> Sumw2();
  hDeltaDCAzVsNoPrPt_PU  -> Sumw2();
  hDeltaEtaVsNoPrPt_PU   -> Sumw2();
  hDeltaPhiVsNoPrPt_PU   -> Sumw2();
  cout << "      Initialized output histograms." << endl;

}  // end 'InitHits()'



void STrackCutStudy::SetHistStyles() {

  // plot parameters
  const UInt_t  fColTrk(923);
  const UInt_t  fColTru(899);
  const UInt_t  fColOdd(859);
  const UInt_t  fColNorm(879);
  const UInt_t  fColPrim(879);
  const UInt_t  fColNoPr(799);
  const UInt_t  fMarTrk(20);
  const UInt_t  fMarTru(24);
  const UInt_t  fMarOdd(25);
  const UInt_t  fMarNorm(27);
  const UInt_t  fMarPrim(26);
  const UInt_t  fMarNoPr(32);
  const UInt_t  fFil(0);
  const UInt_t  fLin(1);
  const Float_t fOffX(1.0);
  const Float_t fOffY(1.2); 
  const Float_t fOffZ(1.0);

  // select count label to use
  TString sCountToUse("");
  if (doIntNorm) {
    sCountToUse = "arbitrary units";
  } else {
    sCountToUse = "counts";
  } 

  // generic axis titles
  const TString sCount(sCountToUse.Data());
  const TString sPerMms("r_{MMS} = N_{layer/trk}^{MMS} / N_{layer/truth}^{MMS}");
  const TString sPerMap("r_{MAPS} = N_{layer/trk}^{MAPS} / N_{layer/truth}^{MAPS}");
  const TString sPerInt("r_{INTT} = N_{layer/trk}^{INTT} / N_{layer/truth}^{INTT}");
  const TString sPerTpc("r_{TPC} = N_{layer/trk}^{TPC} / N_{layer/truth}^{TPC}");
  const TString sPerTot("r_{tot} = N_{layer/trk}^{tot} / N_{layer/truth}^{tot}");
  // track specific axis titles
  const TString sTrkNMms("N_{layer}^{MMS}");
  const TString sTrkNMap("N_{layer}^{MAPS}");
  const TString sTrkNInt("N_{layer}^{INTT}");
  const TString sTrkNTpc("N_{layer}^{TPC}");
  const TString sTrkNTot("N_{layer}^{tot}");
  const TString sTrkChi2("#chi^{2}");
  const TString sTrkNDF("ndf");
  const TString sTrkQuality("#chi^{2}/ndf");
  const TString sTrkDCAxy("DCA_{xy} [#mum]");
  const TString sTrkDCAz("DCA_{z} [#mum]");
  const TString sTrkVx("v_{x}^{trk} [cm]");
  const TString sTrkVy("v_{y}^{trk} [cm]");
  const TString sTrkVz("v_{z}^{trk} [cm]");
  const TString sTrkEta("#eta^{trk}");
  const TString sTrkPhi("#phi^{trk}");
  const TString sTrkPt("p_{T}^{trk} [GeV/c]");
  const TString sDeltaDCAxy("#DeltaDCA_{xy} / DCA_{xy}");
  const TString sDeltaDCAz("#DeltaDCA_{z} / DCA_{z}");
  const TString sDeltaEta("#Delta#eta^{trk} / #eta^{trk}");
  const TString sDeltaPhi("#Delta#phi^{trk} / #phi^{trk}");
  const TString sDeltaPt("#Deltap_{T}^{trk} / p_{T}^{trk}");
  // truth specific axis titles
  const TString sTruNMms("N_{layer}^{MMS}");
  const TString sTruNMap("N_{layer}^{MAPS}");
  const TString sTruNInt("N_{layer}^{INTT}");
  const TString sTruNTpc("N_{layer}^{TPC}");
  const TString sTruNTot("N_{layer}^{tot}");
  const TString sTruEta("#eta^{truth}");
  const TString sTruPhi("#phi^{truth}");
  const TString sTruPt("p_{T}^{truth} [GeV/c]");
  const TString sTruVx("v_{x}^{truth} [cm]");
  const TString sTruVy("v_{y}^{truth} [cm]");
  const TString sTruVz("v_{z}^{truth} [cm]");
  const TString sFracEta("#delta#eta^{trk} = #eta^{trk} / #eta^{truth}");
  const TString sFracPhi("#delta#phi^{trk} = #phi^{trk} / #phi^{truth}");
  const TString sFracPt("#deltap_{T}^{trk} = p_{T}^{trk} / p_{T}^{truth}");
  const TString sDiffEta("#varsigma#eta^{trk} = #eta^{trk} - #eta^{truth}");
  const TString sDiffPhi("#varsigma#phi^{trk} = #phi^{trk} - #phi^{truth}");
  const TString sDiffPt("#varsigmap_{T}^{trk} = p_{T}^{trk} - p_{T}^{truth}");
  const TString sDiffVx("#varsigmav_{x} = v_{x}^{trk} - v_{x}^{truth}");
  const TString sDiffVy("#varsigmav_{y} = v_{y}^{trk} - v_{y}^{truth}");
  const TString sDiffVz("#varsigmav_{z} = v_{z}^{trk} - v_{z}^{truth}");

  // set embed-only track histogram styles
  hTrackNMms             -> SetMarkerColor(fColTrk);
  hTrackNMms             -> SetMarkerStyle(fMarTrk);
  hTrackNMms             -> SetLineColor(fColTrk);
  hTrackNMms             -> SetLineStyle(fLin);
  hTrackNMms             -> SetFillColor(fColTrk);
  hTrackNMms             -> SetFillStyle(fFil);
  hTrackNMms             -> SetTitleFont(FTxt);
  hTrackNMms             -> GetXaxis() -> SetTitle(sTrkNMms.Data());
  hTrackNMms             -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackNMms             -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackNMms             -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackNMms             -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackNMms             -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackNMap             -> SetMarkerColor(fColTrk);
  hTrackNMap             -> SetMarkerStyle(fMarTrk);
  hTrackNMap             -> SetLineColor(fColTrk);
  hTrackNMap             -> SetLineStyle(fLin);
  hTrackNMap             -> SetFillColor(fColTrk);
  hTrackNMap             -> SetFillStyle(fFil);
  hTrackNMap             -> SetTitleFont(FTxt);
  hTrackNMap             -> GetXaxis() -> SetTitle(sTrkNMap.Data());
  hTrackNMap             -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackNMap             -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackNMap             -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackNMap             -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackNMap             -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackNInt             -> SetMarkerColor(fColTrk);
  hTrackNInt             -> SetMarkerStyle(fMarTrk);
  hTrackNInt             -> SetLineColor(fColTrk);
  hTrackNInt             -> SetLineStyle(fLin);
  hTrackNInt             -> SetFillColor(fColTrk);
  hTrackNInt             -> SetFillStyle(fFil);
  hTrackNInt             -> SetTitleFont(FTxt);
  hTrackNInt             -> GetXaxis() -> SetTitle(sTrkNInt.Data());
  hTrackNInt             -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackNInt             -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackNInt             -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackNInt             -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackNInt             -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackNTpc             -> SetMarkerColor(fColTrk);
  hTrackNTpc             -> SetMarkerStyle(fMarTrk);
  hTrackNTpc             -> SetLineColor(fColTrk);
  hTrackNTpc             -> SetLineStyle(fLin);
  hTrackNTpc             -> SetFillColor(fColTrk);
  hTrackNTpc             -> SetFillStyle(fFil);
  hTrackNTpc             -> SetTitleFont(FTxt);
  hTrackNTpc             -> GetXaxis() -> SetTitle(sTrkNTpc.Data());
  hTrackNTpc             -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackNTpc             -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackNTpc             -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackNTpc             -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackNTpc             -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackNTot             -> SetMarkerColor(fColTrk);
  hTrackNTot             -> SetMarkerStyle(fMarTrk);
  hTrackNTot             -> SetLineColor(fColTrk);
  hTrackNTot             -> SetLineStyle(fLin);
  hTrackNTot             -> SetFillColor(fColTrk);
  hTrackNTot             -> SetFillStyle(fFil);
  hTrackNTot             -> SetTitleFont(FTxt);
  hTrackNTot             -> GetXaxis() -> SetTitle(sTrkNTot.Data());
  hTrackNTot             -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackNTot             -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackNTot             -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackNTot             -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackNTot             -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPerMms           -> SetMarkerColor(fColTrk);
  hTrackPerMms           -> SetMarkerStyle(fMarTrk);
  hTrackPerMms           -> SetLineColor(fColTrk);
  hTrackPerMms           -> SetLineStyle(fLin);
  hTrackPerMms           -> SetFillColor(fColTrk);
  hTrackPerMms           -> SetFillStyle(fFil);
  hTrackPerMms           -> SetTitleFont(FTxt);
  hTrackPerMms           -> GetXaxis() -> SetTitle(sPerMms.Data());
  hTrackPerMms           -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPerMms           -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPerMms           -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackPerMms           -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPerMms           -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPerMap           -> SetMarkerColor(fColTrk);
  hTrackPerMap           -> SetMarkerStyle(fMarTrk);
  hTrackPerMap           -> SetLineColor(fColTrk);
  hTrackPerMap           -> SetLineStyle(fLin);
  hTrackPerMap           -> SetFillColor(fColTrk);
  hTrackPerMap           -> SetFillStyle(fFil);
  hTrackPerMap           -> SetTitleFont(FTxt);
  hTrackPerMap           -> GetXaxis() -> SetTitle(sPerMap.Data());
  hTrackPerMap           -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPerMap           -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPerMap           -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackPerMap           -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPerMap           -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPerInt           -> SetMarkerColor(fColTrk);
  hTrackPerInt           -> SetMarkerStyle(fMarTrk);
  hTrackPerInt           -> SetLineColor(fColTrk);
  hTrackPerInt           -> SetLineStyle(fLin);
  hTrackPerInt           -> SetFillColor(fColTrk);
  hTrackPerInt           -> SetFillStyle(fFil);
  hTrackPerInt           -> SetTitleFont(FTxt);
  hTrackPerInt           -> GetXaxis() -> SetTitle(sPerInt.Data());
  hTrackPerInt           -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPerInt           -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPerInt           -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackPerInt           -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPerInt           -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPerTpc           -> SetMarkerColor(fColTrk);
  hTrackPerTpc           -> SetMarkerStyle(fMarTrk);
  hTrackPerTpc           -> SetLineColor(fColTrk);
  hTrackPerTpc           -> SetLineStyle(fLin);
  hTrackPerTpc           -> SetFillColor(fColTrk);
  hTrackPerTpc           -> SetFillStyle(fFil);
  hTrackPerTpc           -> SetTitleFont(FTxt);
  hTrackPerTpc           -> GetXaxis() -> SetTitle(sPerTpc.Data());
  hTrackPerTpc           -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPerTpc           -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPerTpc           -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackPerTpc           -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPerTpc           -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPerTot           -> SetMarkerColor(fColTrk);
  hTrackPerTot           -> SetMarkerStyle(fMarTrk);
  hTrackPerTot           -> SetLineColor(fColTrk);
  hTrackPerTot           -> SetLineStyle(fLin);
  hTrackPerTot           -> SetFillColor(fColTrk);
  hTrackPerTot           -> SetFillStyle(fFil);
  hTrackPerTot           -> SetTitleFont(FTxt);
  hTrackPerTot           -> GetXaxis() -> SetTitle(sPerTot.Data());
  hTrackPerTot           -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPerTot           -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPerTot           -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackPerTot           -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPerTot           -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackChi2             -> SetMarkerColor(fColTrk);
  hTrackChi2             -> SetMarkerStyle(fMarTrk);
  hTrackChi2             -> SetLineColor(fColTrk);
  hTrackChi2             -> SetLineStyle(fLin);
  hTrackChi2             -> SetFillColor(fColTrk);
  hTrackChi2             -> SetFillStyle(fFil);
  hTrackChi2             -> SetTitleFont(FTxt);
  hTrackChi2             -> GetXaxis() -> SetTitle(sTrkChi2.Data());
  hTrackChi2             -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackChi2             -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackChi2             -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackChi2             -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackChi2             -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackNDF              -> SetMarkerColor(fColTrk);
  hTrackNDF              -> SetMarkerStyle(fMarTrk);
  hTrackNDF              -> SetLineColor(fColTrk);
  hTrackNDF              -> SetLineStyle(fLin);
  hTrackNDF              -> SetFillColor(fColTrk);
  hTrackNDF              -> SetFillStyle(fFil);
  hTrackNDF              -> SetTitleFont(FTxt);
  hTrackNDF              -> GetXaxis() -> SetTitle(sTrkNDF.Data());
  hTrackNDF              -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackNDF              -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackNDF              -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackNDF              -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackNDF              -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackQuality          -> SetMarkerColor(fColTrk);
  hTrackQuality          -> SetMarkerStyle(fMarTrk);
  hTrackQuality          -> SetLineColor(fColTrk);
  hTrackQuality          -> SetLineStyle(fLin);
  hTrackQuality          -> SetFillColor(fColTrk);
  hTrackQuality          -> SetFillStyle(fFil);
  hTrackQuality          -> SetTitleFont(FTxt);
  hTrackQuality          -> GetXaxis() -> SetTitle(sTrkQuality.Data());
  hTrackQuality          -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackQuality          -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackQuality          -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackQuality          -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackQuality          -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackDCAxy            -> SetMarkerColor(fColTrk);
  hTrackDCAxy            -> SetMarkerStyle(fMarTrk);
  hTrackDCAxy            -> SetLineColor(fColTrk);
  hTrackDCAxy            -> SetLineStyle(fLin);
  hTrackDCAxy            -> SetFillColor(fColTrk);
  hTrackDCAxy            -> SetFillStyle(fFil);
  hTrackDCAxy            -> SetTitleFont(FTxt);
  hTrackDCAxy            -> GetXaxis() -> SetTitle(sTrkDCAxy.Data());
  hTrackDCAxy            -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackDCAxy            -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackDCAxy            -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackDCAxy            -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackDCAxy            -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackDCAz             -> SetMarkerColor(fColTrk);
  hTrackDCAz             -> SetMarkerStyle(fMarTrk);
  hTrackDCAz             -> SetLineColor(fColTrk);
  hTrackDCAz             -> SetLineStyle(fLin);
  hTrackDCAz             -> SetFillColor(fColTrk);
  hTrackDCAz             -> SetFillStyle(fFil);
  hTrackDCAz             -> SetTitleFont(FTxt);
  hTrackDCAz             -> GetXaxis() -> SetTitle(sTrkDCAz.Data());
  hTrackDCAz             -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackDCAz             -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackDCAz             -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackDCAz             -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackDCAz             -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackVx               -> SetMarkerColor(fColTrk);
  hTrackVx               -> SetMarkerStyle(fMarTrk);
  hTrackVx               -> SetLineColor(fColTrk);
  hTrackVx               -> SetLineStyle(fLin);
  hTrackVx               -> SetFillColor(fColTrk);
  hTrackVx               -> SetFillStyle(fFil);
  hTrackVx               -> SetTitleFont(FTxt);
  hTrackVx               -> GetXaxis() -> SetTitle(sTrkVx.Data());
  hTrackVx               -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackVx               -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackVx               -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackVx               -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackVx               -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackVy               -> SetMarkerColor(fColTrk);
  hTrackVy               -> SetMarkerStyle(fMarTrk);
  hTrackVy               -> SetLineColor(fColTrk);
  hTrackVy               -> SetLineStyle(fLin);
  hTrackVy               -> SetFillColor(fColTrk);
  hTrackVy               -> SetFillStyle(fFil);
  hTrackVy               -> SetTitleFont(FTxt);
  hTrackVy               -> GetXaxis() -> SetTitle(sTrkVy.Data());
  hTrackVy               -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackVy               -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackVy               -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackVy               -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackVy               -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackVz               -> SetMarkerColor(fColTrk);
  hTrackVz               -> SetMarkerStyle(fMarTrk);
  hTrackVz               -> SetLineColor(fColTrk);
  hTrackVz               -> SetLineStyle(fLin);
  hTrackVz               -> SetFillColor(fColTrk);
  hTrackVz               -> SetFillStyle(fFil);
  hTrackVz               -> SetTitleFont(FTxt);
  hTrackVz               -> GetXaxis() -> SetTitle(sTrkVz.Data());
  hTrackVz               -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackVz               -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackVz               -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackVz               -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackVz               -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackEta              -> SetMarkerColor(fColTrk);
  hTrackEta              -> SetMarkerStyle(fMarTrk);
  hTrackEta              -> SetLineColor(fColTrk);
  hTrackEta              -> SetLineStyle(fLin);
  hTrackEta              -> SetFillColor(fColTrk);
  hTrackEta              -> SetFillStyle(fFil);
  hTrackEta              -> SetTitleFont(FTxt);
  hTrackEta              -> GetXaxis() -> SetTitle(sTrkEta.Data());
  hTrackEta              -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackEta              -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackEta              -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackEta              -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackEta              -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPhi              -> SetMarkerColor(fColTrk);
  hTrackPhi              -> SetMarkerStyle(fMarTrk);
  hTrackPhi              -> SetLineColor(fColTrk);
  hTrackPhi              -> SetLineStyle(fLin);
  hTrackPhi              -> SetFillColor(fColTrk);
  hTrackPhi              -> SetFillStyle(fFil);
  hTrackPhi              -> SetTitleFont(FTxt);
  hTrackPhi              -> GetXaxis() -> SetTitle(sTrkPhi.Data());
  hTrackPhi              -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPhi              -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPhi              -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackPhi              -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPhi              -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPt               -> SetMarkerColor(fColTrk);
  hTrackPt               -> SetMarkerStyle(fMarTrk);
  hTrackPt               -> SetLineColor(fColTrk);
  hTrackPt               -> SetLineStyle(fLin);
  hTrackPt               -> SetFillColor(fColTrk);
  hTrackPt               -> SetFillStyle(fFil);
  hTrackPt               -> SetTitleFont(FTxt);
  hTrackPt               -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hTrackPt               -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPt               -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPt               -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackPt               -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPt               -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaDCAxy            -> SetMarkerColor(fColTrk);
  hDeltaDCAxy            -> SetMarkerStyle(fMarTrk);
  hDeltaDCAxy            -> SetLineColor(fColTrk);
  hDeltaDCAxy            -> SetLineStyle(fLin);
  hDeltaDCAxy            -> SetFillColor(fColTrk);
  hDeltaDCAxy            -> SetFillStyle(fFil);
  hDeltaDCAxy            -> SetTitleFont(FTxt);
  hDeltaDCAxy            -> GetXaxis() -> SetTitle(sDeltaDCAxy.Data());
  hDeltaDCAxy            -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaDCAxy            -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaDCAxy            -> GetYaxis() -> SetTitle(sCount.Data());
  hDeltaDCAxy            -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaDCAxy            -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaDCAz             -> SetMarkerColor(fColTrk);
  hDeltaDCAz             -> SetMarkerStyle(fMarTrk);
  hDeltaDCAz             -> SetLineColor(fColTrk);
  hDeltaDCAz             -> SetLineStyle(fLin);
  hDeltaDCAz             -> SetFillColor(fColTrk);
  hDeltaDCAz             -> SetFillStyle(fFil);
  hDeltaDCAz             -> SetTitleFont(FTxt);
  hDeltaDCAz             -> GetXaxis() -> SetTitle(sDeltaDCAz.Data());
  hDeltaDCAz             -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaDCAz             -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaDCAz             -> GetYaxis() -> SetTitle(sCount.Data());
  hDeltaDCAz             -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaDCAz             -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaEta              -> SetMarkerColor(fColTrk);
  hDeltaEta              -> SetMarkerStyle(fMarTrk);
  hDeltaEta              -> SetLineColor(fColTrk);
  hDeltaEta              -> SetLineStyle(fLin);
  hDeltaEta              -> SetFillColor(fColTrk);
  hDeltaEta              -> SetFillStyle(fFil);
  hDeltaEta              -> SetTitleFont(FTxt);
  hDeltaEta              -> GetXaxis() -> SetTitle(sDeltaEta.Data());
  hDeltaEta              -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaEta              -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaEta              -> GetYaxis() -> SetTitle(sCount.Data());
  hDeltaEta              -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaEta              -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaEta              -> SetMarkerColor(fColTrk);
  hDeltaPhi              -> SetMarkerStyle(fMarTrk);
  hDeltaPhi              -> SetLineColor(fColTrk);
  hDeltaPhi              -> SetLineStyle(fLin);
  hDeltaPhi              -> SetFillColor(fColTrk);
  hDeltaPhi              -> SetFillStyle(fFil);
  hDeltaPhi              -> SetTitleFont(FTxt);
  hDeltaPhi              -> GetXaxis() -> SetTitle(sDeltaPhi.Data());
  hDeltaPhi              -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaPhi              -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaPhi              -> GetYaxis() -> SetTitle(sCount.Data());
  hDeltaPhi              -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaPhi              -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaPt               -> SetMarkerStyle(fMarTrk);
  hDeltaPt               -> SetLineColor(fColTrk);
  hDeltaPt               -> SetLineStyle(fLin);
  hDeltaPt               -> SetFillColor(fColTrk);
  hDeltaPt               -> SetFillStyle(fFil);
  hDeltaPt               -> SetTitleFont(FTxt);
  hDeltaPt               -> GetXaxis() -> SetTitle(sDeltaPt.Data());
  hDeltaPt               -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaPt               -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaPt               -> GetYaxis() -> SetTitle(sCount.Data());
  hDeltaPt               -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaPt               -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsNMms         -> SetMarkerColor(fColTrk);
  hTrackPtVsNMms         -> SetMarkerStyle(fMarTrk);
  hTrackPtVsNMms         -> SetLineColor(fColTrk);
  hTrackPtVsNMms         -> SetLineStyle(fLin);
  hTrackPtVsNMms         -> SetFillColor(fColTrk);
  hTrackPtVsNMms         -> SetFillStyle(fFil);
  hTrackPtVsNMms         -> SetTitleFont(FTxt);
  hTrackPtVsNMms         -> GetXaxis() -> SetTitle(sTrkNMms.Data());
  hTrackPtVsNMms         -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNMms         -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsNMms         -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsNMms         -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNMms         -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsNMms         -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsNMms         -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNMms         -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsNMap         -> SetMarkerColor(fColTrk);
  hTrackPtVsNMap         -> SetMarkerStyle(fMarTrk);
  hTrackPtVsNMap         -> SetLineColor(fColTrk);
  hTrackPtVsNMap         -> SetLineStyle(fLin);
  hTrackPtVsNMap         -> SetFillColor(fColTrk);
  hTrackPtVsNMap         -> SetFillStyle(fFil);
  hTrackPtVsNMap         -> SetTitleFont(FTxt);
  hTrackPtVsNMap         -> GetXaxis() -> SetTitle(sTrkNMap.Data());
  hTrackPtVsNMap         -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNMap         -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsNMap         -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsNMap         -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNMap         -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsNMap         -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsNMap         -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNMap         -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsNInt         -> SetMarkerColor(fColTrk);
  hTrackPtVsNInt         -> SetMarkerStyle(fMarTrk);
  hTrackPtVsNInt         -> SetLineColor(fColTrk);
  hTrackPtVsNInt         -> SetLineStyle(fLin);
  hTrackPtVsNInt         -> SetFillColor(fColTrk);
  hTrackPtVsNInt         -> SetFillStyle(fFil);
  hTrackPtVsNInt         -> SetTitleFont(FTxt);
  hTrackPtVsNInt         -> GetXaxis() -> SetTitle(sTrkNInt.Data());
  hTrackPtVsNInt         -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNInt         -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsNInt         -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsNInt         -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNInt         -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsNInt         -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsNInt         -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNInt         -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsNTpc         -> SetMarkerColor(fColTrk);
  hTrackPtVsNTpc         -> SetMarkerStyle(fMarTrk);
  hTrackPtVsNTpc         -> SetLineColor(fColTrk);
  hTrackPtVsNTpc         -> SetLineStyle(fLin);
  hTrackPtVsNTpc         -> SetFillColor(fColTrk);
  hTrackPtVsNTpc         -> SetFillStyle(fFil);
  hTrackPtVsNTpc         -> SetTitleFont(FTxt);
  hTrackPtVsNTpc         -> GetXaxis() -> SetTitle(sTrkNTpc.Data());
  hTrackPtVsNTpc         -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNTpc         -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsNTpc         -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsNTpc         -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNTpc         -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsNTpc         -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsNTpc         -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNTpc         -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsNTot         -> SetMarkerColor(fColTrk);
  hTrackPtVsNTot         -> SetMarkerStyle(fMarTrk);
  hTrackPtVsNTot         -> SetLineColor(fColTrk);
  hTrackPtVsNTot         -> SetLineStyle(fLin);
  hTrackPtVsNTot         -> SetFillColor(fColTrk);
  hTrackPtVsNTot         -> SetFillStyle(fFil);
  hTrackPtVsNTot         -> SetTitleFont(FTxt);
  hTrackPtVsNTot         -> GetXaxis() -> SetTitle(sTrkNTot.Data());
  hTrackPtVsNTot         -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNTot         -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsNTot         -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsNTot         -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNTot         -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsNTot         -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsNTot         -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNTot         -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsPerMms       -> SetMarkerColor(fColTrk);
  hTrackPtVsPerMms       -> SetMarkerStyle(fMarTrk);
  hTrackPtVsPerMms       -> SetLineColor(fColTrk);
  hTrackPtVsPerMms       -> SetLineStyle(fLin);
  hTrackPtVsPerMms       -> SetFillColor(fColTrk);
  hTrackPtVsPerMms       -> SetFillStyle(fFil);
  hTrackPtVsPerMms       -> SetTitleFont(FTxt);
  hTrackPtVsPerMms       -> GetXaxis() -> SetTitle(sPerMms.Data());
  hTrackPtVsPerMms       -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerMms       -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsPerMms       -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsPerMms       -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerMms       -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsPerMms       -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsPerMms       -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerMms       -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsPerMap       -> SetMarkerColor(fColTrk);
  hTrackPtVsPerMap       -> SetMarkerStyle(fMarTrk);
  hTrackPtVsPerMap       -> SetLineColor(fColTrk);
  hTrackPtVsPerMap       -> SetLineStyle(fLin);
  hTrackPtVsPerMap       -> SetFillColor(fColTrk);
  hTrackPtVsPerMap       -> SetFillStyle(fFil);
  hTrackPtVsPerMap       -> SetTitleFont(FTxt);
  hTrackPtVsPerMap       -> GetXaxis() -> SetTitle(sPerMap.Data());
  hTrackPtVsPerMap       -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerMap       -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsPerMap       -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsPerMap       -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerMap       -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsPerMap       -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsPerMap       -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerMap       -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsPerInt       -> SetMarkerColor(fColTrk);
  hTrackPtVsPerInt       -> SetMarkerStyle(fMarTrk);
  hTrackPtVsPerInt       -> SetLineColor(fColTrk);
  hTrackPtVsPerInt       -> SetLineStyle(fLin);
  hTrackPtVsPerInt       -> SetFillColor(fColTrk);
  hTrackPtVsPerInt       -> SetFillStyle(fFil);
  hTrackPtVsPerInt       -> SetTitleFont(FTxt);
  hTrackPtVsPerInt       -> GetXaxis() -> SetTitle(sPerInt.Data());
  hTrackPtVsPerInt       -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerInt       -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsPerInt       -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsPerInt       -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerInt       -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsPerInt       -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsPerInt       -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerInt       -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsPerTpc       -> SetMarkerColor(fColTrk);
  hTrackPtVsPerTpc       -> SetMarkerStyle(fMarTrk);
  hTrackPtVsPerTpc       -> SetLineColor(fColTrk);
  hTrackPtVsPerTpc       -> SetLineStyle(fLin);
  hTrackPtVsPerTpc       -> SetFillColor(fColTrk);
  hTrackPtVsPerTpc       -> SetFillStyle(fFil);
  hTrackPtVsPerTpc       -> SetTitleFont(FTxt);
  hTrackPtVsPerTpc       -> GetXaxis() -> SetTitle(sPerTpc.Data());
  hTrackPtVsPerTpc       -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerTpc       -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsPerTpc       -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsPerTpc       -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerTpc       -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsPerTpc       -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsPerTpc       -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerTpc       -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsPerTot       -> SetMarkerColor(fColTrk);
  hTrackPtVsPerTot       -> SetMarkerStyle(fMarTrk);
  hTrackPtVsPerTot       -> SetLineColor(fColTrk);
  hTrackPtVsPerTot       -> SetLineStyle(fLin);
  hTrackPtVsPerTot       -> SetFillColor(fColTrk);
  hTrackPtVsPerTot       -> SetFillStyle(fFil);
  hTrackPtVsPerTot       -> SetTitleFont(FTxt);
  hTrackPtVsPerTot       -> GetXaxis() -> SetTitle(sPerTot.Data());
  hTrackPtVsPerTot       -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerTot       -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsPerTot       -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsPerTot       -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerTot       -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsPerTot       -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsPerTot       -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerTot       -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsChi2         -> SetMarkerColor(fColTrk);
  hTrackPtVsChi2         -> SetMarkerStyle(fMarTrk);
  hTrackPtVsChi2         -> SetLineColor(fColTrk);
  hTrackPtVsChi2         -> SetLineStyle(fLin);
  hTrackPtVsChi2         -> SetFillColor(fColTrk);
  hTrackPtVsChi2         -> SetFillStyle(fFil);
  hTrackPtVsChi2         -> SetTitleFont(FTxt);
  hTrackPtVsChi2         -> GetXaxis() -> SetTitle(sTrkChi2.Data());
  hTrackPtVsChi2         -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsChi2         -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsChi2         -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsChi2         -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsChi2         -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsChi2         -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsChi2         -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsChi2         -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsNDF          -> SetMarkerColor(fColTrk);
  hTrackPtVsNDF          -> SetMarkerStyle(fMarTrk);
  hTrackPtVsNDF          -> SetLineColor(fColTrk);
  hTrackPtVsNDF          -> SetLineStyle(fLin);
  hTrackPtVsNDF          -> SetFillColor(fColTrk);
  hTrackPtVsNDF          -> SetFillStyle(fFil);
  hTrackPtVsNDF          -> SetTitleFont(FTxt);
  hTrackPtVsNDF          -> GetXaxis() -> SetTitle(sTrkNDF.Data());
  hTrackPtVsNDF          -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNDF          -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsNDF          -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsNDF          -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNDF          -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsNDF          -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsNDF          -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNDF          -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsQuality      -> SetMarkerColor(fColTrk);
  hTrackPtVsQuality      -> SetMarkerStyle(fMarTrk);
  hTrackPtVsQuality      -> SetLineColor(fColTrk);
  hTrackPtVsQuality      -> SetLineStyle(fLin);
  hTrackPtVsQuality      -> SetFillColor(fColTrk);
  hTrackPtVsQuality      -> SetFillStyle(fFil);
  hTrackPtVsQuality      -> SetTitleFont(FTxt);
  hTrackPtVsQuality      -> GetXaxis() -> SetTitle(sTrkQuality.Data());
  hTrackPtVsQuality      -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsQuality      -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsQuality      -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsQuality      -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsQuality      -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsQuality      -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsQuality      -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsQuality      -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsDCAxy        -> SetMarkerColor(fColTrk);
  hTrackPtVsDCAxy        -> SetMarkerStyle(fMarTrk);
  hTrackPtVsDCAxy        -> SetLineColor(fColTrk);
  hTrackPtVsDCAxy        -> SetLineStyle(fLin);
  hTrackPtVsDCAxy        -> SetFillColor(fColTrk);
  hTrackPtVsDCAxy        -> SetFillStyle(fFil);
  hTrackPtVsDCAxy        -> SetTitleFont(FTxt);
  hTrackPtVsDCAxy        -> GetXaxis() -> SetTitle(sTrkDCAxy.Data());
  hTrackPtVsDCAxy        -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsDCAxy        -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsDCAxy        -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsDCAxy        -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsDCAxy        -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsDCAxy        -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsDCAxy        -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsDCAxy        -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsDCAz         -> SetMarkerColor(fColTrk);
  hTrackPtVsDCAz         -> SetMarkerStyle(fMarTrk);
  hTrackPtVsDCAz         -> SetLineColor(fColTrk);
  hTrackPtVsDCAz         -> SetLineStyle(fLin);
  hTrackPtVsDCAz         -> SetFillColor(fColTrk);
  hTrackPtVsDCAz         -> SetFillStyle(fFil);
  hTrackPtVsDCAz         -> SetTitleFont(FTxt);
  hTrackPtVsDCAz         -> GetXaxis() -> SetTitle(sTrkDCAz.Data());
  hTrackPtVsDCAz         -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsDCAz         -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsDCAz         -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsDCAz         -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsDCAz         -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsDCAz         -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsDCAz         -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsDCAz         -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaDCAxyVsTrkPt     -> SetMarkerColor(fColTrk);
  hDeltaDCAxyVsTrkPt     -> SetMarkerStyle(fMarTrk);
  hDeltaDCAxyVsTrkPt     -> SetLineColor(fColTrk);
  hDeltaDCAxyVsTrkPt     -> SetLineStyle(fLin);
  hDeltaDCAxyVsTrkPt     -> SetFillColor(fColTrk);
  hDeltaDCAxyVsTrkPt     -> SetFillStyle(fFil);
  hDeltaDCAxyVsTrkPt     -> SetTitleFont(FTxt);
  hDeltaDCAxyVsTrkPt     -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hDeltaDCAxyVsTrkPt     -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaDCAxyVsTrkPt     -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaDCAxyVsTrkPt     -> GetYaxis() -> SetTitle(sDeltaDCAxy.Data());
  hDeltaDCAxyVsTrkPt     -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaDCAxyVsTrkPt     -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaDCAxyVsTrkPt     -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaDCAxyVsTrkPt     -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaDCAxyVsTrkPt     -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaDCAzVsTrkPt      -> SetMarkerColor(fColTrk);
  hDeltaDCAzVsTrkPt      -> SetMarkerStyle(fMarTrk);
  hDeltaDCAzVsTrkPt      -> SetLineColor(fColTrk);
  hDeltaDCAzVsTrkPt      -> SetLineStyle(fLin);
  hDeltaDCAzVsTrkPt      -> SetFillColor(fColTrk);
  hDeltaDCAzVsTrkPt      -> SetFillStyle(fFil);
  hDeltaDCAzVsTrkPt      -> SetTitleFont(FTxt);
  hDeltaDCAzVsTrkPt      -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hDeltaDCAzVsTrkPt      -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaDCAzVsTrkPt      -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaDCAzVsTrkPt      -> GetYaxis() -> SetTitle(sDeltaDCAz.Data());
  hDeltaDCAzVsTrkPt      -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaDCAzVsTrkPt      -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaDCAzVsTrkPt      -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaDCAzVsTrkPt      -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaDCAzVsTrkPt      -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaEtaVsTrkPt       -> SetMarkerColor(fColTrk);
  hDeltaEtaVsTrkPt       -> SetMarkerStyle(fMarTrk);
  hDeltaEtaVsTrkPt       -> SetLineColor(fColTrk);
  hDeltaEtaVsTrkPt       -> SetLineStyle(fLin);
  hDeltaEtaVsTrkPt       -> SetFillColor(fColTrk);
  hDeltaEtaVsTrkPt       -> SetFillStyle(fFil);
  hDeltaEtaVsTrkPt       -> SetTitleFont(FTxt);
  hDeltaEtaVsTrkPt       -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hDeltaEtaVsTrkPt       -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaEtaVsTrkPt       -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaEtaVsTrkPt       -> GetYaxis() -> SetTitle(sDeltaEta.Data());
  hDeltaEtaVsTrkPt       -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaEtaVsTrkPt       -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaEtaVsTrkPt       -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaEtaVsTrkPt       -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaEtaVsTrkPt       -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaEtaVsTrkPt       -> SetMarkerColor(fColTrk);
  hDeltaPhiVsTrkPt       -> SetMarkerStyle(fMarTrk);
  hDeltaPhiVsTrkPt       -> SetLineColor(fColTrk);
  hDeltaPhiVsTrkPt       -> SetLineStyle(fLin);
  hDeltaPhiVsTrkPt       -> SetFillColor(fColTrk);
  hDeltaPhiVsTrkPt       -> SetFillStyle(fFil);
  hDeltaPhiVsTrkPt       -> SetTitleFont(FTxt);
  hDeltaPhiVsTrkPt       -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hDeltaPhiVsTrkPt       -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaPhiVsTrkPt       -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaPhiVsTrkPt       -> GetYaxis() -> SetTitle(sDeltaPhi.Data());
  hDeltaPhiVsTrkPt       -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaPhiVsTrkPt       -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaPhiVsTrkPt       -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaPhiVsTrkPt       -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaPhiVsTrkPt       -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaEtaVsTrkPt       -> SetMarkerColor(fColTrk);
  hDeltaPtVsTrkPt        -> SetMarkerStyle(fMarTrk);
  hDeltaPtVsTrkPt        -> SetLineColor(fColTrk);
  hDeltaPtVsTrkPt        -> SetLineStyle(fLin);
  hDeltaPtVsTrkPt        -> SetFillColor(fColTrk);
  hDeltaPtVsTrkPt        -> SetFillStyle(fFil);
  hDeltaPtVsTrkPt        -> SetTitleFont(FTxt);
  hDeltaPtVsTrkPt        -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hDeltaPtVsTrkPt        -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaPtVsTrkPt        -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaPtVsTrkPt        -> GetYaxis() -> SetTitle(sDeltaPt.Data());
  hDeltaPtVsTrkPt        -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaPtVsTrkPt        -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaPtVsTrkPt        -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaPtVsTrkPt        -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaPtVsTrkPt        -> GetZaxis() -> SetTitleOffset(fOffZ);
  // set embed-only truth histogram styles
  hTruthNMms             -> SetMarkerColor(fColTru);
  hTruthNMms             -> SetMarkerStyle(fMarTru);
  hTruthNMms             -> SetLineColor(fColTru);
  hTruthNMms             -> SetLineStyle(fLin);
  hTruthNMms             -> SetFillColor(fColTru);
  hTruthNMms             -> SetFillStyle(fFil);
  hTruthNMms             -> SetTitleFont(FTxt);
  hTruthNMms             -> GetXaxis() -> SetTitle(sTruNMms.Data());
  hTruthNMms             -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthNMms             -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthNMms             -> GetYaxis() -> SetTitle(sCount.Data());
  hTruthNMms             -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthNMms             -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthNMap             -> SetMarkerColor(fColTru);
  hTruthNMap             -> SetMarkerStyle(fMarTru);
  hTruthNMap             -> SetLineColor(fColTru);
  hTruthNMap             -> SetLineStyle(fLin);
  hTruthNMap             -> SetFillColor(fColTru);
  hTruthNMap             -> SetFillStyle(fFil);
  hTruthNMap             -> SetTitleFont(FTxt);
  hTruthNMap             -> GetXaxis() -> SetTitle(sTruNMap.Data());
  hTruthNMap             -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthNMap             -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthNMap             -> GetYaxis() -> SetTitle(sCount.Data());
  hTruthNMap             -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthNMap             -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthNInt             -> SetMarkerColor(fColTru);
  hTruthNInt             -> SetMarkerStyle(fMarTru);
  hTruthNInt             -> SetLineColor(fColTru);
  hTruthNInt             -> SetLineStyle(fLin);
  hTruthNInt             -> SetFillColor(fColTru);
  hTruthNInt             -> SetFillStyle(fFil);
  hTruthNInt             -> SetTitleFont(FTxt);
  hTruthNInt             -> GetXaxis() -> SetTitle(sTruNInt.Data());
  hTruthNInt             -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthNInt             -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthNInt             -> GetYaxis() -> SetTitle(sCount.Data());
  hTruthNInt             -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthNInt             -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthNTpc             -> SetMarkerColor(fColTru);
  hTruthNTpc             -> SetMarkerStyle(fMarTru);
  hTruthNTpc             -> SetLineColor(fColTru);
  hTruthNTpc             -> SetLineStyle(fLin);
  hTruthNTpc             -> SetFillColor(fColTru);
  hTruthNTpc             -> SetFillStyle(fFil);
  hTruthNTpc             -> SetTitleFont(FTxt);
  hTruthNTpc             -> GetXaxis() -> SetTitle(sTruNTpc.Data());
  hTruthNTpc             -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthNTpc             -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthNTpc             -> GetYaxis() -> SetTitle(sCount.Data());
  hTruthNTpc             -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthNTpc             -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthNTot             -> SetMarkerColor(fColTru);
  hTruthNTot             -> SetMarkerStyle(fMarTru);
  hTruthNTot             -> SetLineColor(fColTru);
  hTruthNTot             -> SetLineStyle(fLin);
  hTruthNTot             -> SetFillColor(fColTru);
  hTruthNTot             -> SetFillStyle(fFil);
  hTruthNTot             -> SetTitleFont(FTxt);
  hTruthNTot             -> GetXaxis() -> SetTitle(sTruNTot.Data());
  hTruthNTot             -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthNTot             -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthNTot             -> GetYaxis() -> SetTitle(sCount.Data());
  hTruthNTot             -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthNTot             -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthEta              -> SetMarkerColor(fColTru);
  hTruthEta              -> SetMarkerStyle(fMarTru);
  hTruthEta              -> SetLineColor(fColTru);
  hTruthEta              -> SetLineStyle(fLin);
  hTruthEta              -> SetFillColor(fColTru);
  hTruthEta              -> SetFillStyle(fFil);
  hTruthEta              -> SetTitleFont(FTxt);
  hTruthEta              -> GetXaxis() -> SetTitle(sTruEta.Data());
  hTruthEta              -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthEta              -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthEta              -> GetYaxis() -> SetTitle(sCount.Data());
  hTruthEta              -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthEta              -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthPhi              -> SetMarkerColor(fColTru);
  hTruthPhi              -> SetMarkerStyle(fMarTru);
  hTruthPhi              -> SetLineColor(fColTru);
  hTruthPhi              -> SetLineStyle(fLin);
  hTruthPhi              -> SetFillColor(fColTru);
  hTruthPhi              -> SetFillStyle(fFil);
  hTruthPhi              -> SetTitleFont(FTxt);
  hTruthPhi              -> GetXaxis() -> SetTitle(sTruPhi.Data());
  hTruthPhi              -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthPhi              -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthPhi              -> GetYaxis() -> SetTitle(sCount.Data());
  hTruthPhi              -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthPhi              -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthPt               -> SetMarkerColor(fColTru);
  hTruthPt               -> SetMarkerStyle(fMarTru);
  hTruthPt               -> SetLineColor(fColTru);
  hTruthPt               -> SetLineStyle(fLin);
  hTruthPt               -> SetFillColor(fColTru);
  hTruthPt               -> SetFillStyle(fFil);
  hTruthPt               -> SetTitleFont(FTxt);
  hTruthPt               -> GetXaxis() -> SetTitle(sTruPt.Data());
  hTruthPt               -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthPt               -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthPt               -> GetYaxis() -> SetTitle(sCount.Data());
  hTruthPt               -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthPt               -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthVx               -> SetMarkerColor(fColTru);
  hTruthVx               -> SetMarkerStyle(fMarTru);
  hTruthVx               -> SetLineColor(fColTru);
  hTruthVx               -> SetLineStyle(fLin);
  hTruthVx               -> SetFillColor(fColTru);
  hTruthVx               -> SetFillStyle(fFil);
  hTruthVx               -> SetTitleFont(FTxt);
  hTruthVx               -> GetXaxis() -> SetTitle(sTruVx.Data());
  hTruthVx               -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthVx               -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthVx               -> GetYaxis() -> SetTitle(sCount.Data());
  hTruthVx               -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthVx               -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthVy               -> SetMarkerColor(fColTru);
  hTruthVy               -> SetMarkerStyle(fMarTru);
  hTruthVy               -> SetLineColor(fColTru);
  hTruthVy               -> SetLineStyle(fLin);
  hTruthVy               -> SetFillColor(fColTru);
  hTruthVy               -> SetFillStyle(fFil);
  hTruthVy               -> SetTitleFont(FTxt);
  hTruthVy               -> GetXaxis() -> SetTitle(sTruVy.Data());
  hTruthVy               -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthVy               -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthVy               -> GetYaxis() -> SetTitle(sCount.Data());
  hTruthVy               -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthVy               -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthVz               -> SetMarkerColor(fColTru);
  hTruthVz               -> SetMarkerStyle(fMarTru);
  hTruthVz               -> SetLineColor(fColTru);
  hTruthVz               -> SetLineStyle(fLin);
  hTruthVz               -> SetFillColor(fColTru);
  hTruthVz               -> SetFillStyle(fFil);
  hTruthVz               -> SetTitleFont(FTxt);
  hTruthVz               -> GetXaxis() -> SetTitle(sTruVz.Data());
  hTruthVz               -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthVz               -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthVz               -> GetYaxis() -> SetTitle(sCount.Data());
  hTruthVz               -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthVz               -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthEtaFrac          -> SetMarkerColor(fColTrk);
  hTruthEtaFrac          -> SetMarkerStyle(fMarTrk);
  hTruthEtaFrac          -> SetLineColor(fColTrk);
  hTruthEtaFrac          -> SetLineStyle(fLin);
  hTruthEtaFrac          -> SetFillColor(fColTrk);
  hTruthEtaFrac          -> SetFillStyle(fFil);
  hTruthEtaFrac          -> SetTitleFont(FTxt);
  hTruthEtaFrac          -> GetXaxis() -> SetTitle(sFracEta.Data());
  hTruthEtaFrac          -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthEtaFrac          -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthEtaFrac          -> GetYaxis() -> SetTitle(sCount.Data());
  hTruthEtaFrac          -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthEtaFrac          -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthPhiFrac          -> SetMarkerColor(fColTrk);
  hTruthPhiFrac          -> SetMarkerStyle(fMarTrk);
  hTruthPhiFrac          -> SetLineColor(fColTrk);
  hTruthPhiFrac          -> SetLineStyle(fLin);
  hTruthPhiFrac          -> SetFillColor(fColTrk);
  hTruthPhiFrac          -> SetFillStyle(fFil);
  hTruthPhiFrac          -> SetTitleFont(FTxt);
  hTruthPhiFrac          -> GetXaxis() -> SetTitle(sFracPhi.Data());
  hTruthPhiFrac          -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthPhiFrac          -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthPhiFrac          -> GetYaxis() -> SetTitle(sCount.Data());
  hTruthPhiFrac          -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthPhiFrac          -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthPtFrac           -> SetMarkerColor(fColTrk);
  hTruthPtFrac           -> SetMarkerStyle(fMarTrk);
  hTruthPtFrac           -> SetLineColor(fColTrk);
  hTruthPtFrac           -> SetLineStyle(fLin);
  hTruthPtFrac           -> SetFillColor(fColTrk);
  hTruthPtFrac           -> SetFillStyle(fFil);
  hTruthPtFrac           -> SetTitleFont(FTxt);
  hTruthPtFrac           -> GetXaxis() -> SetTitle(sFracPt.Data());
  hTruthPtFrac           -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthPtFrac           -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthPtFrac           -> GetYaxis() -> SetTitle(sCount.Data());
  hTruthPtFrac           -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthPtFrac           -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthEtaDiff          -> SetMarkerColor(fColTrk);
  hTruthEtaDiff          -> SetMarkerStyle(fMarTrk);
  hTruthEtaDiff          -> SetLineColor(fColTrk);
  hTruthEtaDiff          -> SetLineStyle(fLin);
  hTruthEtaDiff          -> SetFillColor(fColTrk);
  hTruthEtaDiff          -> SetFillStyle(fFil);
  hTruthEtaDiff          -> SetTitleFont(FTxt);
  hTruthEtaDiff          -> GetXaxis() -> SetTitle(sDiffEta.Data());
  hTruthEtaDiff          -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthEtaDiff          -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthEtaDiff          -> GetYaxis() -> SetTitle(sCount.Data());
  hTruthEtaDiff          -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthEtaDiff          -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthPhiDiff          -> SetMarkerColor(fColTrk);
  hTruthPhiDiff          -> SetMarkerStyle(fMarTrk);
  hTruthPhiDiff          -> SetLineColor(fColTrk);
  hTruthPhiDiff          -> SetLineStyle(fLin);
  hTruthPhiDiff          -> SetFillColor(fColTrk);
  hTruthPhiDiff          -> SetFillStyle(fFil);
  hTruthPhiDiff          -> SetTitleFont(FTxt);
  hTruthPhiDiff          -> GetXaxis() -> SetTitle(sDiffPhi.Data());
  hTruthPhiDiff          -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthPhiDiff          -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthPhiDiff          -> GetYaxis() -> SetTitle(sCount.Data());
  hTruthPhiDiff          -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthPhiDiff          -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthPtDiff           -> SetMarkerColor(fColTrk);
  hTruthPtDiff           -> SetMarkerStyle(fMarTrk);
  hTruthPtDiff           -> SetLineColor(fColTrk);
  hTruthPtDiff           -> SetLineStyle(fLin);
  hTruthPtDiff           -> SetFillColor(fColTrk);
  hTruthPtDiff           -> SetFillStyle(fFil);
  hTruthPtDiff           -> SetTitleFont(FTxt);
  hTruthPtDiff           -> GetXaxis() -> SetTitle(sDiffPt.Data());
  hTruthPtDiff           -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthPtDiff           -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthPtDiff           -> GetYaxis() -> SetTitle(sCount.Data());
  hTruthPtDiff           -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthPtDiff           -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthVxDiff           -> SetMarkerColor(fColTrk);
  hTruthVxDiff           -> SetMarkerStyle(fMarTrk);
  hTruthVxDiff           -> SetLineColor(fColTrk);
  hTruthVxDiff           -> SetLineStyle(fLin);
  hTruthVxDiff           -> SetFillColor(fColTrk);
  hTruthVxDiff           -> SetFillStyle(fFil);
  hTruthVxDiff           -> SetTitleFont(FTxt);
  hTruthVxDiff           -> GetXaxis() -> SetTitle(sDiffVx.Data());
  hTruthVxDiff           -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthVxDiff           -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthVxDiff           -> GetYaxis() -> SetTitle(sCount.Data());
  hTruthVxDiff           -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthVxDiff           -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthVyDiff           -> SetMarkerColor(fColTrk);
  hTruthVyDiff           -> SetMarkerStyle(fMarTrk);
  hTruthVyDiff           -> SetLineColor(fColTrk);
  hTruthVyDiff           -> SetLineStyle(fLin);
  hTruthVyDiff           -> SetFillColor(fColTrk);
  hTruthVyDiff           -> SetFillStyle(fFil);
  hTruthVyDiff           -> SetTitleFont(FTxt);
  hTruthVyDiff           -> GetXaxis() -> SetTitle(sDiffVy.Data());
  hTruthVyDiff           -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthVyDiff           -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthVyDiff           -> GetYaxis() -> SetTitle(sCount.Data());
  hTruthVyDiff           -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthVyDiff           -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthVzDiff           -> SetMarkerColor(fColTrk);
  hTruthVzDiff           -> SetMarkerStyle(fMarTrk);
  hTruthVzDiff           -> SetLineColor(fColTrk);
  hTruthVzDiff           -> SetLineStyle(fLin);
  hTruthVzDiff           -> SetFillColor(fColTrk);
  hTruthVzDiff           -> SetFillStyle(fFil);
  hTruthVzDiff           -> SetTitleFont(FTxt);
  hTruthVzDiff           -> GetXaxis() -> SetTitle(sDiffVz.Data());
  hTruthVzDiff           -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthVzDiff           -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthVzDiff           -> GetYaxis() -> SetTitle(sCount.Data());
  hTruthVzDiff           -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthVzDiff           -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthVsTrackEta       -> SetMarkerColor(fColTru);
  hTruthVsTrackEta       -> SetMarkerStyle(fMarTru);
  hTruthVsTrackEta       -> SetLineColor(fColTru);
  hTruthVsTrackEta       -> SetLineStyle(fLin);
  hTruthVsTrackEta       -> SetFillColor(fColTru);
  hTruthVsTrackEta       -> SetFillStyle(fFil);
  hTruthVsTrackEta       -> SetTitleFont(FTxt);
  hTruthVsTrackEta       -> GetXaxis() -> SetTitle(sTrkEta.Data());
  hTruthVsTrackEta       -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthVsTrackEta       -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthVsTrackEta       -> GetYaxis() -> SetTitle(sTruEta.Data());
  hTruthVsTrackEta       -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthVsTrackEta       -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthVsTrackEta       -> GetZaxis() -> SetTitle(sCount.Data());
  hTruthVsTrackEta       -> GetZaxis() -> SetTitleFont(FTxt);
  hTruthVsTrackEta       -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTruthVsTrackPhi       -> SetMarkerColor(fColTru);
  hTruthVsTrackPhi       -> SetMarkerStyle(fMarTru);
  hTruthVsTrackPhi       -> SetLineColor(fColTru);
  hTruthVsTrackPhi       -> SetLineStyle(fLin);
  hTruthVsTrackPhi       -> SetFillColor(fColTru);
  hTruthVsTrackPhi       -> SetFillStyle(fFil);
  hTruthVsTrackPhi       -> SetTitleFont(FTxt);
  hTruthVsTrackPhi       -> GetXaxis() -> SetTitle(sTrkPhi.Data());
  hTruthVsTrackPhi       -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthVsTrackPhi       -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthVsTrackPhi       -> GetYaxis() -> SetTitle(sTruPhi.Data());
  hTruthVsTrackPhi       -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthVsTrackPhi       -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthVsTrackPhi       -> GetZaxis() -> SetTitle(sCount.Data());
  hTruthVsTrackPhi       -> GetZaxis() -> SetTitleFont(FTxt);
  hTruthVsTrackPhi       -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTruthVsTrackPt        -> SetMarkerColor(fColTru);
  hTruthVsTrackPt        -> SetMarkerStyle(fMarTru);
  hTruthVsTrackPt        -> SetLineColor(fColTru);
  hTruthVsTrackPt        -> SetLineStyle(fLin);
  hTruthVsTrackPt        -> SetFillColor(fColTru);
  hTruthVsTrackPt        -> SetFillStyle(fFil);
  hTruthVsTrackPt        -> SetTitleFont(FTxt);
  hTruthVsTrackPt        -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hTruthVsTrackPt        -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthVsTrackPt        -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthVsTrackPt        -> GetYaxis() -> SetTitle(sTruPt.Data());
  hTruthVsTrackPt        -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthVsTrackPt        -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthVsTrackPt        -> GetZaxis() -> SetTitle(sCount.Data());
  hTruthVsTrackPt        -> GetZaxis() -> SetTitleFont(FTxt);
  hTruthVsTrackPt        -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTruthVsTrackVx        -> SetMarkerColor(fColTru);
  hTruthVsTrackVx        -> SetMarkerStyle(fMarTru);
  hTruthVsTrackVx        -> SetLineColor(fColTru);
  hTruthVsTrackVx        -> SetLineStyle(fLin);
  hTruthVsTrackVx        -> SetFillColor(fColTru);
  hTruthVsTrackVx        -> SetFillStyle(fFil);
  hTruthVsTrackVx        -> SetTitleFont(FTxt);
  hTruthVsTrackVx        -> GetXaxis() -> SetTitle(sTrkVx.Data());
  hTruthVsTrackVx        -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthVsTrackVx        -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthVsTrackVx        -> GetYaxis() -> SetTitle(sTruVx.Data());
  hTruthVsTrackVx        -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthVsTrackVx        -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthVsTrackVx        -> GetZaxis() -> SetTitle(sCount.Data());
  hTruthVsTrackVx        -> GetZaxis() -> SetTitleFont(FTxt);
  hTruthVsTrackVx        -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTruthVsTrackVy        -> SetMarkerColor(fColTru);
  hTruthVsTrackVy        -> SetMarkerStyle(fMarTru);
  hTruthVsTrackVy        -> SetLineColor(fColTru);
  hTruthVsTrackVy        -> SetLineStyle(fLin);
  hTruthVsTrackVy        -> SetFillColor(fColTru);
  hTruthVsTrackVy        -> SetFillStyle(fFil);
  hTruthVsTrackVy        -> SetTitleFont(FTxt);
  hTruthVsTrackVy        -> GetXaxis() -> SetTitle(sTrkVy.Data());
  hTruthVsTrackVy        -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthVsTrackVy        -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthVsTrackVy        -> GetYaxis() -> SetTitle(sTruVy.Data());
  hTruthVsTrackVy        -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthVsTrackVy        -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthVsTrackVy        -> GetZaxis() -> SetTitle(sCount.Data());
  hTruthVsTrackVy        -> GetZaxis() -> SetTitleFont(FTxt);
  hTruthVsTrackVy        -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTruthVsTrackVz        -> SetMarkerColor(fColTru);
  hTruthVsTrackVz        -> SetMarkerStyle(fMarTru);
  hTruthVsTrackVz        -> SetLineColor(fColTru);
  hTruthVsTrackVz        -> SetLineStyle(fLin);
  hTruthVsTrackVz        -> SetFillColor(fColTru);
  hTruthVsTrackVz        -> SetFillStyle(fFil);
  hTruthVsTrackVz        -> SetTitleFont(FTxt);
  hTruthVsTrackVz        -> GetXaxis() -> SetTitle(sTrkVz.Data());
  hTruthVsTrackVz        -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthVsTrackVz        -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthVsTrackVz        -> GetYaxis() -> SetTitle(sTruVz.Data());
  hTruthVsTrackVz        -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthVsTrackVz        -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthVsTrackVz        -> GetZaxis() -> SetTitle(sCount.Data());
  hTruthVsTrackVz        -> GetZaxis() -> SetTitleFont(FTxt);
  hTruthVsTrackVz        -> GetZaxis() -> SetTitleOffset(fOffZ);
  hFracVsTruthEta        -> SetMarkerColor(fColTru);
  hFracVsTruthEta        -> SetMarkerStyle(fMarTru);
  hFracVsTruthEta        -> SetLineColor(fColTru);
  hFracVsTruthEta        -> SetLineStyle(fLin);
  hFracVsTruthEta        -> SetFillColor(fColTru);
  hFracVsTruthEta        -> SetFillStyle(fFil);
  hFracVsTruthEta        -> SetTitleFont(FTxt);
  hFracVsTruthEta        -> GetXaxis() -> SetTitle(sTruEta.Data());
  hFracVsTruthEta        -> GetXaxis() -> SetTitleFont(FTxt);
  hFracVsTruthEta        -> GetXaxis() -> SetTitleOffset(fOffX);
  hFracVsTruthEta        -> GetYaxis() -> SetTitle(sFracEta.Data());
  hFracVsTruthEta        -> GetYaxis() -> SetTitleFont(FTxt);
  hFracVsTruthEta        -> GetYaxis() -> SetTitleOffset(fOffY);
  hFracVsTruthEta        -> GetZaxis() -> SetTitle(sCount.Data());
  hFracVsTruthEta        -> GetZaxis() -> SetTitleFont(FTxt);
  hFracVsTruthEta        -> GetZaxis() -> SetTitleOffset(fOffZ);
  hFracVsTruthPhi        -> SetMarkerColor(fColTru);
  hFracVsTruthPhi        -> SetMarkerStyle(fMarTru);
  hFracVsTruthPhi        -> SetLineColor(fColTru);
  hFracVsTruthPhi        -> SetLineStyle(fLin);
  hFracVsTruthPhi        -> SetFillColor(fColTru);
  hFracVsTruthPhi        -> SetFillStyle(fFil);
  hFracVsTruthPhi        -> SetTitleFont(FTxt);
  hFracVsTruthPhi        -> GetXaxis() -> SetTitle(sTruPhi.Data());
  hFracVsTruthPhi        -> GetXaxis() -> SetTitleFont(FTxt);
  hFracVsTruthPhi        -> GetXaxis() -> SetTitleOffset(fOffX);
  hFracVsTruthPhi        -> GetYaxis() -> SetTitle(sFracPhi.Data());
  hFracVsTruthPhi        -> GetYaxis() -> SetTitleFont(FTxt);
  hFracVsTruthPhi        -> GetYaxis() -> SetTitleOffset(fOffY);
  hFracVsTruthPhi        -> GetZaxis() -> SetTitle(sCount.Data());
  hFracVsTruthPhi        -> GetZaxis() -> SetTitleFont(FTxt);
  hFracVsTruthPhi        -> GetZaxis() -> SetTitleOffset(fOffZ);
  hFracVsTruthPt         -> SetMarkerColor(fColTru);
  hFracVsTruthPt         -> SetMarkerStyle(fMarTru);
  hFracVsTruthPt         -> SetLineColor(fColTru);
  hFracVsTruthPt         -> SetLineStyle(fLin);
  hFracVsTruthPt         -> SetFillColor(fColTru);
  hFracVsTruthPt         -> SetFillStyle(fFil);
  hFracVsTruthPt         -> SetTitleFont(FTxt);
  hFracVsTruthPt         -> GetXaxis() -> SetTitle(sTruPt.Data());
  hFracVsTruthPt         -> GetXaxis() -> SetTitleFont(FTxt);
  hFracVsTruthPt         -> GetXaxis() -> SetTitleOffset(fOffX);
  hFracVsTruthPt         -> GetYaxis() -> SetTitle(sFracPt.Data());
  hFracVsTruthPt         -> GetYaxis() -> SetTitleFont(FTxt);
  hFracVsTruthPt         -> GetYaxis() -> SetTitleOffset(fOffY);
  hFracVsTruthPt         -> GetZaxis() -> SetTitle(sCount.Data());
  hFracVsTruthPt         -> GetZaxis() -> SetTitleFont(FTxt);
  hFracVsTruthPt         -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDiffVsTruthEta        -> SetMarkerColor(fColTru);
  hDiffVsTruthEta        -> SetMarkerStyle(fMarTru);
  hDiffVsTruthEta        -> SetLineColor(fColTru);
  hDiffVsTruthEta        -> SetLineStyle(fLin);
  hDiffVsTruthEta        -> SetFillColor(fColTru);
  hDiffVsTruthEta        -> SetFillStyle(fFil);
  hDiffVsTruthEta        -> SetTitleFont(FTxt);
  hDiffVsTruthEta        -> GetXaxis() -> SetTitle(sTruEta.Data());
  hDiffVsTruthEta        -> GetXaxis() -> SetTitleFont(FTxt);
  hDiffVsTruthEta        -> GetXaxis() -> SetTitleOffset(fOffX);
  hDiffVsTruthEta        -> GetYaxis() -> SetTitle(sDiffEta.Data());
  hDiffVsTruthEta        -> GetYaxis() -> SetTitleFont(FTxt);
  hDiffVsTruthEta        -> GetYaxis() -> SetTitleOffset(fOffY);
  hDiffVsTruthEta        -> GetZaxis() -> SetTitle(sCount.Data());
  hDiffVsTruthEta        -> GetZaxis() -> SetTitleFont(FTxt);
  hDiffVsTruthEta        -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDiffVsTruthPhi        -> SetMarkerColor(fColTru);
  hDiffVsTruthPhi        -> SetMarkerStyle(fMarTru);
  hDiffVsTruthPhi        -> SetLineColor(fColTru);
  hDiffVsTruthPhi        -> SetLineStyle(fLin);
  hDiffVsTruthPhi        -> SetFillColor(fColTru);
  hDiffVsTruthPhi        -> SetFillStyle(fFil);
  hDiffVsTruthPhi        -> SetTitleFont(FTxt);
  hDiffVsTruthPhi        -> GetXaxis() -> SetTitle(sTruPhi.Data());
  hDiffVsTruthPhi        -> GetXaxis() -> SetTitleFont(FTxt);
  hDiffVsTruthPhi        -> GetXaxis() -> SetTitleOffset(fOffX);
  hDiffVsTruthPhi        -> GetYaxis() -> SetTitle(sDiffPhi.Data());
  hDiffVsTruthPhi        -> GetYaxis() -> SetTitleFont(FTxt);
  hDiffVsTruthPhi        -> GetYaxis() -> SetTitleOffset(fOffY);
  hDiffVsTruthPhi        -> GetZaxis() -> SetTitle(sCount.Data());
  hDiffVsTruthPhi        -> GetZaxis() -> SetTitleFont(FTxt);
  hDiffVsTruthPhi        -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDiffVsTruthPt         -> SetMarkerColor(fColTru);
  hDiffVsTruthPt         -> SetMarkerStyle(fMarTru);
  hDiffVsTruthPt         -> SetLineColor(fColTru);
  hDiffVsTruthPt         -> SetLineStyle(fLin);
  hDiffVsTruthPt         -> SetFillColor(fColTru);
  hDiffVsTruthPt         -> SetFillStyle(fFil);
  hDiffVsTruthPt         -> SetTitleFont(FTxt);
  hDiffVsTruthPt         -> GetXaxis() -> SetTitle(sTruPt.Data());
  hDiffVsTruthPt         -> GetXaxis() -> SetTitleFont(FTxt);
  hDiffVsTruthPt         -> GetXaxis() -> SetTitleOffset(fOffX);
  hDiffVsTruthPt         -> GetYaxis() -> SetTitle(sDiffPt.Data());
  hDiffVsTruthPt         -> GetYaxis() -> SetTitleFont(FTxt);
  hDiffVsTruthPt         -> GetYaxis() -> SetTitleOffset(fOffY);
  hDiffVsTruthPt         -> GetZaxis() -> SetTitle(sCount.Data());
  hDiffVsTruthPt         -> GetZaxis() -> SetTitleFont(FTxt);
  hDiffVsTruthPt         -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTruthPtVsNMms         -> SetMarkerColor(fColTru);
  hTruthPtVsNMms         -> SetMarkerStyle(fMarTru);
  hTruthPtVsNMms         -> SetLineColor(fColTru);
  hTruthPtVsNMms         -> SetLineStyle(fLin);
  hTruthPtVsNMms         -> SetFillColor(fColTru);
  hTruthPtVsNMms         -> SetFillStyle(fFil);
  hTruthPtVsNMms         -> SetTitleFont(FTxt);
  hTruthPtVsNMms         -> GetXaxis() -> SetTitle(sTruNMms.Data());
  hTruthPtVsNMms         -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthPtVsNMms         -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthPtVsNMms         -> GetYaxis() -> SetTitle(sTruPt.Data());
  hTruthPtVsNMms         -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthPtVsNMms         -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthPtVsNMms         -> GetZaxis() -> SetTitle(sCount.Data());
  hTruthPtVsNMms         -> GetZaxis() -> SetTitleFont(FTxt);
  hTruthPtVsNMms         -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTruthPtVsNMap         -> SetMarkerColor(fColTru);
  hTruthPtVsNMap         -> SetMarkerStyle(fMarTru);
  hTruthPtVsNMap         -> SetLineColor(fColTru);
  hTruthPtVsNMap         -> SetLineStyle(fLin);
  hTruthPtVsNMap         -> SetFillColor(fColTru);
  hTruthPtVsNMap         -> SetFillStyle(fFil);
  hTruthPtVsNMap         -> SetTitleFont(FTxt);
  hTruthPtVsNMap         -> GetXaxis() -> SetTitle(sTruNMap.Data());
  hTruthPtVsNMap         -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthPtVsNMap         -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthPtVsNMap         -> GetYaxis() -> SetTitle(sTruPt.Data());
  hTruthPtVsNMap         -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthPtVsNMap         -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthPtVsNMap         -> GetZaxis() -> SetTitle(sCount.Data());
  hTruthPtVsNMap         -> GetZaxis() -> SetTitleFont(FTxt);
  hTruthPtVsNMap         -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTruthPtVsNInt         -> SetMarkerColor(fColTru);
  hTruthPtVsNInt         -> SetMarkerStyle(fMarTru);
  hTruthPtVsNInt         -> SetLineColor(fColTru);
  hTruthPtVsNInt         -> SetLineStyle(fLin);
  hTruthPtVsNInt         -> SetFillColor(fColTru);
  hTruthPtVsNInt         -> SetFillStyle(fFil);
  hTruthPtVsNInt         -> SetTitleFont(FTxt);
  hTruthPtVsNInt         -> GetXaxis() -> SetTitle(sTruNInt.Data());
  hTruthPtVsNInt         -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthPtVsNInt         -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthPtVsNInt         -> GetYaxis() -> SetTitle(sTruPt.Data());
  hTruthPtVsNInt         -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthPtVsNInt         -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthPtVsNInt         -> GetZaxis() -> SetTitle(sCount.Data());
  hTruthPtVsNInt         -> GetZaxis() -> SetTitleFont(FTxt);
  hTruthPtVsNInt         -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTruthPtVsNTpc         -> SetMarkerColor(fColTru);
  hTruthPtVsNTpc         -> SetMarkerStyle(fMarTru);
  hTruthPtVsNTpc         -> SetLineColor(fColTru);
  hTruthPtVsNTpc         -> SetLineStyle(fLin);
  hTruthPtVsNTpc         -> SetFillColor(fColTru);
  hTruthPtVsNTpc         -> SetFillStyle(fFil);
  hTruthPtVsNTpc         -> SetTitleFont(FTxt);
  hTruthPtVsNTpc         -> GetXaxis() -> SetTitle(sTruNTpc.Data());
  hTruthPtVsNTpc         -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthPtVsNTpc         -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthPtVsNTpc         -> GetYaxis() -> SetTitle(sTruPt.Data());
  hTruthPtVsNTpc         -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthPtVsNTpc         -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthPtVsNTpc         -> GetZaxis() -> SetTitle(sCount.Data());
  hTruthPtVsNTpc         -> GetZaxis() -> SetTitleFont(FTxt);
  hTruthPtVsNTpc         -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTruthPtVsNTot         -> SetMarkerColor(fColTru);
  hTruthPtVsNTot         -> SetMarkerStyle(fMarTru);
  hTruthPtVsNTot         -> SetLineColor(fColTru);
  hTruthPtVsNTot         -> SetLineStyle(fLin);
  hTruthPtVsNTot         -> SetFillColor(fColTru);
  hTruthPtVsNTot         -> SetFillStyle(fFil);
  hTruthPtVsNTot         -> SetTitleFont(FTxt);
  hTruthPtVsNTot         -> GetXaxis() -> SetTitle(sTruNTot.Data());
  hTruthPtVsNTot         -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthPtVsNTot         -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthPtVsNTot         -> GetYaxis() -> SetTitle(sTruPt.Data());
  hTruthPtVsNTot         -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthPtVsNTot         -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthPtVsNTot         -> GetZaxis() -> SetTitle(sCount.Data());
  hTruthPtVsNTot         -> GetZaxis() -> SetTitleFont(FTxt);
  hTruthPtVsNTot         -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTruthPtVsChi2         -> SetMarkerColor(fColTru);
  hTruthPtVsChi2         -> SetMarkerStyle(fMarTru);
  hTruthPtVsChi2         -> SetLineColor(fColTru);
  hTruthPtVsChi2         -> SetLineStyle(fLin);
  hTruthPtVsChi2         -> SetFillColor(fColTru);
  hTruthPtVsChi2         -> SetFillStyle(fFil);
  hTruthPtVsChi2         -> SetTitleFont(FTxt);
  hTruthPtVsChi2         -> GetXaxis() -> SetTitle(sTrkChi2.Data());
  hTruthPtVsChi2         -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthPtVsChi2         -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthPtVsChi2         -> GetYaxis() -> SetTitle(sTruPt.Data());
  hTruthPtVsChi2         -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthPtVsChi2         -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthPtVsChi2         -> GetZaxis() -> SetTitle(sCount.Data());
  hTruthPtVsChi2         -> GetZaxis() -> SetTitleFont(FTxt);
  hTruthPtVsChi2         -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTruthPtVsNDF          -> SetMarkerColor(fColTru);
  hTruthPtVsNDF          -> SetMarkerStyle(fMarTru);
  hTruthPtVsNDF          -> SetLineColor(fColTru);
  hTruthPtVsNDF          -> SetLineStyle(fLin);
  hTruthPtVsNDF          -> SetFillColor(fColTru);
  hTruthPtVsNDF          -> SetFillStyle(fFil);
  hTruthPtVsNDF          -> SetTitleFont(FTxt);
  hTruthPtVsNDF          -> GetXaxis() -> SetTitle(sTrkNDF.Data());
  hTruthPtVsNDF          -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthPtVsNDF          -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthPtVsNDF          -> GetYaxis() -> SetTitle(sTruPt.Data());
  hTruthPtVsNDF          -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthPtVsNDF          -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthPtVsNDF          -> GetZaxis() -> SetTitle(sCount.Data());
  hTruthPtVsNDF          -> GetZaxis() -> SetTitleFont(FTxt);
  hTruthPtVsNDF          -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTruthPtVsQuality      -> SetMarkerColor(fColTru);
  hTruthPtVsQuality      -> SetMarkerStyle(fMarTru);
  hTruthPtVsQuality      -> SetLineColor(fColTru);
  hTruthPtVsQuality      -> SetLineStyle(fLin);
  hTruthPtVsQuality      -> SetFillColor(fColTru);
  hTruthPtVsQuality      -> SetFillStyle(fFil);
  hTruthPtVsQuality      -> SetTitleFont(FTxt);
  hTruthPtVsQuality      -> GetXaxis() -> SetTitle(sTrkQuality.Data());
  hTruthPtVsQuality      -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthPtVsQuality      -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthPtVsQuality      -> GetYaxis() -> SetTitle(sTruPt.Data());
  hTruthPtVsQuality      -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthPtVsQuality      -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthPtVsQuality      -> GetZaxis() -> SetTitle(sCount.Data());
  hTruthPtVsQuality      -> GetZaxis() -> SetTitleFont(FTxt);
  hTruthPtVsQuality      -> GetZaxis() -> SetTitleOffset(fOffZ);
  hFracPtVsQuality       -> SetMarkerColor(fColTru);
  hFracPtVsQuality       -> SetMarkerStyle(fMarTru);
  hFracPtVsQuality       -> SetLineColor(fColTru);
  hFracPtVsQuality       -> SetLineStyle(fLin);
  hFracPtVsQuality       -> SetFillColor(fColTru);
  hFracPtVsQuality       -> SetFillStyle(fFil);
  hFracPtVsQuality       -> SetTitleFont(FTxt);
  hFracPtVsQuality       -> GetXaxis() -> SetTitle(sTrkQuality.Data());
  hFracPtVsQuality       -> GetXaxis() -> SetTitleFont(FTxt);
  hFracPtVsQuality       -> GetXaxis() -> SetTitleOffset(fOffX);
  hFracPtVsQuality       -> GetYaxis() -> SetTitle(sFracPt.Data());
  hFracPtVsQuality       -> GetYaxis() -> SetTitleFont(FTxt);
  hFracPtVsQuality       -> GetYaxis() -> SetTitleOffset(fOffY);
  hFracPtVsQuality       -> GetZaxis() -> SetTitle(sCount.Data());
  hFracPtVsQuality       -> GetZaxis() -> SetTitleFont(FTxt);
  hFracPtVsQuality       -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTruthPtVsDCAxy        -> SetMarkerColor(fColTru);
  hTruthPtVsDCAxy        -> SetMarkerStyle(fMarTru);
  hTruthPtVsDCAxy        -> SetLineColor(fColTru);
  hTruthPtVsDCAxy        -> SetLineStyle(fLin);
  hTruthPtVsDCAxy        -> SetFillColor(fColTru);
  hTruthPtVsDCAxy        -> SetFillStyle(fFil);
  hTruthPtVsDCAxy        -> SetTitleFont(FTxt);
  hTruthPtVsDCAxy        -> GetXaxis() -> SetTitle(sTrkDCAxy.Data());
  hTruthPtVsDCAxy        -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthPtVsDCAxy        -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthPtVsDCAxy        -> GetYaxis() -> SetTitle(sTruPt.Data());
  hTruthPtVsDCAxy        -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthPtVsDCAxy        -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthPtVsDCAxy        -> GetZaxis() -> SetTitle(sCount.Data());
  hTruthPtVsDCAxy        -> GetZaxis() -> SetTitleFont(FTxt);
  hTruthPtVsDCAxy        -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTruthPtVsDCAz         -> SetMarkerColor(fColTru);
  hTruthPtVsDCAz         -> SetMarkerStyle(fMarTru);
  hTruthPtVsDCAz         -> SetLineColor(fColTru);
  hTruthPtVsDCAz         -> SetLineStyle(fLin);
  hTruthPtVsDCAz         -> SetFillColor(fColTru);
  hTruthPtVsDCAz         -> SetFillStyle(fFil);
  hTruthPtVsDCAz         -> SetTitleFont(FTxt);
  hTruthPtVsDCAz         -> GetXaxis() -> SetTitle(sTrkDCAz.Data());
  hTruthPtVsDCAz         -> GetXaxis() -> SetTitleFont(FTxt);
  hTruthPtVsDCAz         -> GetXaxis() -> SetTitleOffset(fOffX);
  hTruthPtVsDCAz         -> GetYaxis() -> SetTitle(sTruPt.Data());
  hTruthPtVsDCAz         -> GetYaxis() -> SetTitleFont(FTxt);
  hTruthPtVsDCAz         -> GetYaxis() -> SetTitleOffset(fOffY);
  hTruthPtVsDCAz         -> GetZaxis() -> SetTitle(sCount.Data());
  hTruthPtVsDCAz         -> GetZaxis() -> SetTitleFont(FTxt);
  hTruthPtVsDCAz         -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaDCAxyVsTruPt     -> SetMarkerColor(fColTru);
  hDeltaDCAxyVsTruPt     -> SetMarkerStyle(fMarTru);
  hDeltaDCAxyVsTruPt     -> SetLineColor(fColTru);
  hDeltaDCAxyVsTruPt     -> SetLineStyle(fLin);
  hDeltaDCAxyVsTruPt     -> SetFillColor(fColTru);
  hDeltaDCAxyVsTruPt     -> SetFillStyle(fFil);
  hDeltaDCAxyVsTruPt     -> SetTitleFont(FTxt);
  hDeltaDCAxyVsTruPt     -> GetXaxis() -> SetTitle(sTruPt.Data());
  hDeltaDCAxyVsTruPt     -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaDCAxyVsTruPt     -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaDCAxyVsTruPt     -> GetYaxis() -> SetTitle(sDeltaDCAxy.Data());
  hDeltaDCAxyVsTruPt     -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaDCAxyVsTruPt     -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaDCAxyVsTruPt     -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaDCAxyVsTruPt     -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaDCAxyVsTruPt     -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaDCAzVsTruPt      -> SetMarkerColor(fColTru);
  hDeltaDCAzVsTruPt      -> SetMarkerStyle(fMarTru);
  hDeltaDCAzVsTruPt      -> SetLineColor(fColTru);
  hDeltaDCAzVsTruPt      -> SetLineStyle(fLin);
  hDeltaDCAzVsTruPt      -> SetFillColor(fColTru);
  hDeltaDCAzVsTruPt      -> SetFillStyle(fFil);
  hDeltaDCAzVsTruPt      -> SetTitleFont(FTxt);
  hDeltaDCAzVsTruPt      -> GetXaxis() -> SetTitle(sTruPt.Data());
  hDeltaDCAzVsTruPt      -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaDCAzVsTruPt      -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaDCAzVsTruPt      -> GetYaxis() -> SetTitle(sDeltaDCAz.Data());
  hDeltaDCAzVsTruPt      -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaDCAzVsTruPt      -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaDCAzVsTruPt      -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaDCAzVsTruPt      -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaDCAzVsTruPt      -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaEtaVsTruPt       -> SetMarkerColor(fColTru);
  hDeltaEtaVsTruPt       -> SetMarkerStyle(fMarTru);
  hDeltaEtaVsTruPt       -> SetLineColor(fColTru);
  hDeltaEtaVsTruPt       -> SetLineStyle(fLin);
  hDeltaEtaVsTruPt       -> SetFillColor(fColTru);
  hDeltaEtaVsTruPt       -> SetFillStyle(fFil);
  hDeltaEtaVsTruPt       -> SetTitleFont(FTxt);
  hDeltaEtaVsTruPt       -> GetXaxis() -> SetTitle(sTruPt.Data());
  hDeltaEtaVsTruPt       -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaEtaVsTruPt       -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaEtaVsTruPt       -> GetYaxis() -> SetTitle(sDeltaEta.Data());
  hDeltaEtaVsTruPt       -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaEtaVsTruPt       -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaEtaVsTruPt       -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaEtaVsTruPt       -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaEtaVsTruPt       -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaEtaVsTruPt       -> SetMarkerColor(fColTru);
  hDeltaPhiVsTruPt       -> SetMarkerStyle(fMarTru);
  hDeltaPhiVsTruPt       -> SetLineColor(fColTru);
  hDeltaPhiVsTruPt       -> SetLineStyle(fLin);
  hDeltaPhiVsTruPt       -> SetFillColor(fColTru);
  hDeltaPhiVsTruPt       -> SetFillStyle(fFil);
  hDeltaPhiVsTruPt       -> SetTitleFont(FTxt);
  hDeltaPhiVsTruPt       -> GetXaxis() -> SetTitle(sTruPt.Data());
  hDeltaPhiVsTruPt       -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaPhiVsTruPt       -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaPhiVsTruPt       -> GetYaxis() -> SetTitle(sDeltaPhi.Data());
  hDeltaPhiVsTruPt       -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaPhiVsTruPt       -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaPhiVsTruPt       -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaPhiVsTruPt       -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaPhiVsTruPt       -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaEtaVsTruPt       -> SetMarkerColor(fColTru);
  hDeltaPtVsTruPt        -> SetMarkerStyle(fMarTru);
  hDeltaPtVsTruPt        -> SetLineColor(fColTru);
  hDeltaPtVsTruPt        -> SetLineStyle(fLin);
  hDeltaPtVsTruPt        -> SetFillColor(fColTru);
  hDeltaPtVsTruPt        -> SetFillStyle(fFil);
  hDeltaPtVsTruPt        -> SetTitleFont(FTxt);
  hDeltaPtVsTruPt        -> GetXaxis() -> SetTitle(sTruPt.Data());
  hDeltaPtVsTruPt        -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaPtVsTruPt        -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaPtVsTruPt        -> GetYaxis() -> SetTitle(sDeltaPt.Data());
  hDeltaPtVsTruPt        -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaPtVsTruPt        -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaPtVsTruPt        -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaPtVsTruPt        -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaPtVsTruPt        -> GetZaxis() -> SetTitleOffset(fOffZ);
  // set embed-only weird histogram styles
  hWeirdNMms             -> SetMarkerColor(fColOdd);
  hWeirdNMms             -> SetMarkerStyle(fMarOdd);
  hWeirdNMms             -> SetLineColor(fColOdd);
  hWeirdNMms             -> SetLineStyle(fLin);
  hWeirdNMms             -> SetFillColor(fColOdd);
  hWeirdNMms             -> SetFillStyle(fFil);
  hWeirdNMms             -> SetTitleFont(FTxt);
  hWeirdNMms             -> GetXaxis() -> SetTitle(sTrkNMms.Data());
  hWeirdNMms             -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdNMms             -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdNMms             -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdNMms             -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdNMms             -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdNMap             -> SetMarkerColor(fColOdd);
  hWeirdNMap             -> SetMarkerStyle(fMarOdd);
  hWeirdNMap             -> SetLineColor(fColOdd);
  hWeirdNMap             -> SetLineStyle(fLin);
  hWeirdNMap             -> SetFillColor(fColOdd);
  hWeirdNMap             -> SetFillStyle(fFil);
  hWeirdNMap             -> SetTitleFont(FTxt);
  hWeirdNMap             -> GetXaxis() -> SetTitle(sTrkNMap.Data());
  hWeirdNMap             -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdNMap             -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdNMap             -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdNMap             -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdNMap             -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdNInt             -> SetMarkerColor(fColOdd);
  hWeirdNInt             -> SetMarkerStyle(fMarOdd);
  hWeirdNInt             -> SetLineColor(fColOdd);
  hWeirdNInt             -> SetLineStyle(fLin);
  hWeirdNInt             -> SetFillColor(fColOdd);
  hWeirdNInt             -> SetFillStyle(fFil);
  hWeirdNInt             -> SetTitleFont(FTxt);
  hWeirdNInt             -> GetXaxis() -> SetTitle(sTrkNInt.Data());
  hWeirdNInt             -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdNInt             -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdNInt             -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdNInt             -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdNInt             -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdNTpc             -> SetMarkerColor(fColOdd);
  hWeirdNTpc             -> SetMarkerStyle(fMarOdd);
  hWeirdNTpc             -> SetLineColor(fColOdd);
  hWeirdNTpc             -> SetLineStyle(fLin);
  hWeirdNTpc             -> SetFillColor(fColOdd);
  hWeirdNTpc             -> SetFillStyle(fFil);
  hWeirdNTpc             -> SetTitleFont(FTxt);
  hWeirdNTpc             -> GetXaxis() -> SetTitle(sTrkNTpc.Data());
  hWeirdNTpc             -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdNTpc             -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdNTpc             -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdNTpc             -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdNTpc             -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdNTot             -> SetMarkerColor(fColOdd);
  hWeirdNTot             -> SetMarkerStyle(fMarOdd);
  hWeirdNTot             -> SetLineColor(fColOdd);
  hWeirdNTot             -> SetLineStyle(fLin);
  hWeirdNTot             -> SetFillColor(fColOdd);
  hWeirdNTot             -> SetFillStyle(fFil);
  hWeirdNTot             -> SetTitleFont(FTxt);
  hWeirdNTot             -> GetXaxis() -> SetTitle(sTrkNTot.Data());
  hWeirdNTot             -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdNTot             -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdNTot             -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdNTot             -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdNTot             -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdPerMms           -> SetMarkerColor(fColOdd);
  hWeirdPerMms           -> SetMarkerStyle(fMarOdd);
  hWeirdPerMms           -> SetLineColor(fColOdd);
  hWeirdPerMms           -> SetLineStyle(fLin);
  hWeirdPerMms           -> SetFillColor(fColOdd);
  hWeirdPerMms           -> SetFillStyle(fFil);
  hWeirdPerMms           -> SetTitleFont(FTxt);
  hWeirdPerMms           -> GetXaxis() -> SetTitle(sPerMms.Data());
  hWeirdPerMms           -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdPerMms           -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdPerMms           -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdPerMms           -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdPerMms           -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdPerMap           -> SetMarkerColor(fColOdd);
  hWeirdPerMap           -> SetMarkerStyle(fMarOdd);
  hWeirdPerMap           -> SetLineColor(fColOdd);
  hWeirdPerMap           -> SetLineStyle(fLin);
  hWeirdPerMap           -> SetFillColor(fColOdd);
  hWeirdPerMap           -> SetFillStyle(fFil);
  hWeirdPerMap           -> SetTitleFont(FTxt);
  hWeirdPerMap           -> GetXaxis() -> SetTitle(sPerMap.Data());
  hWeirdPerMap           -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdPerMap           -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdPerMap           -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdPerMap           -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdPerMap           -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdPerInt           -> SetMarkerColor(fColOdd);
  hWeirdPerInt           -> SetMarkerStyle(fMarOdd);
  hWeirdPerInt           -> SetLineColor(fColOdd);
  hWeirdPerInt           -> SetLineStyle(fLin);
  hWeirdPerInt           -> SetFillColor(fColOdd);
  hWeirdPerInt           -> SetFillStyle(fFil);
  hWeirdPerInt           -> SetTitleFont(FTxt);
  hWeirdPerInt           -> GetXaxis() -> SetTitle(sPerInt.Data());
  hWeirdPerInt           -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdPerInt           -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdPerInt           -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdPerInt           -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdPerInt           -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdPerTpc           -> SetMarkerColor(fColOdd);
  hWeirdPerTpc           -> SetMarkerStyle(fMarOdd);
  hWeirdPerTpc           -> SetLineColor(fColOdd);
  hWeirdPerTpc           -> SetLineStyle(fLin);
  hWeirdPerTpc           -> SetFillColor(fColOdd);
  hWeirdPerTpc           -> SetFillStyle(fFil);
  hWeirdPerTpc           -> SetTitleFont(FTxt);
  hWeirdPerTpc           -> GetXaxis() -> SetTitle(sPerTpc.Data());
  hWeirdPerTpc           -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdPerTpc           -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdPerTpc           -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdPerTpc           -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdPerTpc           -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdPerTot           -> SetMarkerColor(fColOdd);
  hWeirdPerTot           -> SetMarkerStyle(fMarOdd);
  hWeirdPerTot           -> SetLineColor(fColTrk);
  hWeirdPerTot           -> SetLineStyle(fLin);
  hWeirdPerTot           -> SetFillColor(fColTrk);
  hWeirdPerTot           -> SetFillStyle(fFil);
  hWeirdPerTot           -> SetTitleFont(FTxt);
  hWeirdPerTot           -> GetXaxis() -> SetTitle(sPerTot.Data());
  hWeirdPerTot           -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdPerTot           -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdPerTot           -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdPerTot           -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdPerTot           -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdChi2             -> SetMarkerColor(fColOdd);
  hWeirdChi2             -> SetMarkerStyle(fMarOdd);
  hWeirdChi2             -> SetLineColor(fColOdd);
  hWeirdChi2             -> SetLineStyle(fLin);
  hWeirdChi2             -> SetFillColor(fColOdd);
  hWeirdChi2             -> SetFillStyle(fFil);
  hWeirdChi2             -> SetTitleFont(FTxt);
  hWeirdChi2             -> GetXaxis() -> SetTitle(sTrkChi2.Data());
  hWeirdChi2             -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdChi2             -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdChi2             -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdChi2             -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdChi2             -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdNDF              -> SetMarkerColor(fColOdd);
  hWeirdNDF              -> SetMarkerStyle(fMarOdd);
  hWeirdNDF              -> SetLineColor(fColOdd);
  hWeirdNDF              -> SetLineStyle(fLin);
  hWeirdNDF              -> SetFillColor(fColOdd);
  hWeirdNDF              -> SetFillStyle(fFil);
  hWeirdNDF              -> SetTitleFont(FTxt);
  hWeirdNDF              -> GetXaxis() -> SetTitle(sTrkNDF.Data());
  hWeirdNDF              -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdNDF              -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdNDF              -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdNDF              -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdNDF              -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdQuality          -> SetMarkerColor(fColOdd);
  hWeirdQuality          -> SetMarkerStyle(fMarOdd);
  hWeirdQuality          -> SetLineColor(fColOdd);
  hWeirdQuality          -> SetLineStyle(fLin);
  hWeirdQuality          -> SetFillColor(fColOdd);
  hWeirdQuality          -> SetFillStyle(fFil);
  hWeirdQuality          -> SetTitleFont(FTxt);
  hWeirdQuality          -> GetXaxis() -> SetTitle(sTrkQuality.Data());
  hWeirdQuality          -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdQuality          -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdQuality          -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdQuality          -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdQuality          -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdDCAxy            -> SetMarkerColor(fColOdd);
  hWeirdDCAxy            -> SetMarkerStyle(fMarOdd);
  hWeirdDCAxy            -> SetLineColor(fColOdd);
  hWeirdDCAxy            -> SetLineStyle(fLin);
  hWeirdDCAxy            -> SetFillColor(fColOdd);
  hWeirdDCAxy            -> SetFillStyle(fFil);
  hWeirdDCAxy            -> SetTitleFont(FTxt);
  hWeirdDCAxy            -> GetXaxis() -> SetTitle(sTrkDCAxy.Data());
  hWeirdDCAxy            -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdDCAxy            -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdDCAxy            -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdDCAxy            -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdDCAxy            -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdDCAz             -> SetMarkerColor(fColOdd);
  hWeirdDCAz             -> SetMarkerStyle(fMarOdd);
  hWeirdDCAz             -> SetLineColor(fColOdd);
  hWeirdDCAz             -> SetLineStyle(fLin);
  hWeirdDCAz             -> SetFillColor(fColOdd);
  hWeirdDCAz             -> SetFillStyle(fFil);
  hWeirdDCAz             -> SetTitleFont(FTxt);
  hWeirdDCAz             -> GetXaxis() -> SetTitle(sTrkDCAz.Data());
  hWeirdDCAz             -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdDCAz             -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdDCAz             -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdDCAz             -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdDCAz             -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdVx               -> SetMarkerColor(fColOdd);
  hWeirdVx               -> SetMarkerStyle(fMarOdd);
  hWeirdVx               -> SetLineColor(fColOdd);
  hWeirdVx               -> SetLineStyle(fLin);
  hWeirdVx               -> SetFillColor(fColOdd);
  hWeirdVx               -> SetFillStyle(fFil);
  hWeirdVx               -> SetTitleFont(FTxt);
  hWeirdVx               -> GetXaxis() -> SetTitle(sTrkVx.Data());
  hWeirdVx               -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdVx               -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdVx               -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdVx               -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdVx               -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdVy               -> SetMarkerColor(fColOdd);
  hWeirdVy               -> SetMarkerStyle(fMarOdd);
  hWeirdVy               -> SetLineColor(fColOdd);
  hWeirdVy               -> SetLineStyle(fLin);
  hWeirdVy               -> SetFillColor(fColOdd);
  hWeirdVy               -> SetFillStyle(fFil);
  hWeirdVy               -> SetTitleFont(FTxt);
  hWeirdVy               -> GetXaxis() -> SetTitle(sTrkVy.Data());
  hWeirdVy               -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdVy               -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdVy               -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdVy               -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdVy               -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdVz               -> SetMarkerColor(fColOdd);
  hWeirdVz               -> SetMarkerStyle(fMarOdd);
  hWeirdVz               -> SetLineColor(fColOdd);
  hWeirdVz               -> SetLineStyle(fLin);
  hWeirdVz               -> SetFillColor(fColOdd);
  hWeirdVz               -> SetFillStyle(fFil);
  hWeirdVz               -> SetTitleFont(FTxt);
  hWeirdVz               -> GetXaxis() -> SetTitle(sTrkVz.Data());
  hWeirdVz               -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdVz               -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdVz               -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdVz               -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdVz               -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdEta              -> SetMarkerColor(fColOdd);
  hWeirdEta              -> SetMarkerStyle(fMarOdd);
  hWeirdEta              -> SetLineColor(fColOdd);
  hWeirdEta              -> SetLineStyle(fLin);
  hWeirdEta              -> SetFillColor(fColOdd);
  hWeirdEta              -> SetFillStyle(fFil);
  hWeirdEta              -> SetTitleFont(FTxt);
  hWeirdEta              -> GetXaxis() -> SetTitle(sTrkEta.Data());
  hWeirdEta              -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdEta              -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdEta              -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdEta              -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdEta              -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdPhi              -> SetMarkerColor(fColOdd);
  hWeirdPhi              -> SetMarkerStyle(fMarOdd);
  hWeirdPhi              -> SetLineColor(fColOdd);
  hWeirdPhi              -> SetLineStyle(fLin);
  hWeirdPhi              -> SetFillColor(fColOdd);
  hWeirdPhi              -> SetFillStyle(fFil);
  hWeirdPhi              -> SetTitleFont(FTxt);
  hWeirdPhi              -> GetXaxis() -> SetTitle(sTrkPhi.Data());
  hWeirdPhi              -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdPhi              -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdPhi              -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdPhi              -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdPhi              -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdPt               -> SetMarkerColor(fColOdd);
  hWeirdPt               -> SetMarkerStyle(fMarOdd);
  hWeirdPt               -> SetLineColor(fColOdd);
  hWeirdPt               -> SetLineStyle(fLin);
  hWeirdPt               -> SetFillColor(fColOdd);
  hWeirdPt               -> SetFillStyle(fFil);
  hWeirdPt               -> SetTitleFont(FTxt);
  hWeirdPt               -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hWeirdPt               -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdPt               -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdPt               -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdPt               -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdPt               -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdDeltaDCAxy       -> SetMarkerColor(fColOdd);
  hWeirdDeltaDCAxy       -> SetMarkerStyle(fMarOdd);
  hWeirdDeltaDCAxy       -> SetLineColor(fColOdd);
  hWeirdDeltaDCAxy       -> SetLineStyle(fLin);
  hWeirdDeltaDCAxy       -> SetFillColor(fColOdd);
  hWeirdDeltaDCAxy       -> SetFillStyle(fFil);
  hWeirdDeltaDCAxy       -> SetTitleFont(FTxt);
  hWeirdDeltaDCAxy       -> GetXaxis() -> SetTitle(sDeltaDCAxy.Data());
  hWeirdDeltaDCAxy       -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdDeltaDCAxy       -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdDeltaDCAxy       -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdDeltaDCAxy       -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdDeltaDCAxy       -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdDeltaDCAz        -> SetMarkerColor(fColOdd);
  hWeirdDeltaDCAz        -> SetMarkerStyle(fMarOdd);
  hWeirdDeltaDCAz        -> SetLineColor(fColOdd);
  hWeirdDeltaDCAz        -> SetLineStyle(fLin);
  hWeirdDeltaDCAz        -> SetFillColor(fColOdd);
  hWeirdDeltaDCAz        -> SetFillStyle(fFil);
  hWeirdDeltaDCAz        -> SetTitleFont(FTxt);
  hWeirdDeltaDCAz        -> GetXaxis() -> SetTitle(sDeltaDCAz.Data());
  hWeirdDeltaDCAz        -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdDeltaDCAz        -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdDeltaDCAz        -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdDeltaDCAz        -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdDeltaDCAz        -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdDeltaEta         -> SetMarkerColor(fColOdd);
  hWeirdDeltaEta         -> SetMarkerStyle(fMarOdd);
  hWeirdDeltaEta         -> SetLineColor(fColOdd);
  hWeirdDeltaEta         -> SetLineStyle(fLin);
  hWeirdDeltaEta         -> SetFillColor(fColOdd);
  hWeirdDeltaEta         -> SetFillStyle(fFil);
  hWeirdDeltaEta         -> SetTitleFont(FTxt);
  hWeirdDeltaEta         -> GetXaxis() -> SetTitle(sDeltaEta.Data());
  hWeirdDeltaEta         -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdDeltaEta         -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdDeltaEta         -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdDeltaEta         -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdDeltaEta         -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdDeltaEta         -> SetMarkerColor(fColOdd);
  hWeirdDeltaPhi         -> SetMarkerStyle(fMarOdd);
  hWeirdDeltaPhi         -> SetLineColor(fColOdd);
  hWeirdDeltaPhi         -> SetLineStyle(fLin);
  hWeirdDeltaPhi         -> SetFillColor(fColOdd);
  hWeirdDeltaPhi         -> SetFillStyle(fFil);
  hWeirdDeltaPhi         -> SetTitleFont(FTxt);
  hWeirdDeltaPhi         -> GetXaxis() -> SetTitle(sDeltaPhi.Data());
  hWeirdDeltaPhi         -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdDeltaPhi         -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdDeltaPhi         -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdDeltaPhi         -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdDeltaPhi         -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdDeltaPt          -> SetMarkerStyle(fMarOdd);
  hWeirdDeltaPt          -> SetLineColor(fColOdd);
  hWeirdDeltaPt          -> SetLineStyle(fLin);
  hWeirdDeltaPt          -> SetFillColor(fColOdd);
  hWeirdDeltaPt          -> SetFillStyle(fFil);
  hWeirdDeltaPt          -> SetTitleFont(FTxt);
  hWeirdDeltaPt          -> GetXaxis() -> SetTitle(sDeltaPt.Data());
  hWeirdDeltaPt          -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdDeltaPt          -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdDeltaPt          -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdDeltaPt          -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdDeltaPt          -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdVxDiff           -> SetMarkerColor(fColOdd);
  hWeirdVxDiff           -> SetMarkerStyle(fMarOdd);
  hWeirdVxDiff           -> SetLineColor(fColOdd);
  hWeirdVxDiff           -> SetLineStyle(fLin);
  hWeirdVxDiff           -> SetFillColor(fColOdd);
  hWeirdVxDiff           -> SetFillStyle(fFil);
  hWeirdVxDiff           -> SetTitleFont(FTxt);
  hWeirdVxDiff           -> GetXaxis() -> SetTitle(sDiffVx.Data());
  hWeirdVxDiff           -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdVxDiff           -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdVxDiff           -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdVxDiff           -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdVxDiff           -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdVyDiff           -> SetMarkerColor(fColOdd);
  hWeirdVyDiff           -> SetMarkerStyle(fMarOdd);
  hWeirdVyDiff           -> SetLineColor(fColOdd);
  hWeirdVyDiff           -> SetLineStyle(fLin);
  hWeirdVyDiff           -> SetFillColor(fColOdd);
  hWeirdVyDiff           -> SetFillStyle(fFil);
  hWeirdVyDiff           -> SetTitleFont(FTxt);
  hWeirdVyDiff           -> GetXaxis() -> SetTitle(sDiffVy.Data());
  hWeirdVyDiff           -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdVyDiff           -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdVyDiff           -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdVyDiff           -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdVyDiff           -> GetYaxis() -> SetTitleOffset(fOffY);
  hWeirdVzDiff           -> SetMarkerColor(fColOdd);
  hWeirdVzDiff           -> SetMarkerStyle(fMarOdd);
  hWeirdVzDiff           -> SetLineColor(fColOdd);
  hWeirdVzDiff           -> SetLineStyle(fLin);
  hWeirdVzDiff           -> SetFillColor(fColOdd);
  hWeirdVzDiff           -> SetFillStyle(fFil);
  hWeirdVzDiff           -> SetTitleFont(FTxt);
  hWeirdVzDiff           -> GetXaxis() -> SetTitle(sDiffVz.Data());
  hWeirdVzDiff           -> GetXaxis() -> SetTitleFont(FTxt);
  hWeirdVzDiff           -> GetXaxis() -> SetTitleOffset(fOffX);
  hWeirdVzDiff           -> GetYaxis() -> SetTitle(sCount.Data());
  hWeirdVzDiff           -> GetYaxis() -> SetTitleFont(FTxt);
  hWeirdVzDiff           -> GetYaxis() -> SetTitleOffset(fOffY);
  // set embed-only normal histogram styles
  hNormalNMms            -> SetMarkerColor(fColNorm);
  hNormalNMms            -> SetMarkerStyle(fMarNorm);
  hNormalNMms            -> SetLineColor(fColNorm);
  hNormalNMms            -> SetLineStyle(fLin);
  hNormalNMms            -> SetFillColor(fColNorm);
  hNormalNMms            -> SetFillStyle(fFil);
  hNormalNMms            -> SetTitleFont(FTxt);
  hNormalNMms            -> GetXaxis() -> SetTitle(sTrkNMms.Data());
  hNormalNMms            -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalNMms            -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalNMms            -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalNMms            -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalNMms            -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalNMap            -> SetMarkerColor(fColNorm);
  hNormalNMap            -> SetMarkerStyle(fMarNorm);
  hNormalNMap            -> SetLineColor(fColNorm);
  hNormalNMap            -> SetLineStyle(fLin);
  hNormalNMap            -> SetFillColor(fColNorm);
  hNormalNMap            -> SetFillStyle(fFil);
  hNormalNMap            -> SetTitleFont(FTxt);
  hNormalNMap            -> GetXaxis() -> SetTitle(sTrkNMap.Data());
  hNormalNMap            -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalNMap            -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalNMap            -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalNMap            -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalNMap            -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalNInt            -> SetMarkerColor(fColNorm);
  hNormalNInt            -> SetMarkerStyle(fMarNorm);
  hNormalNInt            -> SetLineColor(fColNorm);
  hNormalNInt            -> SetLineStyle(fLin);
  hNormalNInt            -> SetFillColor(fColNorm);
  hNormalNInt            -> SetFillStyle(fFil);
  hNormalNInt            -> SetTitleFont(FTxt);
  hNormalNInt            -> GetXaxis() -> SetTitle(sTrkNInt.Data());
  hNormalNInt            -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalNInt            -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalNInt            -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalNInt            -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalNInt            -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalNTpc            -> SetMarkerColor(fColNorm);
  hNormalNTpc            -> SetMarkerStyle(fMarNorm);
  hNormalNTpc            -> SetLineColor(fColNorm);
  hNormalNTpc            -> SetLineStyle(fLin);
  hNormalNTpc            -> SetFillColor(fColNorm);
  hNormalNTpc            -> SetFillStyle(fFil);
  hNormalNTpc            -> SetTitleFont(FTxt);
  hNormalNTpc            -> GetXaxis() -> SetTitle(sTrkNTpc.Data());
  hNormalNTpc            -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalNTpc            -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalNTpc            -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalNTpc            -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalNTpc            -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalNTot            -> SetMarkerColor(fColNorm);
  hNormalNTot            -> SetMarkerStyle(fMarNorm);
  hNormalNTot            -> SetLineColor(fColNorm);
  hNormalNTot            -> SetLineStyle(fLin);
  hNormalNTot            -> SetFillColor(fColNorm);
  hNormalNTot            -> SetFillStyle(fFil);
  hNormalNTot            -> SetTitleFont(FTxt);
  hNormalNTot            -> GetXaxis() -> SetTitle(sTrkNTot.Data());
  hNormalNTot            -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalNTot            -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalNTot            -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalNTot            -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalNTot            -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalPerMms          -> SetMarkerColor(fColNorm);
  hNormalPerMms          -> SetMarkerStyle(fMarNorm);
  hNormalPerMms          -> SetLineColor(fColNorm);
  hNormalPerMms          -> SetLineStyle(fLin);
  hNormalPerMms          -> SetFillColor(fColNorm);
  hNormalPerMms          -> SetFillStyle(fFil);
  hNormalPerMms          -> SetTitleFont(FTxt);
  hNormalPerMms          -> GetXaxis() -> SetTitle(sPerMms.Data());
  hNormalPerMms          -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalPerMms          -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalPerMms          -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalPerMms          -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalPerMms          -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalPerMap          -> SetMarkerColor(fColNorm);
  hNormalPerMap          -> SetMarkerStyle(fMarNorm);
  hNormalPerMap          -> SetLineColor(fColNorm);
  hNormalPerMap          -> SetLineStyle(fLin);
  hNormalPerMap          -> SetFillColor(fColNorm);
  hNormalPerMap          -> SetFillStyle(fFil);
  hNormalPerMap          -> SetTitleFont(FTxt);
  hNormalPerMap          -> GetXaxis() -> SetTitle(sPerMap.Data());
  hNormalPerMap          -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalPerMap          -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalPerMap          -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalPerMap          -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalPerMap          -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalPerInt          -> SetMarkerColor(fColNorm);
  hNormalPerInt          -> SetMarkerStyle(fMarNorm);
  hNormalPerInt          -> SetLineColor(fColNorm);
  hNormalPerInt          -> SetLineStyle(fLin);
  hNormalPerInt          -> SetFillColor(fColNorm);
  hNormalPerInt          -> SetFillStyle(fFil);
  hNormalPerInt          -> SetTitleFont(FTxt);
  hNormalPerInt          -> GetXaxis() -> SetTitle(sPerInt.Data());
  hNormalPerInt          -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalPerInt          -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalPerInt          -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalPerInt          -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalPerInt          -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalPerTpc          -> SetMarkerColor(fColNorm);
  hNormalPerTpc          -> SetMarkerStyle(fMarNorm);
  hNormalPerTpc          -> SetLineColor(fColNorm);
  hNormalPerTpc          -> SetLineStyle(fLin);
  hNormalPerTpc          -> SetFillColor(fColNorm);
  hNormalPerTpc          -> SetFillStyle(fFil);
  hNormalPerTpc          -> SetTitleFont(FTxt);
  hNormalPerTpc          -> GetXaxis() -> SetTitle(sPerTpc.Data());
  hNormalPerTpc          -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalPerTpc          -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalPerTpc          -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalPerTpc          -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalPerTpc          -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalPerTot          -> SetMarkerColor(fColNorm);
  hNormalPerTot          -> SetMarkerStyle(fMarNorm);
  hNormalPerTot          -> SetLineColor(fColTrk);
  hNormalPerTot          -> SetLineStyle(fLin);
  hNormalPerTot          -> SetFillColor(fColTrk);
  hNormalPerTot          -> SetFillStyle(fFil);
  hNormalPerTot          -> SetTitleFont(FTxt);
  hNormalPerTot          -> GetXaxis() -> SetTitle(sPerTot.Data());
  hNormalPerTot          -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalPerTot          -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalPerTot          -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalPerTot          -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalPerTot          -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalChi2            -> SetMarkerColor(fColNorm);
  hNormalChi2            -> SetMarkerStyle(fMarNorm);
  hNormalChi2            -> SetLineColor(fColNorm);
  hNormalChi2            -> SetLineStyle(fLin);
  hNormalChi2            -> SetFillColor(fColNorm);
  hNormalChi2            -> SetFillStyle(fFil);
  hNormalChi2            -> SetTitleFont(FTxt);
  hNormalChi2            -> GetXaxis() -> SetTitle(sTrkChi2.Data());
  hNormalChi2            -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalChi2            -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalChi2            -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalChi2            -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalChi2            -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalNDF             -> SetMarkerColor(fColNorm);
  hNormalNDF             -> SetMarkerStyle(fMarNorm);
  hNormalNDF             -> SetLineColor(fColNorm);
  hNormalNDF             -> SetLineStyle(fLin);
  hNormalNDF             -> SetFillColor(fColNorm);
  hNormalNDF             -> SetFillStyle(fFil);
  hNormalNDF             -> SetTitleFont(FTxt);
  hNormalNDF             -> GetXaxis() -> SetTitle(sTrkNDF.Data());
  hNormalNDF             -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalNDF             -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalNDF             -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalNDF             -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalNDF             -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalQuality         -> SetMarkerColor(fColNorm);
  hNormalQuality         -> SetMarkerStyle(fMarNorm);
  hNormalQuality         -> SetLineColor(fColNorm);
  hNormalQuality         -> SetLineStyle(fLin);
  hNormalQuality         -> SetFillColor(fColNorm);
  hNormalQuality         -> SetFillStyle(fFil);
  hNormalQuality         -> SetTitleFont(FTxt);
  hNormalQuality         -> GetXaxis() -> SetTitle(sTrkQuality.Data());
  hNormalQuality         -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalQuality         -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalQuality         -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalQuality         -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalQuality         -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalDCAxy           -> SetMarkerColor(fColNorm);
  hNormalDCAxy           -> SetMarkerStyle(fMarNorm);
  hNormalDCAxy           -> SetLineColor(fColNorm);
  hNormalDCAxy           -> SetLineStyle(fLin);
  hNormalDCAxy           -> SetFillColor(fColNorm);
  hNormalDCAxy           -> SetFillStyle(fFil);
  hNormalDCAxy           -> SetTitleFont(FTxt);
  hNormalDCAxy           -> GetXaxis() -> SetTitle(sTrkDCAxy.Data());
  hNormalDCAxy           -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalDCAxy           -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalDCAxy           -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalDCAxy           -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalDCAxy           -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalDCAz            -> SetMarkerColor(fColNorm);
  hNormalDCAz            -> SetMarkerStyle(fMarNorm);
  hNormalDCAz            -> SetLineColor(fColNorm);
  hNormalDCAz            -> SetLineStyle(fLin);
  hNormalDCAz            -> SetFillColor(fColNorm);
  hNormalDCAz            -> SetFillStyle(fFil);
  hNormalDCAz            -> SetTitleFont(FTxt);
  hNormalDCAz            -> GetXaxis() -> SetTitle(sTrkDCAz.Data());
  hNormalDCAz            -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalDCAz            -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalDCAz            -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalDCAz            -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalDCAz            -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalVx              -> SetMarkerColor(fColNorm);
  hNormalVx              -> SetMarkerStyle(fMarNorm);
  hNormalVx              -> SetLineColor(fColNorm);
  hNormalVx              -> SetLineStyle(fLin);
  hNormalVx              -> SetFillColor(fColNorm);
  hNormalVx              -> SetFillStyle(fFil);
  hNormalVx              -> SetTitleFont(FTxt);
  hNormalVx              -> GetXaxis() -> SetTitle(sTrkVx.Data());
  hNormalVx              -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalVx              -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalVx              -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalVx              -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalVx              -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalVy              -> SetMarkerColor(fColNorm);
  hNormalVy              -> SetMarkerStyle(fMarNorm);
  hNormalVy              -> SetLineColor(fColNorm);
  hNormalVy              -> SetLineStyle(fLin);
  hNormalVy              -> SetFillColor(fColNorm);
  hNormalVy              -> SetFillStyle(fFil);
  hNormalVy              -> SetTitleFont(FTxt);
  hNormalVy              -> GetXaxis() -> SetTitle(sTrkVy.Data());
  hNormalVy              -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalVy              -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalVy              -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalVy              -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalVy              -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalVz              -> SetMarkerColor(fColNorm);
  hNormalVz              -> SetMarkerStyle(fMarNorm);
  hNormalVz              -> SetLineColor(fColNorm);
  hNormalVz              -> SetLineStyle(fLin);
  hNormalVz              -> SetFillColor(fColNorm);
  hNormalVz              -> SetFillStyle(fFil);
  hNormalVz              -> SetTitleFont(FTxt);
  hNormalVz              -> GetXaxis() -> SetTitle(sTrkVz.Data());
  hNormalVz              -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalVz              -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalVz              -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalVz              -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalVz              -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalEta             -> SetMarkerColor(fColNorm);
  hNormalEta             -> SetMarkerStyle(fMarNorm);
  hNormalEta             -> SetLineColor(fColNorm);
  hNormalEta             -> SetLineStyle(fLin);
  hNormalEta             -> SetFillColor(fColNorm);
  hNormalEta             -> SetFillStyle(fFil);
  hNormalEta             -> SetTitleFont(FTxt);
  hNormalEta             -> GetXaxis() -> SetTitle(sTrkEta.Data());
  hNormalEta             -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalEta             -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalEta             -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalEta             -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalEta             -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalPhi             -> SetMarkerColor(fColNorm);
  hNormalPhi             -> SetMarkerStyle(fMarNorm);
  hNormalPhi             -> SetLineColor(fColNorm);
  hNormalPhi             -> SetLineStyle(fLin);
  hNormalPhi             -> SetFillColor(fColNorm);
  hNormalPhi             -> SetFillStyle(fFil);
  hNormalPhi             -> SetTitleFont(FTxt);
  hNormalPhi             -> GetXaxis() -> SetTitle(sTrkPhi.Data());
  hNormalPhi             -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalPhi             -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalPhi             -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalPhi             -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalPhi             -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalPt              -> SetMarkerColor(fColNorm);
  hNormalPt              -> SetMarkerStyle(fMarNorm);
  hNormalPt              -> SetLineColor(fColNorm);
  hNormalPt              -> SetLineStyle(fLin);
  hNormalPt              -> SetFillColor(fColNorm);
  hNormalPt              -> SetFillStyle(fFil);
  hNormalPt              -> SetTitleFont(FTxt);
  hNormalPt              -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hNormalPt              -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalPt              -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalPt              -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalPt              -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalPt              -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalDeltaDCAxy      -> SetMarkerColor(fColNorm);
  hNormalDeltaDCAxy      -> SetMarkerStyle(fMarNorm);
  hNormalDeltaDCAxy      -> SetLineColor(fColNorm);
  hNormalDeltaDCAxy      -> SetLineStyle(fLin);
  hNormalDeltaDCAxy      -> SetFillColor(fColNorm);
  hNormalDeltaDCAxy      -> SetFillStyle(fFil);
  hNormalDeltaDCAxy      -> SetTitleFont(FTxt);
  hNormalDeltaDCAxy      -> GetXaxis() -> SetTitle(sDeltaDCAxy.Data());
  hNormalDeltaDCAxy      -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalDeltaDCAxy      -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalDeltaDCAxy      -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalDeltaDCAxy      -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalDeltaDCAxy      -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalDeltaDCAz       -> SetMarkerColor(fColNorm);
  hNormalDeltaDCAz       -> SetMarkerStyle(fMarNorm);
  hNormalDeltaDCAz       -> SetLineColor(fColNorm);
  hNormalDeltaDCAz       -> SetLineStyle(fLin);
  hNormalDeltaDCAz       -> SetFillColor(fColNorm);
  hNormalDeltaDCAz       -> SetFillStyle(fFil);
  hNormalDeltaDCAz       -> SetTitleFont(FTxt);
  hNormalDeltaDCAz       -> GetXaxis() -> SetTitle(sDeltaDCAz.Data());
  hNormalDeltaDCAz       -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalDeltaDCAz       -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalDeltaDCAz       -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalDeltaDCAz       -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalDeltaDCAz       -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalDeltaEta        -> SetMarkerColor(fColNorm);
  hNormalDeltaEta        -> SetMarkerStyle(fMarNorm);
  hNormalDeltaEta        -> SetLineColor(fColNorm);
  hNormalDeltaEta        -> SetLineStyle(fLin);
  hNormalDeltaEta        -> SetFillColor(fColNorm);
  hNormalDeltaEta        -> SetFillStyle(fFil);
  hNormalDeltaEta        -> SetTitleFont(FTxt);
  hNormalDeltaEta        -> GetXaxis() -> SetTitle(sDeltaEta.Data());
  hNormalDeltaEta        -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalDeltaEta        -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalDeltaEta        -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalDeltaEta        -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalDeltaEta        -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalDeltaPhi        -> SetMarkerColor(fColNorm);
  hNormalDeltaPhi        -> SetMarkerStyle(fMarNorm);
  hNormalDeltaPhi        -> SetLineColor(fColNorm);
  hNormalDeltaPhi        -> SetLineStyle(fLin);
  hNormalDeltaPhi        -> SetFillColor(fColNorm);
  hNormalDeltaPhi        -> SetFillStyle(fFil);
  hNormalDeltaPhi        -> SetTitleFont(FTxt);
  hNormalDeltaPhi        -> GetXaxis() -> SetTitle(sDeltaPhi.Data());
  hNormalDeltaPhi        -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalDeltaPhi        -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalDeltaPhi        -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalDeltaPhi        -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalDeltaPhi        -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalDeltaPt         -> SetMarkerColor(fColNorm);
  hNormalDeltaPt         -> SetMarkerStyle(fMarNorm);
  hNormalDeltaPt         -> SetLineColor(fColNorm);
  hNormalDeltaPt         -> SetLineStyle(fLin);
  hNormalDeltaPt         -> SetFillColor(fColNorm);
  hNormalDeltaPt         -> SetFillStyle(fFil);
  hNormalDeltaPt         -> SetTitleFont(FTxt);
  hNormalDeltaPt         -> GetXaxis() -> SetTitle(sDeltaPt.Data());
  hNormalDeltaPt         -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalDeltaPt         -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalDeltaPt         -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalDeltaPt         -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalDeltaPt         -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalVxDiff          -> SetMarkerColor(fColNorm);
  hNormalVxDiff          -> SetMarkerStyle(fMarNorm);
  hNormalVxDiff          -> SetLineColor(fColNorm);
  hNormalVxDiff          -> SetLineStyle(fLin);
  hNormalVxDiff          -> SetFillColor(fColNorm);
  hNormalVxDiff          -> SetFillStyle(fFil);
  hNormalVxDiff          -> SetTitleFont(FTxt);
  hNormalVxDiff          -> GetXaxis() -> SetTitle(sDiffVx.Data());
  hNormalVxDiff          -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalVxDiff          -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalVxDiff          -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalVxDiff          -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalVxDiff          -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalVyDiff          -> SetMarkerColor(fColNorm);
  hNormalVyDiff          -> SetMarkerStyle(fMarNorm);
  hNormalVyDiff          -> SetLineColor(fColNorm);
  hNormalVyDiff          -> SetLineStyle(fLin);
  hNormalVyDiff          -> SetFillColor(fColNorm);
  hNormalVyDiff          -> SetFillStyle(fFil);
  hNormalVyDiff          -> SetTitleFont(FTxt);
  hNormalVyDiff          -> GetXaxis() -> SetTitle(sDiffVy.Data());
  hNormalVyDiff          -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalVyDiff          -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalVyDiff          -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalVyDiff          -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalVyDiff          -> GetYaxis() -> SetTitleOffset(fOffY);
  hNormalVzDiff          -> SetMarkerColor(fColNorm);
  hNormalVzDiff          -> SetMarkerStyle(fMarNorm);
  hNormalVzDiff          -> SetLineColor(fColNorm);
  hNormalVzDiff          -> SetLineStyle(fLin);
  hNormalVzDiff          -> SetFillColor(fColNorm);
  hNormalVzDiff          -> SetFillStyle(fFil);
  hNormalVzDiff          -> SetTitleFont(FTxt);
  hNormalVzDiff          -> GetXaxis() -> SetTitle(sDiffVz.Data());
  hNormalVzDiff          -> GetXaxis() -> SetTitleFont(FTxt);
  hNormalVzDiff          -> GetXaxis() -> SetTitleOffset(fOffX);
  hNormalVzDiff          -> GetYaxis() -> SetTitle(sCount.Data());
  hNormalVzDiff          -> GetYaxis() -> SetTitleFont(FTxt);
  hNormalVzDiff          -> GetYaxis() -> SetTitleOffset(fOffY);
  // set with-pileup track histogram styles
  hTrackNMms_PU          -> SetMarkerColor(fColTrk);
  hTrackNMms_PU          -> SetMarkerStyle(fMarTrk);
  hTrackNMms_PU          -> SetLineColor(fColTrk);
  hTrackNMms_PU          -> SetLineStyle(fLin);
  hTrackNMms_PU          -> SetFillColor(fColTrk);
  hTrackNMms_PU          -> SetFillStyle(fFil);
  hTrackNMms_PU          -> SetTitleFont(FTxt);
  hTrackNMms_PU          -> GetXaxis() -> SetTitle(sTrkNMms.Data());
  hTrackNMms_PU          -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackNMms_PU          -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackNMms_PU          -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackNMms_PU          -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackNMms_PU          -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackNMap_PU          -> SetMarkerColor(fColTrk);
  hTrackNMap_PU          -> SetMarkerStyle(fMarTrk);
  hTrackNMap_PU          -> SetLineColor(fColTrk);
  hTrackNMap_PU          -> SetLineStyle(fLin);
  hTrackNMap_PU          -> SetFillColor(fColTrk);
  hTrackNMap_PU          -> SetFillStyle(fFil);
  hTrackNMap_PU          -> SetTitleFont(FTxt);
  hTrackNMap_PU          -> GetXaxis() -> SetTitle(sTrkNMap.Data());
  hTrackNMap_PU          -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackNMap_PU          -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackNMap_PU          -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackNMap_PU          -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackNMap_PU          -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackNInt_PU          -> SetMarkerColor(fColTrk);
  hTrackNInt_PU          -> SetMarkerStyle(fMarTrk);
  hTrackNInt_PU          -> SetLineColor(fColTrk);
  hTrackNInt_PU          -> SetLineStyle(fLin);
  hTrackNInt_PU          -> SetFillColor(fColTrk);
  hTrackNInt_PU          -> SetFillStyle(fFil);
  hTrackNInt_PU          -> SetTitleFont(FTxt);
  hTrackNInt_PU          -> GetXaxis() -> SetTitle(sTrkNInt.Data());
  hTrackNInt_PU          -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackNInt_PU          -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackNInt_PU          -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackNInt_PU          -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackNInt_PU          -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackNTpc_PU          -> SetMarkerColor(fColTrk);
  hTrackNTpc_PU          -> SetMarkerStyle(fMarTrk);
  hTrackNTpc_PU          -> SetLineColor(fColTrk);
  hTrackNTpc_PU          -> SetLineStyle(fLin);
  hTrackNTpc_PU          -> SetFillColor(fColTrk);
  hTrackNTpc_PU          -> SetFillStyle(fFil);
  hTrackNTpc_PU          -> SetTitleFont(FTxt);
  hTrackNTpc_PU          -> GetXaxis() -> SetTitle(sTrkNTpc.Data());
  hTrackNTpc_PU          -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackNTpc_PU          -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackNTpc_PU          -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackNTpc_PU          -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackNTpc_PU          -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackNTot_PU          -> SetMarkerColor(fColTrk);
  hTrackNTot_PU          -> SetMarkerStyle(fMarTrk);
  hTrackNTot_PU          -> SetLineColor(fColTrk);
  hTrackNTot_PU          -> SetLineStyle(fLin);
  hTrackNTot_PU          -> SetFillColor(fColTrk);
  hTrackNTot_PU          -> SetFillStyle(fFil);
  hTrackNTot_PU          -> SetTitleFont(FTxt);
  hTrackNTot_PU          -> GetXaxis() -> SetTitle(sTrkNTot.Data());
  hTrackNTot_PU          -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackNTot_PU          -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackNTot_PU          -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackNTot_PU          -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackNTot_PU          -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPerMms_PU        -> SetMarkerColor(fColTrk);
  hTrackPerMms_PU        -> SetMarkerStyle(fMarTrk);
  hTrackPerMms_PU        -> SetLineColor(fColTrk);
  hTrackPerMms_PU        -> SetLineStyle(fLin);
  hTrackPerMms_PU        -> SetFillColor(fColTrk);
  hTrackPerMms_PU        -> SetFillStyle(fFil);
  hTrackPerMms_PU        -> SetTitleFont(FTxt);
  hTrackPerMms_PU        -> GetXaxis() -> SetTitle(sPerMms.Data());
  hTrackPerMms_PU        -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPerMms_PU        -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPerMms_PU        -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackPerMms_PU        -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPerMms_PU        -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPerMap_PU        -> SetMarkerColor(fColTrk);
  hTrackPerMap_PU        -> SetMarkerStyle(fMarTrk);
  hTrackPerMap_PU        -> SetLineColor(fColTrk);
  hTrackPerMap_PU        -> SetLineStyle(fLin);
  hTrackPerMap_PU        -> SetFillColor(fColTrk);
  hTrackPerMap_PU        -> SetFillStyle(fFil);
  hTrackPerMap_PU        -> SetTitleFont(FTxt);
  hTrackPerMap_PU        -> GetXaxis() -> SetTitle(sPerMap.Data());
  hTrackPerMap_PU        -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPerMap_PU        -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPerMap_PU        -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackPerMap_PU        -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPerMap_PU        -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPerInt_PU        -> SetMarkerColor(fColTrk);
  hTrackPerInt_PU        -> SetMarkerStyle(fMarTrk);
  hTrackPerInt_PU        -> SetLineColor(fColTrk);
  hTrackPerInt_PU        -> SetLineStyle(fLin);
  hTrackPerInt_PU        -> SetFillColor(fColTrk);
  hTrackPerInt_PU        -> SetFillStyle(fFil);
  hTrackPerInt_PU        -> SetTitleFont(FTxt);
  hTrackPerInt_PU        -> GetXaxis() -> SetTitle(sPerInt.Data());
  hTrackPerInt_PU        -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPerInt_PU        -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPerInt_PU        -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackPerInt_PU        -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPerInt_PU        -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPerTpc_PU        -> SetMarkerColor(fColTrk);
  hTrackPerTpc_PU        -> SetMarkerStyle(fMarTrk);
  hTrackPerTpc_PU        -> SetLineColor(fColTrk);
  hTrackPerTpc_PU        -> SetLineStyle(fLin);
  hTrackPerTpc_PU        -> SetFillColor(fColTrk);
  hTrackPerTpc_PU        -> SetFillStyle(fFil);
  hTrackPerTpc_PU        -> SetTitleFont(FTxt);
  hTrackPerTpc_PU        -> GetXaxis() -> SetTitle(sPerTpc.Data());
  hTrackPerTpc_PU        -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPerTpc_PU        -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPerTpc_PU        -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackPerTpc_PU        -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPerTpc_PU        -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPerTot_PU        -> SetMarkerColor(fColTrk);
  hTrackPerTot_PU        -> SetMarkerStyle(fMarTrk);
  hTrackPerTot_PU        -> SetLineColor(fColTrk);
  hTrackPerTot_PU        -> SetLineStyle(fLin);
  hTrackPerTot_PU        -> SetFillColor(fColTrk);
  hTrackPerTot_PU        -> SetFillStyle(fFil);
  hTrackPerTot_PU        -> SetTitleFont(FTxt);
  hTrackPerTot_PU        -> GetXaxis() -> SetTitle(sPerTot.Data());
  hTrackPerTot_PU        -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPerTot_PU        -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPerTot_PU        -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackPerTot_PU        -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPerTot_PU        -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackChi2_PU          -> SetMarkerColor(fColTrk);
  hTrackChi2_PU          -> SetMarkerStyle(fMarTrk);
  hTrackChi2_PU          -> SetLineColor(fColTrk);
  hTrackChi2_PU          -> SetLineStyle(fLin);
  hTrackChi2_PU          -> SetFillColor(fColTrk);
  hTrackChi2_PU          -> SetFillStyle(fFil);
  hTrackChi2_PU          -> SetTitleFont(FTxt);
  hTrackChi2_PU          -> GetXaxis() -> SetTitle(sTrkChi2.Data());
  hTrackChi2_PU          -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackChi2_PU          -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackChi2_PU          -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackChi2_PU          -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackChi2_PU          -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackNDF_PU           -> SetMarkerColor(fColTrk);
  hTrackNDF_PU           -> SetMarkerStyle(fMarTrk);
  hTrackNDF_PU           -> SetLineColor(fColTrk);
  hTrackNDF_PU           -> SetLineStyle(fLin);
  hTrackNDF_PU           -> SetFillColor(fColTrk);
  hTrackNDF_PU           -> SetFillStyle(fFil);
  hTrackNDF_PU           -> SetTitleFont(FTxt);
  hTrackNDF_PU           -> GetXaxis() -> SetTitle(sTrkNDF.Data());
  hTrackNDF_PU           -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackNDF_PU           -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackNDF_PU           -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackNDF_PU           -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackNDF_PU           -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackQuality_PU       -> SetMarkerColor(fColTrk);
  hTrackQuality_PU       -> SetMarkerStyle(fMarTrk);
  hTrackQuality_PU       -> SetLineColor(fColTrk);
  hTrackQuality_PU       -> SetLineStyle(fLin);
  hTrackQuality_PU       -> SetFillColor(fColTrk);
  hTrackQuality_PU       -> SetFillStyle(fFil);
  hTrackQuality_PU       -> SetTitleFont(FTxt);
  hTrackQuality_PU       -> GetXaxis() -> SetTitle(sTrkQuality.Data());
  hTrackQuality_PU       -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackQuality_PU       -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackQuality_PU       -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackQuality_PU       -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackQuality_PU       -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackDCAxy_PU         -> SetMarkerColor(fColTrk);
  hTrackDCAxy_PU         -> SetMarkerStyle(fMarTrk);
  hTrackDCAxy_PU         -> SetLineColor(fColTrk);
  hTrackDCAxy_PU         -> SetLineStyle(fLin);
  hTrackDCAxy_PU         -> SetFillColor(fColTrk);
  hTrackDCAxy_PU         -> SetFillStyle(fFil);
  hTrackDCAxy_PU         -> SetTitleFont(FTxt);
  hTrackDCAxy_PU         -> GetXaxis() -> SetTitle(sTrkDCAxy.Data());
  hTrackDCAxy_PU         -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackDCAxy_PU         -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackDCAxy_PU         -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackDCAxy_PU         -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackDCAxy_PU         -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackDCAz_PU          -> SetMarkerColor(fColTrk);
  hTrackDCAz_PU          -> SetMarkerStyle(fMarTrk);
  hTrackDCAz_PU          -> SetLineColor(fColTrk);
  hTrackDCAz_PU          -> SetLineStyle(fLin);
  hTrackDCAz_PU          -> SetFillColor(fColTrk);
  hTrackDCAz_PU          -> SetFillStyle(fFil);
  hTrackDCAz_PU          -> SetTitleFont(FTxt);
  hTrackDCAz_PU          -> GetXaxis() -> SetTitle(sTrkDCAz.Data());
  hTrackDCAz_PU          -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackDCAz_PU          -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackDCAz_PU          -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackDCAz_PU          -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackDCAz_PU          -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackVx_PU            -> SetMarkerColor(fColTrk);
  hTrackVx_PU            -> SetMarkerStyle(fMarTrk);
  hTrackVx_PU            -> SetLineColor(fColTrk);
  hTrackVx_PU            -> SetLineStyle(fLin);
  hTrackVx_PU            -> SetFillColor(fColTrk);
  hTrackVx_PU            -> SetFillStyle(fFil);
  hTrackVx_PU            -> SetTitleFont(FTxt);
  hTrackVx_PU            -> GetXaxis() -> SetTitle(sTrkVx.Data());
  hTrackVx_PU            -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackVx_PU            -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackVx_PU            -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackVx_PU            -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackVx_PU            -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackVy_PU            -> SetMarkerColor(fColTrk);
  hTrackVy_PU            -> SetMarkerStyle(fMarTrk);
  hTrackVy_PU            -> SetLineColor(fColTrk);
  hTrackVy_PU            -> SetLineStyle(fLin);
  hTrackVy_PU            -> SetFillColor(fColTrk);
  hTrackVy_PU            -> SetFillStyle(fFil);
  hTrackVy_PU            -> SetTitleFont(FTxt);
  hTrackVy_PU            -> GetXaxis() -> SetTitle(sTrkVy.Data());
  hTrackVy_PU            -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackVy_PU            -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackVy_PU            -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackVy_PU            -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackVy_PU            -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackVz_PU            -> SetMarkerColor(fColTrk);
  hTrackVz_PU            -> SetMarkerStyle(fMarTrk);
  hTrackVz_PU            -> SetLineColor(fColTrk);
  hTrackVz_PU            -> SetLineStyle(fLin);
  hTrackVz_PU            -> SetFillColor(fColTrk);
  hTrackVz_PU            -> SetFillStyle(fFil);
  hTrackVz_PU            -> SetTitleFont(FTxt);
  hTrackVz_PU            -> GetXaxis() -> SetTitle(sTrkVz.Data());
  hTrackVz_PU            -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackVz_PU            -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackVz_PU            -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackVz_PU            -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackVz_PU            -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackEta_PU           -> SetMarkerColor(fColTrk);
  hTrackEta_PU           -> SetMarkerStyle(fMarTrk);
  hTrackEta_PU           -> SetLineColor(fColTrk);
  hTrackEta_PU           -> SetLineStyle(fLin);
  hTrackEta_PU           -> SetFillColor(fColTrk);
  hTrackEta_PU           -> SetFillStyle(fFil);
  hTrackEta_PU           -> SetTitleFont(FTxt);
  hTrackEta_PU           -> GetXaxis() -> SetTitle(sTrkEta.Data());
  hTrackEta_PU           -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackEta_PU           -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackEta_PU           -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackEta_PU           -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackEta_PU           -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPhi_PU           -> SetMarkerColor(fColTrk);
  hTrackPhi_PU           -> SetMarkerStyle(fMarTrk);
  hTrackPhi_PU           -> SetLineColor(fColTrk);
  hTrackPhi_PU           -> SetLineStyle(fLin);
  hTrackPhi_PU           -> SetFillColor(fColTrk);
  hTrackPhi_PU           -> SetFillStyle(fFil);
  hTrackPhi_PU           -> SetTitleFont(FTxt);
  hTrackPhi_PU           -> GetXaxis() -> SetTitle(sTrkPhi.Data());
  hTrackPhi_PU           -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPhi_PU           -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPhi_PU           -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackPhi_PU           -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPhi_PU           -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPt_PU            -> SetMarkerColor(fColTrk);
  hTrackPt_PU            -> SetMarkerStyle(fMarTrk);
  hTrackPt_PU            -> SetLineColor(fColTrk);
  hTrackPt_PU            -> SetLineStyle(fLin);
  hTrackPt_PU            -> SetFillColor(fColTrk);
  hTrackPt_PU            -> SetFillStyle(fFil);
  hTrackPt_PU            -> SetTitleFont(FTxt);
  hTrackPt_PU            -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hTrackPt_PU            -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPt_PU            -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPt_PU            -> GetYaxis() -> SetTitle(sCount.Data());
  hTrackPt_PU            -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPt_PU            -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaDCAxy_PU         -> SetMarkerColor(fColTrk);
  hDeltaDCAxy_PU         -> SetMarkerStyle(fMarTrk);
  hDeltaDCAxy_PU         -> SetLineColor(fColTrk);
  hDeltaDCAxy_PU         -> SetLineStyle(fLin);
  hDeltaDCAxy_PU         -> SetFillColor(fColTrk);
  hDeltaDCAxy_PU         -> SetFillStyle(fFil);
  hDeltaDCAxy_PU         -> SetTitleFont(FTxt);
  hDeltaDCAxy_PU         -> GetXaxis() -> SetTitle(sDeltaDCAxy.Data());
  hDeltaDCAxy_PU         -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaDCAxy_PU         -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaDCAxy_PU         -> GetYaxis() -> SetTitle(sCount.Data());
  hDeltaDCAxy_PU         -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaDCAxy_PU         -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaDCAz_PU          -> SetMarkerColor(fColTrk);
  hDeltaDCAz_PU          -> SetMarkerStyle(fMarTrk);
  hDeltaDCAz_PU          -> SetLineColor(fColTrk);
  hDeltaDCAz_PU          -> SetLineStyle(fLin);
  hDeltaDCAz_PU          -> SetFillColor(fColTrk);
  hDeltaDCAz_PU          -> SetFillStyle(fFil);
  hDeltaDCAz_PU          -> SetTitleFont(FTxt);
  hDeltaDCAz_PU          -> GetXaxis() -> SetTitle(sDeltaDCAz.Data());
  hDeltaDCAz_PU          -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaDCAz_PU          -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaDCAz_PU          -> GetYaxis() -> SetTitle(sCount.Data());
  hDeltaDCAz_PU          -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaDCAz_PU          -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaEta_PU           -> SetMarkerColor(fColTrk);
  hDeltaEta_PU           -> SetMarkerStyle(fMarTrk);
  hDeltaEta_PU           -> SetLineColor(fColTrk);
  hDeltaEta_PU           -> SetLineStyle(fLin);
  hDeltaEta_PU           -> SetFillColor(fColTrk);
  hDeltaEta_PU           -> SetFillStyle(fFil);
  hDeltaEta_PU           -> SetTitleFont(FTxt);
  hDeltaEta_PU           -> GetXaxis() -> SetTitle(sDeltaEta.Data());
  hDeltaEta_PU           -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaEta_PU           -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaEta_PU           -> GetYaxis() -> SetTitle(sCount.Data());
  hDeltaEta_PU           -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaEta_PU           -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaEta_PU           -> SetMarkerColor(fColTrk);
  hDeltaPhi_PU           -> SetMarkerStyle(fMarTrk);
  hDeltaPhi_PU           -> SetLineColor(fColTrk);
  hDeltaPhi_PU           -> SetLineStyle(fLin);
  hDeltaPhi_PU           -> SetFillColor(fColTrk);
  hDeltaPhi_PU           -> SetFillStyle(fFil);
  hDeltaPhi_PU           -> SetTitleFont(FTxt);
  hDeltaPhi_PU           -> GetXaxis() -> SetTitle(sDeltaPhi.Data());
  hDeltaPhi_PU           -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaPhi_PU           -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaPhi_PU           -> GetYaxis() -> SetTitle(sCount.Data());
  hDeltaPhi_PU           -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaPhi_PU           -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaPt_PU            -> SetMarkerStyle(fMarTrk);
  hDeltaPt_PU            -> SetLineColor(fColTrk);
  hDeltaPt_PU            -> SetLineStyle(fLin);
  hDeltaPt_PU            -> SetFillColor(fColTrk);
  hDeltaPt_PU            -> SetFillStyle(fFil);
  hDeltaPt_PU            -> SetTitleFont(FTxt);
  hDeltaPt_PU            -> GetXaxis() -> SetTitle(sDeltaPt.Data());
  hDeltaPt_PU            -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaPt_PU            -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaPt_PU            -> GetYaxis() -> SetTitle(sCount.Data());
  hDeltaPt_PU            -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaPt_PU            -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsNMms_PU      -> SetMarkerColor(fColTrk);
  hTrackPtVsNMms_PU      -> SetMarkerStyle(fMarTrk);
  hTrackPtVsNMms_PU      -> SetLineColor(fColTrk);
  hTrackPtVsNMms_PU      -> SetLineStyle(fLin);
  hTrackPtVsNMms_PU      -> SetFillColor(fColTrk);
  hTrackPtVsNMms_PU      -> SetFillStyle(fFil);
  hTrackPtVsNMms_PU      -> SetTitleFont(FTxt);
  hTrackPtVsNMms_PU      -> GetXaxis() -> SetTitle(sTrkNMms.Data());
  hTrackPtVsNMms_PU      -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNMms_PU      -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsNMms_PU      -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsNMms_PU      -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNMms_PU      -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsNMms_PU      -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsNMms_PU      -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNMms_PU      -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsNMap_PU      -> SetMarkerColor(fColTrk);
  hTrackPtVsNMap_PU      -> SetMarkerStyle(fMarTrk);
  hTrackPtVsNMap_PU      -> SetLineColor(fColTrk);
  hTrackPtVsNMap_PU      -> SetLineStyle(fLin);
  hTrackPtVsNMap_PU      -> SetFillColor(fColTrk);
  hTrackPtVsNMap_PU      -> SetFillStyle(fFil);
  hTrackPtVsNMap_PU      -> SetTitleFont(FTxt);
  hTrackPtVsNMap_PU      -> GetXaxis() -> SetTitle(sTrkNMap.Data());
  hTrackPtVsNMap_PU      -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNMap_PU      -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsNMap_PU      -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsNMap_PU      -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNMap_PU      -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsNMap_PU      -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsNMap_PU      -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNMap_PU      -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsNInt_PU      -> SetMarkerColor(fColTrk);
  hTrackPtVsNInt_PU      -> SetMarkerStyle(fMarTrk);
  hTrackPtVsNInt_PU      -> SetLineColor(fColTrk);
  hTrackPtVsNInt_PU      -> SetLineStyle(fLin);
  hTrackPtVsNInt_PU      -> SetFillColor(fColTrk);
  hTrackPtVsNInt_PU      -> SetFillStyle(fFil);
  hTrackPtVsNInt_PU      -> SetTitleFont(FTxt);
  hTrackPtVsNInt_PU      -> GetXaxis() -> SetTitle(sTrkNInt.Data());
  hTrackPtVsNInt_PU      -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNInt_PU      -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsNInt_PU      -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsNInt_PU      -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNInt_PU      -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsNInt_PU      -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsNInt_PU      -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNInt_PU      -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsNTpc_PU      -> SetMarkerColor(fColTrk);
  hTrackPtVsNTpc_PU      -> SetMarkerStyle(fMarTrk);
  hTrackPtVsNTpc_PU      -> SetLineColor(fColTrk);
  hTrackPtVsNTpc_PU      -> SetLineStyle(fLin);
  hTrackPtVsNTpc_PU      -> SetFillColor(fColTrk);
  hTrackPtVsNTpc_PU      -> SetFillStyle(fFil);
  hTrackPtVsNTpc_PU      -> SetTitleFont(FTxt);
  hTrackPtVsNTpc_PU      -> GetXaxis() -> SetTitle(sTrkNTpc.Data());
  hTrackPtVsNTpc_PU      -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNTpc_PU      -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsNTpc_PU      -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsNTpc_PU      -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNTpc_PU      -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsNTpc_PU      -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsNTpc_PU      -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNTpc_PU      -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsNTot_PU      -> SetMarkerColor(fColTrk);
  hTrackPtVsNTot_PU      -> SetMarkerStyle(fMarTrk);
  hTrackPtVsNTot_PU      -> SetLineColor(fColTrk);
  hTrackPtVsNTot_PU      -> SetLineStyle(fLin);
  hTrackPtVsNTot_PU      -> SetFillColor(fColTrk);
  hTrackPtVsNTot_PU      -> SetFillStyle(fFil);
  hTrackPtVsNTot_PU      -> SetTitleFont(FTxt);
  hTrackPtVsNTot_PU      -> GetXaxis() -> SetTitle(sTrkNTot.Data());
  hTrackPtVsNTot_PU      -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNTot_PU      -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsNTot_PU      -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsNTot_PU      -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNTot_PU      -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsNTot_PU      -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsNTot_PU      -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNTot_PU      -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsPerMms_PU    -> SetMarkerColor(fColTrk);
  hTrackPtVsPerMms_PU    -> SetMarkerStyle(fMarTrk);
  hTrackPtVsPerMms_PU    -> SetLineColor(fColTrk);
  hTrackPtVsPerMms_PU    -> SetLineStyle(fLin);
  hTrackPtVsPerMms_PU    -> SetFillColor(fColTrk);
  hTrackPtVsPerMms_PU    -> SetFillStyle(fFil);
  hTrackPtVsPerMms_PU    -> SetTitleFont(FTxt);
  hTrackPtVsPerMms_PU    -> GetXaxis() -> SetTitle(sPerMms.Data());
  hTrackPtVsPerMms_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerMms_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsPerMms_PU    -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsPerMms_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerMms_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsPerMms_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsPerMms_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerMms_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsPerMap_PU    -> SetMarkerColor(fColTrk);
  hTrackPtVsPerMap_PU    -> SetMarkerStyle(fMarTrk);
  hTrackPtVsPerMap_PU    -> SetLineColor(fColTrk);
  hTrackPtVsPerMap_PU    -> SetLineStyle(fLin);
  hTrackPtVsPerMap_PU    -> SetFillColor(fColTrk);
  hTrackPtVsPerMap_PU    -> SetFillStyle(fFil);
  hTrackPtVsPerMap_PU    -> SetTitleFont(FTxt);
  hTrackPtVsPerMap_PU    -> GetXaxis() -> SetTitle(sPerMap.Data());
  hTrackPtVsPerMap_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerMap_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsPerMap_PU    -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsPerMap_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerMap_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsPerMap_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsPerMap_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerMap_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsPerInt_PU    -> SetMarkerColor(fColTrk);
  hTrackPtVsPerInt_PU    -> SetMarkerStyle(fMarTrk);
  hTrackPtVsPerInt_PU    -> SetLineColor(fColTrk);
  hTrackPtVsPerInt_PU    -> SetLineStyle(fLin);
  hTrackPtVsPerInt_PU    -> SetFillColor(fColTrk);
  hTrackPtVsPerInt_PU    -> SetFillStyle(fFil);
  hTrackPtVsPerInt_PU    -> SetTitleFont(FTxt);
  hTrackPtVsPerInt_PU    -> GetXaxis() -> SetTitle(sPerInt.Data());
  hTrackPtVsPerInt_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerInt_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsPerInt_PU    -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsPerInt_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerInt_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsPerInt_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsPerInt_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerInt_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsPerTpc_PU    -> SetMarkerColor(fColTrk);
  hTrackPtVsPerTpc_PU    -> SetMarkerStyle(fMarTrk);
  hTrackPtVsPerTpc_PU    -> SetLineColor(fColTrk);
  hTrackPtVsPerTpc_PU    -> SetLineStyle(fLin);
  hTrackPtVsPerTpc_PU    -> SetFillColor(fColTrk);
  hTrackPtVsPerTpc_PU    -> SetFillStyle(fFil);
  hTrackPtVsPerTpc_PU    -> SetTitleFont(FTxt);
  hTrackPtVsPerTpc_PU    -> GetXaxis() -> SetTitle(sPerTpc.Data());
  hTrackPtVsPerTpc_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerTpc_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsPerTpc_PU    -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsPerTpc_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerTpc_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsPerTpc_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsPerTpc_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerTpc_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsPerTot_PU    -> SetMarkerColor(fColTrk);
  hTrackPtVsPerTot_PU    -> SetMarkerStyle(fMarTrk);
  hTrackPtVsPerTot_PU    -> SetLineColor(fColTrk);
  hTrackPtVsPerTot_PU    -> SetLineStyle(fLin);
  hTrackPtVsPerTot_PU    -> SetFillColor(fColTrk);
  hTrackPtVsPerTot_PU    -> SetFillStyle(fFil);
  hTrackPtVsPerTot_PU    -> SetTitleFont(FTxt);
  hTrackPtVsPerTot_PU    -> GetXaxis() -> SetTitle(sPerTot.Data());
  hTrackPtVsPerTot_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerTot_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsPerTot_PU    -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsPerTot_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerTot_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsPerTot_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsPerTot_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsPerTot_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsChi2_PU      -> SetMarkerColor(fColTrk);
  hTrackPtVsChi2_PU      -> SetMarkerStyle(fMarTrk);
  hTrackPtVsChi2_PU      -> SetLineColor(fColTrk);
  hTrackPtVsChi2_PU      -> SetLineStyle(fLin);
  hTrackPtVsChi2_PU      -> SetFillColor(fColTrk);
  hTrackPtVsChi2_PU      -> SetFillStyle(fFil);
  hTrackPtVsChi2_PU      -> SetTitleFont(FTxt);
  hTrackPtVsChi2_PU      -> GetXaxis() -> SetTitle(sTrkChi2.Data());
  hTrackPtVsChi2_PU      -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsChi2_PU      -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsChi2_PU      -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsChi2_PU      -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsChi2_PU      -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsChi2_PU      -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsChi2_PU      -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsChi2_PU      -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsNDF_PU       -> SetMarkerColor(fColTrk);
  hTrackPtVsNDF_PU       -> SetMarkerStyle(fMarTrk);
  hTrackPtVsNDF_PU       -> SetLineColor(fColTrk);
  hTrackPtVsNDF_PU       -> SetLineStyle(fLin);
  hTrackPtVsNDF_PU       -> SetFillColor(fColTrk);
  hTrackPtVsNDF_PU       -> SetFillStyle(fFil);
  hTrackPtVsNDF_PU       -> SetTitleFont(FTxt);
  hTrackPtVsNDF_PU       -> GetXaxis() -> SetTitle(sTrkNDF.Data());
  hTrackPtVsNDF_PU       -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNDF_PU       -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsNDF_PU       -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsNDF_PU       -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNDF_PU       -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsNDF_PU       -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsNDF_PU       -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsNDF_PU       -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsQuality_PU   -> SetMarkerColor(fColTrk);
  hTrackPtVsQuality_PU   -> SetMarkerStyle(fMarTrk);
  hTrackPtVsQuality_PU   -> SetLineColor(fColTrk);
  hTrackPtVsQuality_PU   -> SetLineStyle(fLin);
  hTrackPtVsQuality_PU   -> SetFillColor(fColTrk);
  hTrackPtVsQuality_PU   -> SetFillStyle(fFil);
  hTrackPtVsQuality_PU   -> SetTitleFont(FTxt);
  hTrackPtVsQuality_PU   -> GetXaxis() -> SetTitle(sTrkQuality.Data());
  hTrackPtVsQuality_PU   -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsQuality_PU   -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsQuality_PU   -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsQuality_PU   -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsQuality_PU   -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsQuality_PU   -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsQuality_PU   -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsQuality_PU   -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsDCAxy_PU     -> SetMarkerColor(fColTrk);
  hTrackPtVsDCAxy_PU     -> SetMarkerStyle(fMarTrk);
  hTrackPtVsDCAxy_PU     -> SetLineColor(fColTrk);
  hTrackPtVsDCAxy_PU     -> SetLineStyle(fLin);
  hTrackPtVsDCAxy_PU     -> SetFillColor(fColTrk);
  hTrackPtVsDCAxy_PU     -> SetFillStyle(fFil);
  hTrackPtVsDCAxy_PU     -> SetTitleFont(FTxt);
  hTrackPtVsDCAxy_PU     -> GetXaxis() -> SetTitle(sTrkDCAxy.Data());
  hTrackPtVsDCAxy_PU     -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsDCAxy_PU     -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsDCAxy_PU     -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsDCAxy_PU     -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsDCAxy_PU     -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsDCAxy_PU     -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsDCAxy_PU     -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsDCAxy_PU     -> GetZaxis() -> SetTitleOffset(fOffZ);
  hTrackPtVsDCAz_PU      -> SetMarkerColor(fColTrk);
  hTrackPtVsDCAz_PU      -> SetMarkerStyle(fMarTrk);
  hTrackPtVsDCAz_PU      -> SetLineColor(fColTrk);
  hTrackPtVsDCAz_PU      -> SetLineStyle(fLin);
  hTrackPtVsDCAz_PU      -> SetFillColor(fColTrk);
  hTrackPtVsDCAz_PU      -> SetFillStyle(fFil);
  hTrackPtVsDCAz_PU      -> SetTitleFont(FTxt);
  hTrackPtVsDCAz_PU      -> GetXaxis() -> SetTitle(sTrkDCAz.Data());
  hTrackPtVsDCAz_PU      -> GetXaxis() -> SetTitleFont(FTxt);
  hTrackPtVsDCAz_PU      -> GetXaxis() -> SetTitleOffset(fOffX);
  hTrackPtVsDCAz_PU      -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hTrackPtVsDCAz_PU      -> GetYaxis() -> SetTitleFont(FTxt);
  hTrackPtVsDCAz_PU      -> GetYaxis() -> SetTitleOffset(fOffY);
  hTrackPtVsDCAz_PU      -> GetZaxis() -> SetTitle(sCount.Data());
  hTrackPtVsDCAz_PU      -> GetZaxis() -> SetTitleFont(FTxt);
  hTrackPtVsDCAz_PU      -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaDCAxyVsTrkPt_PU  -> SetMarkerColor(fColTrk);
  hDeltaDCAxyVsTrkPt_PU  -> SetMarkerStyle(fMarTrk);
  hDeltaDCAxyVsTrkPt_PU  -> SetLineColor(fColTrk);
  hDeltaDCAxyVsTrkPt_PU  -> SetLineStyle(fLin);
  hDeltaDCAxyVsTrkPt_PU  -> SetFillColor(fColTrk);
  hDeltaDCAxyVsTrkPt_PU  -> SetFillStyle(fFil);
  hDeltaDCAxyVsTrkPt_PU  -> SetTitleFont(FTxt);
  hDeltaDCAxyVsTrkPt_PU  -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hDeltaDCAxyVsTrkPt_PU  -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaDCAxyVsTrkPt_PU  -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaDCAxyVsTrkPt_PU  -> GetYaxis() -> SetTitle(sDeltaDCAxy.Data());
  hDeltaDCAxyVsTrkPt_PU  -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaDCAxyVsTrkPt_PU  -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaDCAxyVsTrkPt_PU  -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaDCAxyVsTrkPt_PU  -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaDCAxyVsTrkPt_PU  -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaDCAzVsTrkPt_PU   -> SetMarkerColor(fColTrk);
  hDeltaDCAzVsTrkPt_PU   -> SetMarkerStyle(fMarTrk);
  hDeltaDCAzVsTrkPt_PU   -> SetLineColor(fColTrk);
  hDeltaDCAzVsTrkPt_PU   -> SetLineStyle(fLin);
  hDeltaDCAzVsTrkPt_PU   -> SetFillColor(fColTrk);
  hDeltaDCAzVsTrkPt_PU   -> SetFillStyle(fFil);
  hDeltaDCAzVsTrkPt_PU   -> SetTitleFont(FTxt);
  hDeltaDCAzVsTrkPt_PU   -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hDeltaDCAzVsTrkPt_PU   -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaDCAzVsTrkPt_PU   -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaDCAzVsTrkPt_PU   -> GetYaxis() -> SetTitle(sDeltaDCAz.Data());
  hDeltaDCAzVsTrkPt_PU   -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaDCAzVsTrkPt_PU   -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaDCAzVsTrkPt_PU   -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaDCAzVsTrkPt_PU   -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaDCAzVsTrkPt_PU   -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaEtaVsTrkPt_PU    -> SetMarkerColor(fColTrk);
  hDeltaEtaVsTrkPt_PU    -> SetMarkerStyle(fMarTrk);
  hDeltaEtaVsTrkPt_PU    -> SetLineColor(fColTrk);
  hDeltaEtaVsTrkPt_PU    -> SetLineStyle(fLin);
  hDeltaEtaVsTrkPt_PU    -> SetFillColor(fColTrk);
  hDeltaEtaVsTrkPt_PU    -> SetFillStyle(fFil);
  hDeltaEtaVsTrkPt_PU    -> SetTitleFont(FTxt);
  hDeltaEtaVsTrkPt_PU    -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hDeltaEtaVsTrkPt_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaEtaVsTrkPt_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaEtaVsTrkPt_PU    -> GetYaxis() -> SetTitle(sDeltaEta.Data());
  hDeltaEtaVsTrkPt_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaEtaVsTrkPt_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaEtaVsTrkPt_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaEtaVsTrkPt_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaEtaVsTrkPt_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaEtaVsTrkPt_PU    -> SetMarkerColor(fColTrk);
  hDeltaPhiVsTrkPt_PU    -> SetMarkerStyle(fMarTrk);
  hDeltaPhiVsTrkPt_PU    -> SetLineColor(fColTrk);
  hDeltaPhiVsTrkPt_PU    -> SetLineStyle(fLin);
  hDeltaPhiVsTrkPt_PU    -> SetFillColor(fColTrk);
  hDeltaPhiVsTrkPt_PU    -> SetFillStyle(fFil);
  hDeltaPhiVsTrkPt_PU    -> SetTitleFont(FTxt);
  hDeltaPhiVsTrkPt_PU    -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hDeltaPhiVsTrkPt_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaPhiVsTrkPt_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaPhiVsTrkPt_PU    -> GetYaxis() -> SetTitle(sDeltaPhi.Data());
  hDeltaPhiVsTrkPt_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaPhiVsTrkPt_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaPhiVsTrkPt_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaPhiVsTrkPt_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaPhiVsTrkPt_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaEtaVsTrkPt_PU    -> SetMarkerColor(fColTrk);
  hDeltaPtVsTrkPt_PU     -> SetMarkerStyle(fMarTrk);
  hDeltaPtVsTrkPt_PU     -> SetLineColor(fColTrk);
  hDeltaPtVsTrkPt_PU     -> SetLineStyle(fLin);
  hDeltaPtVsTrkPt_PU     -> SetFillColor(fColTrk);
  hDeltaPtVsTrkPt_PU     -> SetFillStyle(fFil);
  hDeltaPtVsTrkPt_PU     -> SetTitleFont(FTxt);
  hDeltaPtVsTrkPt_PU     -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hDeltaPtVsTrkPt_PU     -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaPtVsTrkPt_PU     -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaPtVsTrkPt_PU     -> GetYaxis() -> SetTitle(sDeltaPt.Data());
  hDeltaPtVsTrkPt_PU     -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaPtVsTrkPt_PU     -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaPtVsTrkPt_PU     -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaPtVsTrkPt_PU     -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaPtVsTrkPt_PU     -> GetZaxis() -> SetTitleOffset(fOffZ);
  // set with-pileup primary histogram styles
  hPrimaryNMms_PU        -> SetMarkerColor(fColPrim);
  hPrimaryNMms_PU        -> SetMarkerStyle(fMarPrim);
  hPrimaryNMms_PU        -> SetLineColor(fColPrim);
  hPrimaryNMms_PU        -> SetLineStyle(fLin);
  hPrimaryNMms_PU        -> SetFillColor(fColPrim);
  hPrimaryNMms_PU        -> SetFillStyle(fFil);
  hPrimaryNMms_PU        -> SetTitleFont(FTxt);
  hPrimaryNMms_PU        -> GetXaxis() -> SetTitle(sTrkNMms.Data());
  hPrimaryNMms_PU        -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryNMms_PU        -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryNMms_PU        -> GetYaxis() -> SetTitle(sCount.Data());
  hPrimaryNMms_PU        -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryNMms_PU        -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryNMap_PU        -> SetMarkerColor(fColPrim);
  hPrimaryNMap_PU        -> SetMarkerStyle(fMarPrim);
  hPrimaryNMap_PU        -> SetLineColor(fColPrim);
  hPrimaryNMap_PU        -> SetLineStyle(fLin);
  hPrimaryNMap_PU        -> SetFillColor(fColPrim);
  hPrimaryNMap_PU        -> SetFillStyle(fFil);
  hPrimaryNMap_PU        -> SetTitleFont(FTxt);
  hPrimaryNMap_PU        -> GetXaxis() -> SetTitle(sTrkNMap.Data());
  hPrimaryNMap_PU        -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryNMap_PU        -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryNMap_PU        -> GetYaxis() -> SetTitle(sCount.Data());
  hPrimaryNMap_PU        -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryNMap_PU        -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryNInt_PU        -> SetMarkerColor(fColPrim);
  hPrimaryNInt_PU        -> SetMarkerStyle(fMarPrim);
  hPrimaryNInt_PU        -> SetLineColor(fColPrim);
  hPrimaryNInt_PU        -> SetLineStyle(fLin);
  hPrimaryNInt_PU        -> SetFillColor(fColPrim);
  hPrimaryNInt_PU        -> SetFillStyle(fFil);
  hPrimaryNInt_PU        -> SetTitleFont(FTxt);
  hPrimaryNInt_PU        -> GetXaxis() -> SetTitle(sTrkNInt.Data());
  hPrimaryNInt_PU        -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryNInt_PU        -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryNInt_PU        -> GetYaxis() -> SetTitle(sCount.Data());
  hPrimaryNInt_PU        -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryNInt_PU        -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryNTpc_PU        -> SetMarkerColor(fColPrim);
  hPrimaryNTpc_PU        -> SetMarkerStyle(fMarPrim);
  hPrimaryNTpc_PU        -> SetLineColor(fColPrim);
  hPrimaryNTpc_PU        -> SetLineStyle(fLin);
  hPrimaryNTpc_PU        -> SetFillColor(fColPrim);
  hPrimaryNTpc_PU        -> SetFillStyle(fFil);
  hPrimaryNTpc_PU        -> SetTitleFont(FTxt);
  hPrimaryNTpc_PU        -> GetXaxis() -> SetTitle(sTrkNTpc.Data());
  hPrimaryNTpc_PU        -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryNTpc_PU        -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryNTpc_PU        -> GetYaxis() -> SetTitle(sCount.Data());
  hPrimaryNTpc_PU        -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryNTpc_PU        -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryNTot_PU        -> SetMarkerColor(fColPrim);
  hPrimaryNTot_PU        -> SetMarkerStyle(fMarPrim);
  hPrimaryNTot_PU        -> SetLineColor(fColPrim);
  hPrimaryNTot_PU        -> SetLineStyle(fLin);
  hPrimaryNTot_PU        -> SetFillColor(fColPrim);
  hPrimaryNTot_PU        -> SetFillStyle(fFil);
  hPrimaryNTot_PU        -> SetTitleFont(FTxt);
  hPrimaryNTot_PU        -> GetXaxis() -> SetTitle(sTrkNTot.Data());
  hPrimaryNTot_PU        -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryNTot_PU        -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryNTot_PU        -> GetYaxis() -> SetTitle(sCount.Data());
  hPrimaryNTot_PU        -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryNTot_PU        -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPerMms_PU      -> SetMarkerColor(fColPrim);
  hPrimaryPerMms_PU      -> SetMarkerStyle(fMarPrim);
  hPrimaryPerMms_PU      -> SetLineColor(fColPrim);
  hPrimaryPerMms_PU      -> SetLineStyle(fLin);
  hPrimaryPerMms_PU      -> SetFillColor(fColPrim);
  hPrimaryPerMms_PU      -> SetFillStyle(fFil);
  hPrimaryPerMms_PU      -> SetTitleFont(FTxt);
  hPrimaryPerMms_PU      -> GetXaxis() -> SetTitle(sPerMms.Data());
  hPrimaryPerMms_PU      -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPerMms_PU      -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPerMms_PU      -> GetYaxis() -> SetTitle(sCount.Data());
  hPrimaryPerMms_PU      -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPerMms_PU      -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPerMap_PU      -> SetMarkerColor(fColPrim);
  hPrimaryPerMap_PU      -> SetMarkerStyle(fMarPrim);
  hPrimaryPerMap_PU      -> SetLineColor(fColPrim);
  hPrimaryPerMap_PU      -> SetLineStyle(fLin);
  hPrimaryPerMap_PU      -> SetFillColor(fColPrim);
  hPrimaryPerMap_PU      -> SetFillStyle(fFil);
  hPrimaryPerMap_PU      -> SetTitleFont(FTxt);
  hPrimaryPerMap_PU      -> GetXaxis() -> SetTitle(sPerMap.Data());
  hPrimaryPerMap_PU      -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPerMap_PU      -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPerMap_PU      -> GetYaxis() -> SetTitle(sCount.Data());
  hPrimaryPerMap_PU      -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPerMap_PU      -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPerInt_PU      -> SetMarkerColor(fColPrim);
  hPrimaryPerInt_PU      -> SetMarkerStyle(fMarPrim);
  hPrimaryPerInt_PU      -> SetLineColor(fColPrim);
  hPrimaryPerInt_PU      -> SetLineStyle(fLin);
  hPrimaryPerInt_PU      -> SetFillColor(fColPrim);
  hPrimaryPerInt_PU      -> SetFillStyle(fFil);
  hPrimaryPerInt_PU      -> SetTitleFont(FTxt);
  hPrimaryPerInt_PU      -> GetXaxis() -> SetTitle(sPerInt.Data());
  hPrimaryPerInt_PU      -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPerInt_PU      -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPerInt_PU      -> GetYaxis() -> SetTitle(sCount.Data());
  hPrimaryPerInt_PU      -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPerInt_PU      -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPerTpc_PU      -> SetMarkerColor(fColPrim);
  hPrimaryPerTpc_PU      -> SetMarkerStyle(fMarPrim);
  hPrimaryPerTpc_PU      -> SetLineColor(fColPrim);
  hPrimaryPerTpc_PU      -> SetLineStyle(fLin);
  hPrimaryPerTpc_PU      -> SetFillColor(fColPrim);
  hPrimaryPerTpc_PU      -> SetFillStyle(fFil);
  hPrimaryPerTpc_PU      -> SetTitleFont(FTxt);
  hPrimaryPerTpc_PU      -> GetXaxis() -> SetTitle(sPerTpc.Data());
  hPrimaryPerTpc_PU      -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPerTpc_PU      -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPerTpc_PU      -> GetYaxis() -> SetTitle(sCount.Data());
  hPrimaryPerTpc_PU      -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPerTpc_PU      -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPerTot_PU      -> SetMarkerColor(fColPrim);
  hPrimaryPerTot_PU      -> SetMarkerStyle(fMarPrim);
  hPrimaryPerTot_PU      -> SetLineColor(fColPrim);
  hPrimaryPerTot_PU      -> SetLineStyle(fLin);
  hPrimaryPerTot_PU      -> SetFillColor(fColPrim);
  hPrimaryPerTot_PU      -> SetFillStyle(fFil);
  hPrimaryPerTot_PU      -> SetTitleFont(FTxt);
  hPrimaryPerTot_PU      -> GetXaxis() -> SetTitle(sPerTot.Data());
  hPrimaryPerTot_PU      -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPerTot_PU      -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPerTot_PU      -> GetYaxis() -> SetTitle(sCount.Data());
  hPrimaryPerTot_PU      -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPerTot_PU      -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryChi2_PU        -> SetMarkerColor(fColPrim);
  hPrimaryChi2_PU        -> SetMarkerStyle(fMarPrim);
  hPrimaryChi2_PU        -> SetLineColor(fColPrim);
  hPrimaryChi2_PU        -> SetLineStyle(fLin);
  hPrimaryChi2_PU        -> SetFillColor(fColPrim);
  hPrimaryChi2_PU        -> SetFillStyle(fFil);
  hPrimaryChi2_PU        -> SetTitleFont(FTxt);
  hPrimaryChi2_PU        -> GetXaxis() -> SetTitle(sTrkChi2.Data());
  hPrimaryChi2_PU        -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryChi2_PU        -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryChi2_PU        -> GetYaxis() -> SetTitle(sCount.Data());
  hPrimaryChi2_PU        -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryChi2_PU        -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryNDF_PU         -> SetMarkerColor(fColPrim);
  hPrimaryNDF_PU         -> SetMarkerStyle(fMarPrim);
  hPrimaryNDF_PU         -> SetLineColor(fColPrim);
  hPrimaryNDF_PU         -> SetLineStyle(fLin);
  hPrimaryNDF_PU         -> SetFillColor(fColPrim);
  hPrimaryNDF_PU         -> SetFillStyle(fFil);
  hPrimaryNDF_PU         -> SetTitleFont(FTxt);
  hPrimaryNDF_PU         -> GetXaxis() -> SetTitle(sTrkNDF.Data());
  hPrimaryNDF_PU         -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryNDF_PU         -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryNDF_PU         -> GetYaxis() -> SetTitle(sCount.Data());
  hPrimaryNDF_PU         -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryNDF_PU         -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryQuality_PU     -> SetMarkerColor(fColPrim);
  hPrimaryQuality_PU     -> SetMarkerStyle(fMarPrim);
  hPrimaryQuality_PU     -> SetLineColor(fColPrim);
  hPrimaryQuality_PU     -> SetLineStyle(fLin);
  hPrimaryQuality_PU     -> SetFillColor(fColPrim);
  hPrimaryQuality_PU     -> SetFillStyle(fFil);
  hPrimaryQuality_PU     -> SetTitleFont(FTxt);
  hPrimaryQuality_PU     -> GetXaxis() -> SetTitle(sTrkQuality.Data());
  hPrimaryQuality_PU     -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryQuality_PU     -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryQuality_PU     -> GetYaxis() -> SetTitle(sCount.Data());
  hPrimaryQuality_PU     -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryQuality_PU     -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryDCAxy_PU       -> SetMarkerColor(fColPrim);
  hPrimaryDCAxy_PU       -> SetMarkerStyle(fMarPrim);
  hPrimaryDCAxy_PU       -> SetLineColor(fColPrim);
  hPrimaryDCAxy_PU       -> SetLineStyle(fLin);
  hPrimaryDCAxy_PU       -> SetFillColor(fColPrim);
  hPrimaryDCAxy_PU       -> SetFillStyle(fFil);
  hPrimaryDCAxy_PU       -> SetTitleFont(FTxt);
  hPrimaryDCAxy_PU       -> GetXaxis() -> SetTitle(sTrkDCAxy.Data());
  hPrimaryDCAxy_PU       -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryDCAxy_PU       -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryDCAxy_PU       -> GetYaxis() -> SetTitle(sCount.Data());
  hPrimaryDCAxy_PU       -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryDCAxy_PU       -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryDCAz_PU        -> SetMarkerColor(fColPrim);
  hPrimaryDCAz_PU        -> SetMarkerStyle(fMarPrim);
  hPrimaryDCAz_PU        -> SetLineColor(fColPrim);
  hPrimaryDCAz_PU        -> SetLineStyle(fLin);
  hPrimaryDCAz_PU        -> SetFillColor(fColPrim);
  hPrimaryDCAz_PU        -> SetFillStyle(fFil);
  hPrimaryDCAz_PU        -> SetTitleFont(FTxt);
  hPrimaryDCAz_PU        -> GetXaxis() -> SetTitle(sTrkDCAz.Data());
  hPrimaryDCAz_PU        -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryDCAz_PU        -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryDCAz_PU        -> GetYaxis() -> SetTitle(sCount.Data());
  hPrimaryDCAz_PU        -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryDCAz_PU        -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryVx_PU          -> SetMarkerColor(fColPrim);
  hPrimaryVx_PU          -> SetMarkerStyle(fMarPrim);
  hPrimaryVx_PU          -> SetLineColor(fColPrim);
  hPrimaryVx_PU          -> SetLineStyle(fLin);
  hPrimaryVx_PU          -> SetFillColor(fColPrim);
  hPrimaryVx_PU          -> SetFillStyle(fFil);
  hPrimaryVx_PU          -> SetTitleFont(FTxt);
  hPrimaryVx_PU          -> GetXaxis() -> SetTitle(sTrkVx.Data());
  hPrimaryVx_PU          -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryVx_PU          -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryVx_PU          -> GetYaxis() -> SetTitle(sCount.Data());
  hPrimaryVx_PU          -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryVx_PU          -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryVy_PU          -> SetMarkerColor(fColPrim);
  hPrimaryVy_PU          -> SetMarkerStyle(fMarPrim);
  hPrimaryVy_PU          -> SetLineColor(fColPrim);
  hPrimaryVy_PU          -> SetLineStyle(fLin);
  hPrimaryVy_PU          -> SetFillColor(fColPrim);
  hPrimaryVy_PU          -> SetFillStyle(fFil);
  hPrimaryVy_PU          -> SetTitleFont(FTxt);
  hPrimaryVy_PU          -> GetXaxis() -> SetTitle(sTrkVy.Data());
  hPrimaryVy_PU          -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryVy_PU          -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryVy_PU          -> GetYaxis() -> SetTitle(sCount.Data());
  hPrimaryVy_PU          -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryVy_PU          -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryVz_PU          -> SetMarkerColor(fColPrim);
  hPrimaryVz_PU          -> SetMarkerStyle(fMarPrim);
  hPrimaryVz_PU          -> SetLineColor(fColPrim);
  hPrimaryVz_PU          -> SetLineStyle(fLin);
  hPrimaryVz_PU          -> SetFillColor(fColPrim);
  hPrimaryVz_PU          -> SetFillStyle(fFil);
  hPrimaryVz_PU          -> SetTitleFont(FTxt);
  hPrimaryVz_PU          -> GetXaxis() -> SetTitle(sTrkVz.Data());
  hPrimaryVz_PU          -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryVz_PU          -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryVz_PU          -> GetYaxis() -> SetTitle(sCount.Data());
  hPrimaryVz_PU          -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryVz_PU          -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryEta_PU         -> SetMarkerColor(fColPrim);
  hPrimaryEta_PU         -> SetMarkerStyle(fMarPrim);
  hPrimaryEta_PU         -> SetLineColor(fColPrim);
  hPrimaryEta_PU         -> SetLineStyle(fLin);
  hPrimaryEta_PU         -> SetFillColor(fColPrim);
  hPrimaryEta_PU         -> SetFillStyle(fFil);
  hPrimaryEta_PU         -> SetTitleFont(FTxt);
  hPrimaryEta_PU         -> GetXaxis() -> SetTitle(sTrkEta.Data());
  hPrimaryEta_PU         -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryEta_PU         -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryEta_PU         -> GetYaxis() -> SetTitle(sCount.Data());
  hPrimaryEta_PU         -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryEta_PU         -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPhi_PU         -> SetMarkerColor(fColPrim);
  hPrimaryPhi_PU         -> SetMarkerStyle(fMarPrim);
  hPrimaryPhi_PU         -> SetLineColor(fColPrim);
  hPrimaryPhi_PU         -> SetLineStyle(fLin);
  hPrimaryPhi_PU         -> SetFillColor(fColPrim);
  hPrimaryPhi_PU         -> SetFillStyle(fFil);
  hPrimaryPhi_PU         -> SetTitleFont(FTxt);
  hPrimaryPhi_PU         -> GetXaxis() -> SetTitle(sTrkPhi.Data());
  hPrimaryPhi_PU         -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPhi_PU         -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPhi_PU         -> GetYaxis() -> SetTitle(sCount.Data());
  hPrimaryPhi_PU         -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPhi_PU         -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPt_PU          -> SetMarkerColor(fColPrim);
  hPrimaryPt_PU          -> SetMarkerStyle(fMarPrim);
  hPrimaryPt_PU          -> SetLineColor(fColPrim);
  hPrimaryPt_PU          -> SetLineStyle(fLin);
  hPrimaryPt_PU          -> SetFillColor(fColPrim);
  hPrimaryPt_PU          -> SetFillStyle(fFil);
  hPrimaryPt_PU          -> SetTitleFont(FTxt);
  hPrimaryPt_PU          -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hPrimaryPt_PU          -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPt_PU          -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPt_PU          -> GetYaxis() -> SetTitle(sCount.Data());
  hPrimaryPt_PU          -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPt_PU          -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaPrimDCAxy_PU     -> SetMarkerColor(fColPrim);
  hDeltaPrimDCAxy_PU     -> SetMarkerStyle(fMarPrim);
  hDeltaPrimDCAxy_PU     -> SetLineColor(fColPrim);
  hDeltaPrimDCAxy_PU     -> SetLineStyle(fLin);
  hDeltaPrimDCAxy_PU     -> SetFillColor(fColPrim);
  hDeltaPrimDCAxy_PU     -> SetFillStyle(fFil);
  hDeltaPrimDCAxy_PU     -> SetTitleFont(FTxt);
  hDeltaPrimDCAxy_PU     -> GetXaxis() -> SetTitle(sDeltaDCAxy.Data());
  hDeltaPrimDCAxy_PU     -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaPrimDCAxy_PU     -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaPrimDCAxy_PU     -> GetYaxis() -> SetTitle(sCount.Data());
  hDeltaPrimDCAxy_PU     -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaPrimDCAxy_PU     -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaPrimDCAz_PU      -> SetMarkerColor(fColPrim);
  hDeltaPrimDCAz_PU      -> SetMarkerStyle(fMarPrim);
  hDeltaPrimDCAz_PU      -> SetLineColor(fColPrim);
  hDeltaPrimDCAz_PU      -> SetLineStyle(fLin);
  hDeltaPrimDCAz_PU      -> SetFillColor(fColPrim);
  hDeltaPrimDCAz_PU      -> SetFillStyle(fFil);
  hDeltaPrimDCAz_PU      -> SetTitleFont(FTxt);
  hDeltaPrimDCAz_PU      -> GetXaxis() -> SetTitle(sDeltaDCAz.Data());
  hDeltaPrimDCAz_PU      -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaPrimDCAz_PU      -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaPrimDCAz_PU      -> GetYaxis() -> SetTitle(sCount.Data());
  hDeltaPrimDCAz_PU      -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaPrimDCAz_PU      -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaPrimEta_PU       -> SetMarkerColor(fColPrim);
  hDeltaPrimEta_PU       -> SetMarkerStyle(fMarPrim);
  hDeltaPrimEta_PU       -> SetLineColor(fColPrim);
  hDeltaPrimEta_PU       -> SetLineStyle(fLin);
  hDeltaPrimEta_PU       -> SetFillColor(fColPrim);
  hDeltaPrimEta_PU       -> SetFillStyle(fFil);
  hDeltaPrimEta_PU       -> SetTitleFont(FTxt);
  hDeltaPrimEta_PU       -> GetXaxis() -> SetTitle(sDeltaEta.Data());
  hDeltaPrimEta_PU       -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaPrimEta_PU       -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaPrimEta_PU       -> GetYaxis() -> SetTitle(sCount.Data());
  hDeltaPrimEta_PU       -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaPrimEta_PU       -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaPrimEta_PU       -> SetMarkerColor(fColPrim);
  hDeltaPrimPhi_PU       -> SetMarkerStyle(fMarPrim);
  hDeltaPrimPhi_PU       -> SetLineColor(fColPrim);
  hDeltaPrimPhi_PU       -> SetLineStyle(fLin);
  hDeltaPrimPhi_PU       -> SetFillColor(fColPrim);
  hDeltaPrimPhi_PU       -> SetFillStyle(fFil);
  hDeltaPrimPhi_PU       -> SetTitleFont(FTxt);
  hDeltaPrimPhi_PU       -> GetXaxis() -> SetTitle(sDeltaPhi.Data());
  hDeltaPrimPhi_PU       -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaPrimPhi_PU       -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaPrimPhi_PU       -> GetYaxis() -> SetTitle(sCount.Data());
  hDeltaPrimPhi_PU       -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaPrimPhi_PU       -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaPrimPt_PU        -> SetMarkerStyle(fMarPrim);
  hDeltaPrimPt_PU        -> SetLineColor(fColPrim);
  hDeltaPrimPt_PU        -> SetLineStyle(fLin);
  hDeltaPrimPt_PU        -> SetFillColor(fColPrim);
  hDeltaPrimPt_PU        -> SetFillStyle(fFil);
  hDeltaPrimPt_PU        -> SetTitleFont(FTxt);
  hDeltaPrimPt_PU        -> GetXaxis() -> SetTitle(sDeltaPt.Data());
  hDeltaPrimPt_PU        -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaPrimPt_PU        -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaPrimPt_PU        -> GetYaxis() -> SetTitle(sCount.Data());
  hDeltaPrimPt_PU        -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaPrimPt_PU        -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPtVsNMms_PU    -> SetMarkerColor(fColPrim);
  hPrimaryPtVsNMms_PU    -> SetMarkerStyle(fMarPrim);
  hPrimaryPtVsNMms_PU    -> SetLineColor(fColPrim);
  hPrimaryPtVsNMms_PU    -> SetLineStyle(fLin);
  hPrimaryPtVsNMms_PU    -> SetFillColor(fColPrim);
  hPrimaryPtVsNMms_PU    -> SetFillStyle(fFil);
  hPrimaryPtVsNMms_PU    -> SetTitleFont(FTxt);
  hPrimaryPtVsNMms_PU    -> GetXaxis() -> SetTitle(sTrkNMms.Data());
  hPrimaryPtVsNMms_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsNMms_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPtVsNMms_PU    -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hPrimaryPtVsNMms_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsNMms_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPtVsNMms_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hPrimaryPtVsNMms_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsNMms_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  hPrimaryPtVsNMap_PU    -> SetMarkerColor(fColPrim);
  hPrimaryPtVsNMap_PU    -> SetMarkerStyle(fMarPrim);
  hPrimaryPtVsNMap_PU    -> SetLineColor(fColPrim);
  hPrimaryPtVsNMap_PU    -> SetLineStyle(fLin);
  hPrimaryPtVsNMap_PU    -> SetFillColor(fColPrim);
  hPrimaryPtVsNMap_PU    -> SetFillStyle(fFil);
  hPrimaryPtVsNMap_PU    -> SetTitleFont(FTxt);
  hPrimaryPtVsNMap_PU    -> GetXaxis() -> SetTitle(sTrkNMap.Data());
  hPrimaryPtVsNMap_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsNMap_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPtVsNMap_PU    -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hPrimaryPtVsNMap_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsNMap_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPtVsNMap_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hPrimaryPtVsNMap_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsNMap_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  hPrimaryPtVsNInt_PU    -> SetMarkerColor(fColPrim);
  hPrimaryPtVsNInt_PU    -> SetMarkerStyle(fMarPrim);
  hPrimaryPtVsNInt_PU    -> SetLineColor(fColPrim);
  hPrimaryPtVsNInt_PU    -> SetLineStyle(fLin);
  hPrimaryPtVsNInt_PU    -> SetFillColor(fColPrim);
  hPrimaryPtVsNInt_PU    -> SetFillStyle(fFil);
  hPrimaryPtVsNInt_PU    -> SetTitleFont(FTxt);
  hPrimaryPtVsNInt_PU    -> GetXaxis() -> SetTitle(sTrkNInt.Data());
  hPrimaryPtVsNInt_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsNInt_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPtVsNInt_PU    -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hPrimaryPtVsNInt_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsNInt_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPtVsNInt_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hPrimaryPtVsNInt_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsNInt_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  hPrimaryPtVsNTpc_PU    -> SetMarkerColor(fColPrim);
  hPrimaryPtVsNTpc_PU    -> SetMarkerStyle(fMarPrim);
  hPrimaryPtVsNTpc_PU    -> SetLineColor(fColPrim);
  hPrimaryPtVsNTpc_PU    -> SetLineStyle(fLin);
  hPrimaryPtVsNTpc_PU    -> SetFillColor(fColPrim);
  hPrimaryPtVsNTpc_PU    -> SetFillStyle(fFil);
  hPrimaryPtVsNTpc_PU    -> SetTitleFont(FTxt);
  hPrimaryPtVsNTpc_PU    -> GetXaxis() -> SetTitle(sTrkNTpc.Data());
  hPrimaryPtVsNTpc_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsNTpc_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPtVsNTpc_PU    -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hPrimaryPtVsNTpc_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsNTpc_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPtVsNTpc_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hPrimaryPtVsNTpc_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsNTpc_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  hPrimaryPtVsNTot_PU    -> SetMarkerColor(fColPrim);
  hPrimaryPtVsNTot_PU    -> SetMarkerStyle(fMarPrim);
  hPrimaryPtVsNTot_PU    -> SetLineColor(fColPrim);
  hPrimaryPtVsNTot_PU    -> SetLineStyle(fLin);
  hPrimaryPtVsNTot_PU    -> SetFillColor(fColPrim);
  hPrimaryPtVsNTot_PU    -> SetFillStyle(fFil);
  hPrimaryPtVsNTot_PU    -> SetTitleFont(FTxt);
  hPrimaryPtVsNTot_PU    -> GetXaxis() -> SetTitle(sTrkNTot.Data());
  hPrimaryPtVsNTot_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsNTot_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPtVsNTot_PU    -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hPrimaryPtVsNTot_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsNTot_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPtVsNTot_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hPrimaryPtVsNTot_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsNTot_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  hPrimaryPtVsPerMms_PU  -> SetMarkerColor(fColPrim);
  hPrimaryPtVsPerMms_PU  -> SetMarkerStyle(fMarPrim);
  hPrimaryPtVsPerMms_PU  -> SetLineColor(fColPrim);
  hPrimaryPtVsPerMms_PU  -> SetLineStyle(fLin);
  hPrimaryPtVsPerMms_PU  -> SetFillColor(fColPrim);
  hPrimaryPtVsPerMms_PU  -> SetFillStyle(fFil);
  hPrimaryPtVsPerMms_PU  -> SetTitleFont(FTxt);
  hPrimaryPtVsPerMms_PU  -> GetXaxis() -> SetTitle(sPerMms.Data());
  hPrimaryPtVsPerMms_PU  -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsPerMms_PU  -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPtVsPerMms_PU  -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hPrimaryPtVsPerMms_PU  -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsPerMms_PU  -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPtVsPerMms_PU  -> GetZaxis() -> SetTitle(sCount.Data());
  hPrimaryPtVsPerMms_PU  -> GetZaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsPerMms_PU  -> GetZaxis() -> SetTitleOffset(fOffZ);
  hPrimaryPtVsPerMap_PU  -> SetMarkerColor(fColPrim);
  hPrimaryPtVsPerMap_PU  -> SetMarkerStyle(fMarPrim);
  hPrimaryPtVsPerMap_PU  -> SetLineColor(fColPrim);
  hPrimaryPtVsPerMap_PU  -> SetLineStyle(fLin);
  hPrimaryPtVsPerMap_PU  -> SetFillColor(fColPrim);
  hPrimaryPtVsPerMap_PU  -> SetFillStyle(fFil);
  hPrimaryPtVsPerMap_PU  -> SetTitleFont(FTxt);
  hPrimaryPtVsPerMap_PU  -> GetXaxis() -> SetTitle(sPerMap.Data());
  hPrimaryPtVsPerMap_PU  -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsPerMap_PU  -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPtVsPerMap_PU  -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hPrimaryPtVsPerMap_PU  -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsPerMap_PU  -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPtVsPerMap_PU  -> GetZaxis() -> SetTitle(sCount.Data());
  hPrimaryPtVsPerMap_PU  -> GetZaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsPerMap_PU  -> GetZaxis() -> SetTitleOffset(fOffZ);
  hPrimaryPtVsPerInt_PU  -> SetMarkerColor(fColPrim);
  hPrimaryPtVsPerInt_PU  -> SetMarkerStyle(fMarPrim);
  hPrimaryPtVsPerInt_PU  -> SetLineColor(fColPrim);
  hPrimaryPtVsPerInt_PU  -> SetLineStyle(fLin);
  hPrimaryPtVsPerInt_PU  -> SetFillColor(fColPrim);
  hPrimaryPtVsPerInt_PU  -> SetFillStyle(fFil);
  hPrimaryPtVsPerInt_PU  -> SetTitleFont(FTxt);
  hPrimaryPtVsPerInt_PU  -> GetXaxis() -> SetTitle(sPerInt.Data());
  hPrimaryPtVsPerInt_PU  -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsPerInt_PU  -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPtVsPerInt_PU  -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hPrimaryPtVsPerInt_PU  -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsPerInt_PU  -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPtVsPerInt_PU  -> GetZaxis() -> SetTitle(sCount.Data());
  hPrimaryPtVsPerInt_PU  -> GetZaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsPerInt_PU  -> GetZaxis() -> SetTitleOffset(fOffZ);
  hPrimaryPtVsPerTpc_PU  -> SetMarkerColor(fColPrim);
  hPrimaryPtVsPerTpc_PU  -> SetMarkerStyle(fMarPrim);
  hPrimaryPtVsPerTpc_PU  -> SetLineColor(fColPrim);
  hPrimaryPtVsPerTpc_PU  -> SetLineStyle(fLin);
  hPrimaryPtVsPerTpc_PU  -> SetFillColor(fColPrim);
  hPrimaryPtVsPerTpc_PU  -> SetFillStyle(fFil);
  hPrimaryPtVsPerTpc_PU  -> SetTitleFont(FTxt);
  hPrimaryPtVsPerTpc_PU  -> GetXaxis() -> SetTitle(sPerTpc.Data());
  hPrimaryPtVsPerTpc_PU  -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsPerTpc_PU  -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPtVsPerTpc_PU  -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hPrimaryPtVsPerTpc_PU  -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsPerTpc_PU  -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPtVsPerTpc_PU  -> GetZaxis() -> SetTitle(sCount.Data());
  hPrimaryPtVsPerTpc_PU  -> GetZaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsPerTpc_PU  -> GetZaxis() -> SetTitleOffset(fOffZ);
  hPrimaryPtVsPerTot_PU  -> SetMarkerColor(fColPrim);
  hPrimaryPtVsPerTot_PU  -> SetMarkerStyle(fMarPrim);
  hPrimaryPtVsPerTot_PU  -> SetLineColor(fColPrim);
  hPrimaryPtVsPerTot_PU  -> SetLineStyle(fLin);
  hPrimaryPtVsPerTot_PU  -> SetFillColor(fColPrim);
  hPrimaryPtVsPerTot_PU  -> SetFillStyle(fFil);
  hPrimaryPtVsPerTot_PU  -> SetTitleFont(FTxt);
  hPrimaryPtVsPerTot_PU  -> GetXaxis() -> SetTitle(sPerTot.Data());
  hPrimaryPtVsPerTot_PU  -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsPerTot_PU  -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPtVsPerTot_PU  -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hPrimaryPtVsPerTot_PU  -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsPerTot_PU  -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPtVsPerTot_PU  -> GetZaxis() -> SetTitle(sCount.Data());
  hPrimaryPtVsPerTot_PU  -> GetZaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsPerTot_PU  -> GetZaxis() -> SetTitleOffset(fOffZ);
  hPrimaryPtVsChi2_PU    -> SetMarkerColor(fColPrim);
  hPrimaryPtVsChi2_PU    -> SetMarkerStyle(fMarPrim);
  hPrimaryPtVsChi2_PU    -> SetLineColor(fColPrim);
  hPrimaryPtVsChi2_PU    -> SetLineStyle(fLin);
  hPrimaryPtVsChi2_PU    -> SetFillColor(fColPrim);
  hPrimaryPtVsChi2_PU    -> SetFillStyle(fFil);
  hPrimaryPtVsChi2_PU    -> SetTitleFont(FTxt);
  hPrimaryPtVsChi2_PU    -> GetXaxis() -> SetTitle(sTrkChi2.Data());
  hPrimaryPtVsChi2_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsChi2_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPtVsChi2_PU    -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hPrimaryPtVsChi2_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsChi2_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPtVsChi2_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hPrimaryPtVsChi2_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsChi2_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  hPrimaryPtVsNDF_PU     -> SetMarkerColor(fColPrim);
  hPrimaryPtVsNDF_PU     -> SetMarkerStyle(fMarPrim);
  hPrimaryPtVsNDF_PU     -> SetLineColor(fColPrim);
  hPrimaryPtVsNDF_PU     -> SetLineStyle(fLin);
  hPrimaryPtVsNDF_PU     -> SetFillColor(fColPrim);
  hPrimaryPtVsNDF_PU     -> SetFillStyle(fFil);
  hPrimaryPtVsNDF_PU     -> SetTitleFont(FTxt);
  hPrimaryPtVsNDF_PU     -> GetXaxis() -> SetTitle(sTrkNDF.Data());
  hPrimaryPtVsNDF_PU     -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsNDF_PU     -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPtVsNDF_PU     -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hPrimaryPtVsNDF_PU     -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsNDF_PU     -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPtVsNDF_PU     -> GetZaxis() -> SetTitle(sCount.Data());
  hPrimaryPtVsNDF_PU     -> GetZaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsNDF_PU     -> GetZaxis() -> SetTitleOffset(fOffZ);
  hPrimaryPtVsQuality_PU -> SetMarkerColor(fColPrim);
  hPrimaryPtVsQuality_PU -> SetMarkerStyle(fMarPrim);
  hPrimaryPtVsQuality_PU -> SetLineColor(fColPrim);
  hPrimaryPtVsQuality_PU -> SetLineStyle(fLin);
  hPrimaryPtVsQuality_PU -> SetFillColor(fColPrim);
  hPrimaryPtVsQuality_PU -> SetFillStyle(fFil);
  hPrimaryPtVsQuality_PU -> SetTitleFont(FTxt);
  hPrimaryPtVsQuality_PU -> GetXaxis() -> SetTitle(sTrkQuality.Data());
  hPrimaryPtVsQuality_PU -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsQuality_PU -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPtVsQuality_PU -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hPrimaryPtVsQuality_PU -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsQuality_PU -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPtVsQuality_PU -> GetZaxis() -> SetTitle(sCount.Data());
  hPrimaryPtVsQuality_PU -> GetZaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsQuality_PU -> GetZaxis() -> SetTitleOffset(fOffZ);
  hPrimaryPtVsDCAxy_PU   -> SetMarkerColor(fColPrim);
  hPrimaryPtVsDCAxy_PU   -> SetMarkerStyle(fMarPrim);
  hPrimaryPtVsDCAxy_PU   -> SetLineColor(fColPrim);
  hPrimaryPtVsDCAxy_PU   -> SetLineStyle(fLin);
  hPrimaryPtVsDCAxy_PU   -> SetFillColor(fColPrim);
  hPrimaryPtVsDCAxy_PU   -> SetFillStyle(fFil);
  hPrimaryPtVsDCAxy_PU   -> SetTitleFont(FTxt);
  hPrimaryPtVsDCAxy_PU   -> GetXaxis() -> SetTitle(sTrkDCAxy.Data());
  hPrimaryPtVsDCAxy_PU   -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsDCAxy_PU   -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPtVsDCAxy_PU   -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hPrimaryPtVsDCAxy_PU   -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsDCAxy_PU   -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPtVsDCAxy_PU   -> GetZaxis() -> SetTitle(sCount.Data());
  hPrimaryPtVsDCAxy_PU   -> GetZaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsDCAxy_PU   -> GetZaxis() -> SetTitleOffset(fOffZ);
  hPrimaryPtVsDCAz_PU    -> SetMarkerColor(fColPrim);
  hPrimaryPtVsDCAz_PU    -> SetMarkerStyle(fMarPrim);
  hPrimaryPtVsDCAz_PU    -> SetLineColor(fColPrim);
  hPrimaryPtVsDCAz_PU    -> SetLineStyle(fLin);
  hPrimaryPtVsDCAz_PU    -> SetFillColor(fColPrim);
  hPrimaryPtVsDCAz_PU    -> SetFillStyle(fFil);
  hPrimaryPtVsDCAz_PU    -> SetTitleFont(FTxt);
  hPrimaryPtVsDCAz_PU    -> GetXaxis() -> SetTitle(sTrkDCAz.Data());
  hPrimaryPtVsDCAz_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsDCAz_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hPrimaryPtVsDCAz_PU    -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hPrimaryPtVsDCAz_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsDCAz_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hPrimaryPtVsDCAz_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hPrimaryPtVsDCAz_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hPrimaryPtVsDCAz_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaDCAxyVsPrimPt_PU -> SetMarkerColor(fColPrim);
  hDeltaDCAxyVsPrimPt_PU -> SetMarkerStyle(fMarPrim);
  hDeltaDCAxyVsPrimPt_PU -> SetLineColor(fColPrim);
  hDeltaDCAxyVsPrimPt_PU -> SetLineStyle(fLin);
  hDeltaDCAxyVsPrimPt_PU -> SetFillColor(fColPrim);
  hDeltaDCAxyVsPrimPt_PU -> SetFillStyle(fFil);
  hDeltaDCAxyVsPrimPt_PU -> SetTitleFont(FTxt);
  hDeltaDCAxyVsPrimPt_PU -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hDeltaDCAxyVsPrimPt_PU -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaDCAxyVsPrimPt_PU -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaDCAxyVsPrimPt_PU -> GetYaxis() -> SetTitle(sDeltaDCAxy.Data());
  hDeltaDCAxyVsPrimPt_PU -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaDCAxyVsPrimPt_PU -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaDCAxyVsPrimPt_PU -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaDCAxyVsPrimPt_PU -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaDCAxyVsPrimPt_PU -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaDCAzVsPrimPt_PU  -> SetMarkerColor(fColPrim);
  hDeltaDCAzVsPrimPt_PU  -> SetMarkerStyle(fMarPrim);
  hDeltaDCAzVsPrimPt_PU  -> SetLineColor(fColPrim);
  hDeltaDCAzVsPrimPt_PU  -> SetLineStyle(fLin);
  hDeltaDCAzVsPrimPt_PU  -> SetFillColor(fColPrim);
  hDeltaDCAzVsPrimPt_PU  -> SetFillStyle(fFil);
  hDeltaDCAzVsPrimPt_PU  -> SetTitleFont(FTxt);
  hDeltaDCAzVsPrimPt_PU  -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hDeltaDCAzVsPrimPt_PU  -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaDCAzVsPrimPt_PU  -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaDCAzVsPrimPt_PU  -> GetYaxis() -> SetTitle(sDeltaDCAz.Data());
  hDeltaDCAzVsPrimPt_PU  -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaDCAzVsPrimPt_PU  -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaDCAzVsPrimPt_PU  -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaDCAzVsPrimPt_PU  -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaDCAzVsPrimPt_PU  -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaEtaVsPrimPt_PU   -> SetMarkerColor(fColPrim);
  hDeltaEtaVsPrimPt_PU   -> SetMarkerStyle(fMarPrim);
  hDeltaEtaVsPrimPt_PU   -> SetLineColor(fColPrim);
  hDeltaEtaVsPrimPt_PU   -> SetLineStyle(fLin);
  hDeltaEtaVsPrimPt_PU   -> SetFillColor(fColPrim);
  hDeltaEtaVsPrimPt_PU   -> SetFillStyle(fFil);
  hDeltaEtaVsPrimPt_PU   -> SetTitleFont(FTxt);
  hDeltaEtaVsPrimPt_PU   -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hDeltaEtaVsPrimPt_PU   -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaEtaVsPrimPt_PU   -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaEtaVsPrimPt_PU   -> GetYaxis() -> SetTitle(sDeltaEta.Data());
  hDeltaEtaVsPrimPt_PU   -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaEtaVsPrimPt_PU   -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaEtaVsPrimPt_PU   -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaEtaVsPrimPt_PU   -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaEtaVsPrimPt_PU   -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaEtaVsPrimPt_PU   -> SetMarkerColor(fColPrim);
  hDeltaPhiVsPrimPt_PU   -> SetMarkerStyle(fMarPrim);
  hDeltaPhiVsPrimPt_PU   -> SetLineColor(fColPrim);
  hDeltaPhiVsPrimPt_PU   -> SetLineStyle(fLin);
  hDeltaPhiVsPrimPt_PU   -> SetFillColor(fColPrim);
  hDeltaPhiVsPrimPt_PU   -> SetFillStyle(fFil);
  hDeltaPhiVsPrimPt_PU   -> SetTitleFont(FTxt);
  hDeltaPhiVsPrimPt_PU   -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hDeltaPhiVsPrimPt_PU   -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaPhiVsPrimPt_PU   -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaPhiVsPrimPt_PU   -> GetYaxis() -> SetTitle(sDeltaPhi.Data());
  hDeltaPhiVsPrimPt_PU   -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaPhiVsPrimPt_PU   -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaPhiVsPrimPt_PU   -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaPhiVsPrimPt_PU   -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaPhiVsPrimPt_PU   -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaEtaVsPrimPt_PU   -> SetMarkerColor(fColPrim);
  hDeltaPtVsPrimPt_PU    -> SetMarkerStyle(fMarPrim);
  hDeltaPtVsPrimPt_PU    -> SetLineColor(fColPrim);
  hDeltaPtVsPrimPt_PU    -> SetLineStyle(fLin);
  hDeltaPtVsPrimPt_PU    -> SetFillColor(fColPrim);
  hDeltaPtVsPrimPt_PU    -> SetFillStyle(fFil);
  hDeltaPtVsPrimPt_PU    -> SetTitleFont(FTxt);
  hDeltaPtVsPrimPt_PU    -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hDeltaPtVsPrimPt_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaPtVsPrimPt_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaPtVsPrimPt_PU    -> GetYaxis() -> SetTitle(sDeltaPt.Data());
  hDeltaPtVsPrimPt_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaPtVsPrimPt_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaPtVsPrimPt_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaPtVsPrimPt_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaPtVsPrimPt_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  // set with-pileup non-primary histogram styles
  hNonPrimNMms_PU        -> SetMarkerColor(fColNoPr);
  hNonPrimNMms_PU        -> SetMarkerStyle(fMarNoPr);
  hNonPrimNMms_PU        -> SetLineColor(fColNoPr);
  hNonPrimNMms_PU        -> SetLineStyle(fLin);
  hNonPrimNMms_PU        -> SetFillColor(fColNoPr);
  hNonPrimNMms_PU        -> SetFillStyle(fFil);
  hNonPrimNMms_PU        -> SetTitleFont(FTxt);
  hNonPrimNMms_PU        -> GetXaxis() -> SetTitle(sTrkNMms.Data());
  hNonPrimNMms_PU        -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimNMms_PU        -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimNMms_PU        -> GetYaxis() -> SetTitle(sCount.Data());
  hNonPrimNMms_PU        -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimNMms_PU        -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimNMap_PU        -> SetMarkerColor(fColNoPr);
  hNonPrimNMap_PU        -> SetMarkerStyle(fMarNoPr);
  hNonPrimNMap_PU        -> SetLineColor(fColNoPr);
  hNonPrimNMap_PU        -> SetLineStyle(fLin);
  hNonPrimNMap_PU        -> SetFillColor(fColNoPr);
  hNonPrimNMap_PU        -> SetFillStyle(fFil);
  hNonPrimNMap_PU        -> SetTitleFont(FTxt);
  hNonPrimNMap_PU        -> GetXaxis() -> SetTitle(sTrkNMap.Data());
  hNonPrimNMap_PU        -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimNMap_PU        -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimNMap_PU        -> GetYaxis() -> SetTitle(sCount.Data());
  hNonPrimNMap_PU        -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimNMap_PU        -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimNInt_PU        -> SetMarkerColor(fColNoPr);
  hNonPrimNInt_PU        -> SetMarkerStyle(fMarNoPr);
  hNonPrimNInt_PU        -> SetLineColor(fColNoPr);
  hNonPrimNInt_PU        -> SetLineStyle(fLin);
  hNonPrimNInt_PU        -> SetFillColor(fColNoPr);
  hNonPrimNInt_PU        -> SetFillStyle(fFil);
  hNonPrimNInt_PU        -> SetTitleFont(FTxt);
  hNonPrimNInt_PU        -> GetXaxis() -> SetTitle(sTrkNInt.Data());
  hNonPrimNInt_PU        -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimNInt_PU        -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimNInt_PU        -> GetYaxis() -> SetTitle(sCount.Data());
  hNonPrimNInt_PU        -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimNInt_PU        -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimNTpc_PU        -> SetMarkerColor(fColNoPr);
  hNonPrimNTpc_PU        -> SetMarkerStyle(fMarNoPr);
  hNonPrimNTpc_PU        -> SetLineColor(fColNoPr);
  hNonPrimNTpc_PU        -> SetLineStyle(fLin);
  hNonPrimNTpc_PU        -> SetFillColor(fColNoPr);
  hNonPrimNTpc_PU        -> SetFillStyle(fFil);
  hNonPrimNTpc_PU        -> SetTitleFont(FTxt);
  hNonPrimNTpc_PU        -> GetXaxis() -> SetTitle(sTrkNTpc.Data());
  hNonPrimNTpc_PU        -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimNTpc_PU        -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimNTpc_PU        -> GetYaxis() -> SetTitle(sCount.Data());
  hNonPrimNTpc_PU        -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimNTpc_PU        -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimNTot_PU        -> SetMarkerColor(fColNoPr);
  hNonPrimNTot_PU        -> SetMarkerStyle(fMarNoPr);
  hNonPrimNTot_PU        -> SetLineColor(fColNoPr);
  hNonPrimNTot_PU        -> SetLineStyle(fLin);
  hNonPrimNTot_PU        -> SetFillColor(fColNoPr);
  hNonPrimNTot_PU        -> SetFillStyle(fFil);
  hNonPrimNTot_PU        -> SetTitleFont(FTxt);
  hNonPrimNTot_PU        -> GetXaxis() -> SetTitle(sTrkNTot.Data());
  hNonPrimNTot_PU        -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimNTot_PU        -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimNTot_PU        -> GetYaxis() -> SetTitle(sCount.Data());
  hNonPrimNTot_PU        -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimNTot_PU        -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPerMms_PU      -> SetMarkerColor(fColNoPr);
  hNonPrimPerMms_PU      -> SetMarkerStyle(fMarNoPr);
  hNonPrimPerMms_PU      -> SetLineColor(fColNoPr);
  hNonPrimPerMms_PU      -> SetLineStyle(fLin);
  hNonPrimPerMms_PU      -> SetFillColor(fColNoPr);
  hNonPrimPerMms_PU      -> SetFillStyle(fFil);
  hNonPrimPerMms_PU      -> SetTitleFont(FTxt);
  hNonPrimPerMms_PU      -> GetXaxis() -> SetTitle(sPerMms.Data());
  hNonPrimPerMms_PU      -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPerMms_PU      -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPerMms_PU      -> GetYaxis() -> SetTitle(sCount.Data());
  hNonPrimPerMms_PU      -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPerMms_PU      -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPerMap_PU      -> SetMarkerColor(fColNoPr);
  hNonPrimPerMap_PU      -> SetMarkerStyle(fMarNoPr);
  hNonPrimPerMap_PU      -> SetLineColor(fColNoPr);
  hNonPrimPerMap_PU      -> SetLineStyle(fLin);
  hNonPrimPerMap_PU      -> SetFillColor(fColNoPr);
  hNonPrimPerMap_PU      -> SetFillStyle(fFil);
  hNonPrimPerMap_PU      -> SetTitleFont(FTxt);
  hNonPrimPerMap_PU      -> GetXaxis() -> SetTitle(sPerMap.Data());
  hNonPrimPerMap_PU      -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPerMap_PU      -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPerMap_PU      -> GetYaxis() -> SetTitle(sCount.Data());
  hNonPrimPerMap_PU      -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPerMap_PU      -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPerInt_PU      -> SetMarkerColor(fColNoPr);
  hNonPrimPerInt_PU      -> SetMarkerStyle(fMarNoPr);
  hNonPrimPerInt_PU      -> SetLineColor(fColNoPr);
  hNonPrimPerInt_PU      -> SetLineStyle(fLin);
  hNonPrimPerInt_PU      -> SetFillColor(fColNoPr);
  hNonPrimPerInt_PU      -> SetFillStyle(fFil);
  hNonPrimPerInt_PU      -> SetTitleFont(FTxt);
  hNonPrimPerInt_PU      -> GetXaxis() -> SetTitle(sPerInt.Data());
  hNonPrimPerInt_PU      -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPerInt_PU      -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPerInt_PU      -> GetYaxis() -> SetTitle(sCount.Data());
  hNonPrimPerInt_PU      -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPerInt_PU      -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPerTpc_PU      -> SetMarkerColor(fColNoPr);
  hNonPrimPerTpc_PU      -> SetMarkerStyle(fMarNoPr);
  hNonPrimPerTpc_PU      -> SetLineColor(fColNoPr);
  hNonPrimPerTpc_PU      -> SetLineStyle(fLin);
  hNonPrimPerTpc_PU      -> SetFillColor(fColNoPr);
  hNonPrimPerTpc_PU      -> SetFillStyle(fFil);
  hNonPrimPerTpc_PU      -> SetTitleFont(FTxt);
  hNonPrimPerTpc_PU      -> GetXaxis() -> SetTitle(sPerTpc.Data());
  hNonPrimPerTpc_PU      -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPerTpc_PU      -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPerTpc_PU      -> GetYaxis() -> SetTitle(sCount.Data());
  hNonPrimPerTpc_PU      -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPerTpc_PU      -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPerTot_PU      -> SetMarkerColor(fColNoPr);
  hNonPrimPerTot_PU      -> SetMarkerStyle(fMarNoPr);
  hNonPrimPerTot_PU      -> SetLineColor(fColNoPr);
  hNonPrimPerTot_PU      -> SetLineStyle(fLin);
  hNonPrimPerTot_PU      -> SetFillColor(fColNoPr);
  hNonPrimPerTot_PU      -> SetFillStyle(fFil);
  hNonPrimPerTot_PU      -> SetTitleFont(FTxt);
  hNonPrimPerTot_PU      -> GetXaxis() -> SetTitle(sPerTot.Data());
  hNonPrimPerTot_PU      -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPerTot_PU      -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPerTot_PU      -> GetYaxis() -> SetTitle(sCount.Data());
  hNonPrimPerTot_PU      -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPerTot_PU      -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimChi2_PU        -> SetMarkerColor(fColNoPr);
  hNonPrimChi2_PU        -> SetMarkerStyle(fMarNoPr);
  hNonPrimChi2_PU        -> SetLineColor(fColNoPr);
  hNonPrimChi2_PU        -> SetLineStyle(fLin);
  hNonPrimChi2_PU        -> SetFillColor(fColNoPr);
  hNonPrimChi2_PU        -> SetFillStyle(fFil);
  hNonPrimChi2_PU        -> SetTitleFont(FTxt);
  hNonPrimChi2_PU        -> GetXaxis() -> SetTitle(sTrkChi2.Data());
  hNonPrimChi2_PU        -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimChi2_PU        -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimChi2_PU        -> GetYaxis() -> SetTitle(sCount.Data());
  hNonPrimChi2_PU        -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimChi2_PU        -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimNDF_PU         -> SetMarkerColor(fColNoPr);
  hNonPrimNDF_PU         -> SetMarkerStyle(fMarNoPr);
  hNonPrimNDF_PU         -> SetLineColor(fColNoPr);
  hNonPrimNDF_PU         -> SetLineStyle(fLin);
  hNonPrimNDF_PU         -> SetFillColor(fColNoPr);
  hNonPrimNDF_PU         -> SetFillStyle(fFil);
  hNonPrimNDF_PU         -> SetTitleFont(FTxt);
  hNonPrimNDF_PU         -> GetXaxis() -> SetTitle(sTrkNDF.Data());
  hNonPrimNDF_PU         -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimNDF_PU         -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimNDF_PU         -> GetYaxis() -> SetTitle(sCount.Data());
  hNonPrimNDF_PU         -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimNDF_PU         -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimQuality_PU     -> SetMarkerColor(fColNoPr);
  hNonPrimQuality_PU     -> SetMarkerStyle(fMarNoPr);
  hNonPrimQuality_PU     -> SetLineColor(fColNoPr);
  hNonPrimQuality_PU     -> SetLineStyle(fLin);
  hNonPrimQuality_PU     -> SetFillColor(fColNoPr);
  hNonPrimQuality_PU     -> SetFillStyle(fFil);
  hNonPrimQuality_PU     -> SetTitleFont(FTxt);
  hNonPrimQuality_PU     -> GetXaxis() -> SetTitle(sTrkQuality.Data());
  hNonPrimQuality_PU     -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimQuality_PU     -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimQuality_PU     -> GetYaxis() -> SetTitle(sCount.Data());
  hNonPrimQuality_PU     -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimQuality_PU     -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimDCAxy_PU       -> SetMarkerColor(fColNoPr);
  hNonPrimDCAxy_PU       -> SetMarkerStyle(fMarNoPr);
  hNonPrimDCAxy_PU       -> SetLineColor(fColNoPr);
  hNonPrimDCAxy_PU       -> SetLineStyle(fLin);
  hNonPrimDCAxy_PU       -> SetFillColor(fColNoPr);
  hNonPrimDCAxy_PU       -> SetFillStyle(fFil);
  hNonPrimDCAxy_PU       -> SetTitleFont(FTxt);
  hNonPrimDCAxy_PU       -> GetXaxis() -> SetTitle(sTrkDCAxy.Data());
  hNonPrimDCAxy_PU       -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimDCAxy_PU       -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimDCAxy_PU       -> GetYaxis() -> SetTitle(sCount.Data());
  hNonPrimDCAxy_PU       -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimDCAxy_PU       -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimDCAz_PU        -> SetMarkerColor(fColNoPr);
  hNonPrimDCAz_PU        -> SetMarkerStyle(fMarNoPr);
  hNonPrimDCAz_PU        -> SetLineColor(fColNoPr);
  hNonPrimDCAz_PU        -> SetLineStyle(fLin);
  hNonPrimDCAz_PU        -> SetFillColor(fColNoPr);
  hNonPrimDCAz_PU        -> SetFillStyle(fFil);
  hNonPrimDCAz_PU        -> SetTitleFont(FTxt);
  hNonPrimDCAz_PU        -> GetXaxis() -> SetTitle(sTrkDCAz.Data());
  hNonPrimDCAz_PU        -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimDCAz_PU        -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimDCAz_PU        -> GetYaxis() -> SetTitle(sCount.Data());
  hNonPrimDCAz_PU        -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimDCAz_PU        -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimVx_PU          -> SetMarkerColor(fColNoPr);
  hNonPrimVx_PU          -> SetMarkerStyle(fMarNoPr);
  hNonPrimVx_PU          -> SetLineColor(fColNoPr);
  hNonPrimVx_PU          -> SetLineStyle(fLin);
  hNonPrimVx_PU          -> SetFillColor(fColNoPr);
  hNonPrimVx_PU          -> SetFillStyle(fFil);
  hNonPrimVx_PU          -> SetTitleFont(FTxt);
  hNonPrimVx_PU          -> GetXaxis() -> SetTitle(sTrkVx.Data());
  hNonPrimVx_PU          -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimVx_PU          -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimVx_PU          -> GetYaxis() -> SetTitle(sCount.Data());
  hNonPrimVx_PU          -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimVx_PU          -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimVy_PU          -> SetMarkerColor(fColNoPr);
  hNonPrimVy_PU          -> SetMarkerStyle(fMarNoPr);
  hNonPrimVy_PU          -> SetLineColor(fColNoPr);
  hNonPrimVy_PU          -> SetLineStyle(fLin);
  hNonPrimVy_PU          -> SetFillColor(fColNoPr);
  hNonPrimVy_PU          -> SetFillStyle(fFil);
  hNonPrimVy_PU          -> SetTitleFont(FTxt);
  hNonPrimVy_PU          -> GetXaxis() -> SetTitle(sTrkVy.Data());
  hNonPrimVy_PU          -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimVy_PU          -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimVy_PU          -> GetYaxis() -> SetTitle(sCount.Data());
  hNonPrimVy_PU          -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimVy_PU          -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimVz_PU          -> SetMarkerColor(fColNoPr);
  hNonPrimVz_PU          -> SetMarkerStyle(fMarNoPr);
  hNonPrimVz_PU          -> SetLineColor(fColNoPr);
  hNonPrimVz_PU          -> SetLineStyle(fLin);
  hNonPrimVz_PU          -> SetFillColor(fColNoPr);
  hNonPrimVz_PU          -> SetFillStyle(fFil);
  hNonPrimVz_PU          -> SetTitleFont(FTxt);
  hNonPrimVz_PU          -> GetXaxis() -> SetTitle(sTrkVz.Data());
  hNonPrimVz_PU          -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimVz_PU          -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimVz_PU          -> GetYaxis() -> SetTitle(sCount.Data());
  hNonPrimVz_PU          -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimVz_PU          -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimEta_PU         -> SetMarkerColor(fColNoPr);
  hNonPrimEta_PU         -> SetMarkerStyle(fMarNoPr);
  hNonPrimEta_PU         -> SetLineColor(fColNoPr);
  hNonPrimEta_PU         -> SetLineStyle(fLin);
  hNonPrimEta_PU         -> SetFillColor(fColNoPr);
  hNonPrimEta_PU         -> SetFillStyle(fFil);
  hNonPrimEta_PU         -> SetTitleFont(FTxt);
  hNonPrimEta_PU         -> GetXaxis() -> SetTitle(sTrkEta.Data());
  hNonPrimEta_PU         -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimEta_PU         -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimEta_PU         -> GetYaxis() -> SetTitle(sCount.Data());
  hNonPrimEta_PU         -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimEta_PU         -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPhi_PU         -> SetMarkerColor(fColNoPr);
  hNonPrimPhi_PU         -> SetMarkerStyle(fMarNoPr);
  hNonPrimPhi_PU         -> SetLineColor(fColNoPr);
  hNonPrimPhi_PU         -> SetLineStyle(fLin);
  hNonPrimPhi_PU         -> SetFillColor(fColNoPr);
  hNonPrimPhi_PU         -> SetFillStyle(fFil);
  hNonPrimPhi_PU         -> SetTitleFont(FTxt);
  hNonPrimPhi_PU         -> GetXaxis() -> SetTitle(sTrkPhi.Data());
  hNonPrimPhi_PU         -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPhi_PU         -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPhi_PU         -> GetYaxis() -> SetTitle(sCount.Data());
  hNonPrimPhi_PU         -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPhi_PU         -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPt_PU          -> SetMarkerColor(fColNoPr);
  hNonPrimPt_PU          -> SetMarkerStyle(fMarNoPr);
  hNonPrimPt_PU          -> SetLineColor(fColNoPr);
  hNonPrimPt_PU          -> SetLineStyle(fLin);
  hNonPrimPt_PU          -> SetFillColor(fColNoPr);
  hNonPrimPt_PU          -> SetFillStyle(fFil);
  hNonPrimPt_PU          -> SetTitleFont(FTxt);
  hNonPrimPt_PU          -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hNonPrimPt_PU          -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPt_PU          -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPt_PU          -> GetYaxis() -> SetTitle(sCount.Data());
  hNonPrimPt_PU          -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPt_PU          -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaNoPrDCAxy_PU     -> SetMarkerColor(fColNoPr);
  hDeltaNoPrDCAxy_PU     -> SetMarkerStyle(fMarNoPr);
  hDeltaNoPrDCAxy_PU     -> SetLineColor(fColNoPr);
  hDeltaNoPrDCAxy_PU     -> SetLineStyle(fLin);
  hDeltaNoPrDCAxy_PU     -> SetFillColor(fColNoPr);
  hDeltaNoPrDCAxy_PU     -> SetFillStyle(fFil);
  hDeltaNoPrDCAxy_PU     -> SetTitleFont(FTxt);
  hDeltaNoPrDCAxy_PU     -> GetXaxis() -> SetTitle(sDeltaDCAxy.Data());
  hDeltaNoPrDCAxy_PU     -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaNoPrDCAxy_PU     -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaNoPrDCAxy_PU     -> GetYaxis() -> SetTitle(sCount.Data());
  hDeltaNoPrDCAxy_PU     -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaNoPrDCAxy_PU     -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaNoPrDCAz_PU      -> SetMarkerColor(fColNoPr);
  hDeltaNoPrDCAz_PU      -> SetMarkerStyle(fMarNoPr);
  hDeltaNoPrDCAz_PU      -> SetLineColor(fColNoPr);
  hDeltaNoPrDCAz_PU      -> SetLineStyle(fLin);
  hDeltaNoPrDCAz_PU      -> SetFillColor(fColNoPr);
  hDeltaNoPrDCAz_PU      -> SetFillStyle(fFil);
  hDeltaNoPrDCAz_PU      -> SetTitleFont(FTxt);
  hDeltaNoPrDCAz_PU      -> GetXaxis() -> SetTitle(sDeltaDCAz.Data());
  hDeltaNoPrDCAz_PU      -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaNoPrDCAz_PU      -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaNoPrDCAz_PU      -> GetYaxis() -> SetTitle(sCount.Data());
  hDeltaNoPrDCAz_PU      -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaNoPrDCAz_PU      -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaNoPrEta_PU       -> SetMarkerColor(fColNoPr);
  hDeltaNoPrEta_PU       -> SetMarkerStyle(fMarNoPr);
  hDeltaNoPrEta_PU       -> SetLineColor(fColNoPr);
  hDeltaNoPrEta_PU       -> SetLineStyle(fLin);
  hDeltaNoPrEta_PU       -> SetFillColor(fColNoPr);
  hDeltaNoPrEta_PU       -> SetFillStyle(fFil);
  hDeltaNoPrEta_PU       -> SetTitleFont(FTxt);
  hDeltaNoPrEta_PU       -> GetXaxis() -> SetTitle(sDeltaEta.Data());
  hDeltaNoPrEta_PU       -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaNoPrEta_PU       -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaNoPrEta_PU       -> GetYaxis() -> SetTitle(sCount.Data());
  hDeltaNoPrEta_PU       -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaNoPrEta_PU       -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaNoPrEta_PU       -> SetMarkerColor(fColNoPr);
  hDeltaNoPrPhi_PU       -> SetMarkerStyle(fMarNoPr);
  hDeltaNoPrPhi_PU       -> SetLineColor(fColNoPr);
  hDeltaNoPrPhi_PU       -> SetLineStyle(fLin);
  hDeltaNoPrPhi_PU       -> SetFillColor(fColNoPr);
  hDeltaNoPrPhi_PU       -> SetFillStyle(fFil);
  hDeltaNoPrPhi_PU       -> SetTitleFont(FTxt);
  hDeltaNoPrPhi_PU       -> GetXaxis() -> SetTitle(sDeltaPhi.Data());
  hDeltaNoPrPhi_PU       -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaNoPrPhi_PU       -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaNoPrPhi_PU       -> GetYaxis() -> SetTitle(sCount.Data());
  hDeltaNoPrPhi_PU       -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaNoPrPhi_PU       -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaNoPrPt_PU        -> SetMarkerStyle(fMarNoPr);
  hDeltaNoPrPt_PU        -> SetLineColor(fColNoPr);
  hDeltaNoPrPt_PU        -> SetLineStyle(fLin);
  hDeltaNoPrPt_PU        -> SetFillColor(fColNoPr);
  hDeltaNoPrPt_PU        -> SetFillStyle(fFil);
  hDeltaNoPrPt_PU        -> SetTitleFont(FTxt);
  hDeltaNoPrPt_PU        -> GetXaxis() -> SetTitle(sDeltaPt.Data());
  hDeltaNoPrPt_PU        -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaNoPrPt_PU        -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaNoPrPt_PU        -> GetYaxis() -> SetTitle(sCount.Data());
  hDeltaNoPrPt_PU        -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaNoPrPt_PU        -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPtVsNMms_PU    -> SetMarkerColor(fColNoPr);
  hNonPrimPtVsNMms_PU    -> SetMarkerStyle(fMarNoPr);
  hNonPrimPtVsNMms_PU    -> SetLineColor(fColNoPr);
  hNonPrimPtVsNMms_PU    -> SetLineStyle(fLin);
  hNonPrimPtVsNMms_PU    -> SetFillColor(fColNoPr);
  hNonPrimPtVsNMms_PU    -> SetFillStyle(fFil);
  hNonPrimPtVsNMms_PU    -> SetTitleFont(FTxt);
  hNonPrimPtVsNMms_PU    -> GetXaxis() -> SetTitle(sTrkNMms.Data());
  hNonPrimPtVsNMms_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsNMms_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPtVsNMms_PU    -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hNonPrimPtVsNMms_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsNMms_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPtVsNMms_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hNonPrimPtVsNMms_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsNMms_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  hNonPrimPtVsNMap_PU    -> SetMarkerColor(fColNoPr);
  hNonPrimPtVsNMap_PU    -> SetMarkerStyle(fMarNoPr);
  hNonPrimPtVsNMap_PU    -> SetLineColor(fColNoPr);
  hNonPrimPtVsNMap_PU    -> SetLineStyle(fLin);
  hNonPrimPtVsNMap_PU    -> SetFillColor(fColNoPr);
  hNonPrimPtVsNMap_PU    -> SetFillStyle(fFil);
  hNonPrimPtVsNMap_PU    -> SetTitleFont(FTxt);
  hNonPrimPtVsNMap_PU    -> GetXaxis() -> SetTitle(sTrkNMap.Data());
  hNonPrimPtVsNMap_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsNMap_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPtVsNMap_PU    -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hNonPrimPtVsNMap_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsNMap_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPtVsNMap_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hNonPrimPtVsNMap_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsNMap_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  hNonPrimPtVsNInt_PU    -> SetMarkerColor(fColNoPr);
  hNonPrimPtVsNInt_PU    -> SetMarkerStyle(fMarNoPr);
  hNonPrimPtVsNInt_PU    -> SetLineColor(fColNoPr);
  hNonPrimPtVsNInt_PU    -> SetLineStyle(fLin);
  hNonPrimPtVsNInt_PU    -> SetFillColor(fColNoPr);
  hNonPrimPtVsNInt_PU    -> SetFillStyle(fFil);
  hNonPrimPtVsNInt_PU    -> SetTitleFont(FTxt);
  hNonPrimPtVsNInt_PU    -> GetXaxis() -> SetTitle(sTrkNInt.Data());
  hNonPrimPtVsNInt_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsNInt_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPtVsNInt_PU    -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hNonPrimPtVsNInt_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsNInt_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPtVsNInt_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hNonPrimPtVsNInt_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsNInt_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  hNonPrimPtVsNTpc_PU    -> SetMarkerColor(fColNoPr);
  hNonPrimPtVsNTpc_PU    -> SetMarkerStyle(fMarNoPr);
  hNonPrimPtVsNTpc_PU    -> SetLineColor(fColNoPr);
  hNonPrimPtVsNTpc_PU    -> SetLineStyle(fLin);
  hNonPrimPtVsNTpc_PU    -> SetFillColor(fColNoPr);
  hNonPrimPtVsNTpc_PU    -> SetFillStyle(fFil);
  hNonPrimPtVsNTpc_PU    -> SetTitleFont(FTxt);
  hNonPrimPtVsNTpc_PU    -> GetXaxis() -> SetTitle(sTrkNTpc.Data());
  hNonPrimPtVsNTpc_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsNTpc_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPtVsNTpc_PU    -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hNonPrimPtVsNTpc_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsNTpc_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPtVsNTpc_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hNonPrimPtVsNTpc_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsNTpc_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  hNonPrimPtVsNTot_PU    -> SetMarkerColor(fColNoPr);
  hNonPrimPtVsNTot_PU    -> SetMarkerStyle(fMarNoPr);
  hNonPrimPtVsNTot_PU    -> SetLineColor(fColNoPr);
  hNonPrimPtVsNTot_PU    -> SetLineStyle(fLin);
  hNonPrimPtVsNTot_PU    -> SetFillColor(fColNoPr);
  hNonPrimPtVsNTot_PU    -> SetFillStyle(fFil);
  hNonPrimPtVsNTot_PU    -> SetTitleFont(FTxt);
  hNonPrimPtVsNTot_PU    -> GetXaxis() -> SetTitle(sTrkNTot.Data());
  hNonPrimPtVsNTot_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsNTot_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPtVsNTot_PU    -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hNonPrimPtVsNTot_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsNTot_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPtVsNTot_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hNonPrimPtVsNTot_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsNTot_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  hNonPrimPtVsPerMms_PU  -> SetMarkerColor(fColNoPr);
  hNonPrimPtVsPerMms_PU  -> SetMarkerStyle(fMarNoPr);
  hNonPrimPtVsPerMms_PU  -> SetLineColor(fColNoPr);
  hNonPrimPtVsPerMms_PU  -> SetLineStyle(fLin);
  hNonPrimPtVsPerMms_PU  -> SetFillColor(fColNoPr);
  hNonPrimPtVsPerMms_PU  -> SetFillStyle(fFil);
  hNonPrimPtVsPerMms_PU  -> SetTitleFont(FTxt);
  hNonPrimPtVsPerMms_PU  -> GetXaxis() -> SetTitle(sPerMms.Data());
  hNonPrimPtVsPerMms_PU  -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsPerMms_PU  -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPtVsPerMms_PU  -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hNonPrimPtVsPerMms_PU  -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsPerMms_PU  -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPtVsPerMms_PU  -> GetZaxis() -> SetTitle(sCount.Data());
  hNonPrimPtVsPerMms_PU  -> GetZaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsPerMms_PU  -> GetZaxis() -> SetTitleOffset(fOffZ);
  hNonPrimPtVsPerMap_PU  -> SetMarkerColor(fColNoPr);
  hNonPrimPtVsPerMap_PU  -> SetMarkerStyle(fMarNoPr);
  hNonPrimPtVsPerMap_PU  -> SetLineColor(fColNoPr);
  hNonPrimPtVsPerMap_PU  -> SetLineStyle(fLin);
  hNonPrimPtVsPerMap_PU  -> SetFillColor(fColNoPr);
  hNonPrimPtVsPerMap_PU  -> SetFillStyle(fFil);
  hNonPrimPtVsPerMap_PU  -> SetTitleFont(FTxt);
  hNonPrimPtVsPerMap_PU  -> GetXaxis() -> SetTitle(sPerMap.Data());
  hNonPrimPtVsPerMap_PU  -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsPerMap_PU  -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPtVsPerMap_PU  -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hNonPrimPtVsPerMap_PU  -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsPerMap_PU  -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPtVsPerMap_PU  -> GetZaxis() -> SetTitle(sCount.Data());
  hNonPrimPtVsPerMap_PU  -> GetZaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsPerMap_PU  -> GetZaxis() -> SetTitleOffset(fOffZ);
  hNonPrimPtVsPerInt_PU  -> SetMarkerColor(fColNoPr);
  hNonPrimPtVsPerInt_PU  -> SetMarkerStyle(fMarNoPr);
  hNonPrimPtVsPerInt_PU  -> SetLineColor(fColNoPr);
  hNonPrimPtVsPerInt_PU  -> SetLineStyle(fLin);
  hNonPrimPtVsPerInt_PU  -> SetFillColor(fColNoPr);
  hNonPrimPtVsPerInt_PU  -> SetFillStyle(fFil);
  hNonPrimPtVsPerInt_PU  -> SetTitleFont(FTxt);
  hNonPrimPtVsPerInt_PU  -> GetXaxis() -> SetTitle(sPerInt.Data());
  hNonPrimPtVsPerInt_PU  -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsPerInt_PU  -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPtVsPerInt_PU  -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hNonPrimPtVsPerInt_PU  -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsPerInt_PU  -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPtVsPerInt_PU  -> GetZaxis() -> SetTitle(sCount.Data());
  hNonPrimPtVsPerInt_PU  -> GetZaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsPerInt_PU  -> GetZaxis() -> SetTitleOffset(fOffZ);
  hNonPrimPtVsPerTpc_PU  -> SetMarkerColor(fColNoPr);
  hNonPrimPtVsPerTpc_PU  -> SetMarkerStyle(fMarNoPr);
  hNonPrimPtVsPerTpc_PU  -> SetLineColor(fColNoPr);
  hNonPrimPtVsPerTpc_PU  -> SetLineStyle(fLin);
  hNonPrimPtVsPerTpc_PU  -> SetFillColor(fColNoPr);
  hNonPrimPtVsPerTpc_PU  -> SetFillStyle(fFil);
  hNonPrimPtVsPerTpc_PU  -> SetTitleFont(FTxt);
  hNonPrimPtVsPerTpc_PU  -> GetXaxis() -> SetTitle(sPerTpc.Data());
  hNonPrimPtVsPerTpc_PU  -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsPerTpc_PU  -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPtVsPerTpc_PU  -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hNonPrimPtVsPerTpc_PU  -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsPerTpc_PU  -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPtVsPerTpc_PU  -> GetZaxis() -> SetTitle(sCount.Data());
  hNonPrimPtVsPerTpc_PU  -> GetZaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsPerTpc_PU  -> GetZaxis() -> SetTitleOffset(fOffZ);
  hNonPrimPtVsPerTot_PU  -> SetMarkerColor(fColNoPr);
  hNonPrimPtVsPerTot_PU  -> SetMarkerStyle(fMarNoPr);
  hNonPrimPtVsPerTot_PU  -> SetLineColor(fColNoPr);
  hNonPrimPtVsPerTot_PU  -> SetLineStyle(fLin);
  hNonPrimPtVsPerTot_PU  -> SetFillColor(fColNoPr);
  hNonPrimPtVsPerTot_PU  -> SetFillStyle(fFil);
  hNonPrimPtVsPerTot_PU  -> SetTitleFont(FTxt);
  hNonPrimPtVsPerTot_PU  -> GetXaxis() -> SetTitle(sPerTot.Data());
  hNonPrimPtVsPerTot_PU  -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsPerTot_PU  -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPtVsPerTot_PU  -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hNonPrimPtVsPerTot_PU  -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsPerTot_PU  -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPtVsPerTot_PU  -> GetZaxis() -> SetTitle(sCount.Data());
  hNonPrimPtVsPerTot_PU  -> GetZaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsPerTot_PU  -> GetZaxis() -> SetTitleOffset(fOffZ);
  hNonPrimPtVsChi2_PU    -> SetMarkerColor(fColNoPr);
  hNonPrimPtVsChi2_PU    -> SetMarkerStyle(fMarNoPr);
  hNonPrimPtVsChi2_PU    -> SetLineColor(fColNoPr);
  hNonPrimPtVsChi2_PU    -> SetLineStyle(fLin);
  hNonPrimPtVsChi2_PU    -> SetFillColor(fColNoPr);
  hNonPrimPtVsChi2_PU    -> SetFillStyle(fFil);
  hNonPrimPtVsChi2_PU    -> SetTitleFont(FTxt);
  hNonPrimPtVsChi2_PU    -> GetXaxis() -> SetTitle(sTrkChi2.Data());
  hNonPrimPtVsChi2_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsChi2_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPtVsChi2_PU    -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hNonPrimPtVsChi2_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsChi2_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPtVsChi2_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hNonPrimPtVsChi2_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsChi2_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  hNonPrimPtVsNDF_PU     -> SetMarkerColor(fColNoPr);
  hNonPrimPtVsNDF_PU     -> SetMarkerStyle(fMarNoPr);
  hNonPrimPtVsNDF_PU     -> SetLineColor(fColNoPr);
  hNonPrimPtVsNDF_PU     -> SetLineStyle(fLin);
  hNonPrimPtVsNDF_PU     -> SetFillColor(fColNoPr);
  hNonPrimPtVsNDF_PU     -> SetFillStyle(fFil);
  hNonPrimPtVsNDF_PU     -> SetTitleFont(FTxt);
  hNonPrimPtVsNDF_PU     -> GetXaxis() -> SetTitle(sTrkNDF.Data());
  hNonPrimPtVsNDF_PU     -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsNDF_PU     -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPtVsNDF_PU     -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hNonPrimPtVsNDF_PU     -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsNDF_PU     -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPtVsNDF_PU     -> GetZaxis() -> SetTitle(sCount.Data());
  hNonPrimPtVsNDF_PU     -> GetZaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsNDF_PU     -> GetZaxis() -> SetTitleOffset(fOffZ);
  hNonPrimPtVsQuality_PU -> SetMarkerColor(fColNoPr);
  hNonPrimPtVsQuality_PU -> SetMarkerStyle(fMarNoPr);
  hNonPrimPtVsQuality_PU -> SetLineColor(fColNoPr);
  hNonPrimPtVsQuality_PU -> SetLineStyle(fLin);
  hNonPrimPtVsQuality_PU -> SetFillColor(fColNoPr);
  hNonPrimPtVsQuality_PU -> SetFillStyle(fFil);
  hNonPrimPtVsQuality_PU -> SetTitleFont(FTxt);
  hNonPrimPtVsQuality_PU -> GetXaxis() -> SetTitle(sTrkQuality.Data());
  hNonPrimPtVsQuality_PU -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsQuality_PU -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPtVsQuality_PU -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hNonPrimPtVsQuality_PU -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsQuality_PU -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPtVsQuality_PU -> GetZaxis() -> SetTitle(sCount.Data());
  hNonPrimPtVsQuality_PU -> GetZaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsQuality_PU -> GetZaxis() -> SetTitleOffset(fOffZ);
  hNonPrimPtVsDCAxy_PU   -> SetMarkerColor(fColNoPr);
  hNonPrimPtVsDCAxy_PU   -> SetMarkerStyle(fMarNoPr);
  hNonPrimPtVsDCAxy_PU   -> SetLineColor(fColNoPr);
  hNonPrimPtVsDCAxy_PU   -> SetLineStyle(fLin);
  hNonPrimPtVsDCAxy_PU   -> SetFillColor(fColNoPr);
  hNonPrimPtVsDCAxy_PU   -> SetFillStyle(fFil);
  hNonPrimPtVsDCAxy_PU   -> SetTitleFont(FTxt);
  hNonPrimPtVsDCAxy_PU   -> GetXaxis() -> SetTitle(sTrkDCAxy.Data());
  hNonPrimPtVsDCAxy_PU   -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsDCAxy_PU   -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPtVsDCAxy_PU   -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hNonPrimPtVsDCAxy_PU   -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsDCAxy_PU   -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPtVsDCAxy_PU   -> GetZaxis() -> SetTitle(sCount.Data());
  hNonPrimPtVsDCAxy_PU   -> GetZaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsDCAxy_PU   -> GetZaxis() -> SetTitleOffset(fOffZ);
  hNonPrimPtVsDCAz_PU    -> SetMarkerColor(fColNoPr);
  hNonPrimPtVsDCAz_PU    -> SetMarkerStyle(fMarNoPr);
  hNonPrimPtVsDCAz_PU    -> SetLineColor(fColNoPr);
  hNonPrimPtVsDCAz_PU    -> SetLineStyle(fLin);
  hNonPrimPtVsDCAz_PU    -> SetFillColor(fColNoPr);
  hNonPrimPtVsDCAz_PU    -> SetFillStyle(fFil);
  hNonPrimPtVsDCAz_PU    -> SetTitleFont(FTxt);
  hNonPrimPtVsDCAz_PU    -> GetXaxis() -> SetTitle(sTrkDCAz.Data());
  hNonPrimPtVsDCAz_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsDCAz_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hNonPrimPtVsDCAz_PU    -> GetYaxis() -> SetTitle(sTrkPt.Data());
  hNonPrimPtVsDCAz_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsDCAz_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hNonPrimPtVsDCAz_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hNonPrimPtVsDCAz_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hNonPrimPtVsDCAz_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaDCAxyVsNoPrPt_PU -> SetMarkerColor(fColNoPr);
  hDeltaDCAxyVsNoPrPt_PU -> SetMarkerStyle(fMarNoPr);
  hDeltaDCAxyVsNoPrPt_PU -> SetLineColor(fColNoPr);
  hDeltaDCAxyVsNoPrPt_PU -> SetLineStyle(fLin);
  hDeltaDCAxyVsNoPrPt_PU -> SetFillColor(fColNoPr);
  hDeltaDCAxyVsNoPrPt_PU -> SetFillStyle(fFil);
  hDeltaDCAxyVsNoPrPt_PU -> SetTitleFont(FTxt);
  hDeltaDCAxyVsNoPrPt_PU -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hDeltaDCAxyVsNoPrPt_PU -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaDCAxyVsNoPrPt_PU -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaDCAxyVsNoPrPt_PU -> GetYaxis() -> SetTitle(sDeltaDCAxy.Data());
  hDeltaDCAxyVsNoPrPt_PU -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaDCAxyVsNoPrPt_PU -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaDCAxyVsNoPrPt_PU -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaDCAxyVsNoPrPt_PU -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaDCAxyVsNoPrPt_PU -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaDCAzVsNoPrPt_PU  -> SetMarkerColor(fColNoPr);
  hDeltaDCAzVsNoPrPt_PU  -> SetMarkerStyle(fMarNoPr);
  hDeltaDCAzVsNoPrPt_PU  -> SetLineColor(fColNoPr);
  hDeltaDCAzVsNoPrPt_PU  -> SetLineStyle(fLin);
  hDeltaDCAzVsNoPrPt_PU  -> SetFillColor(fColNoPr);
  hDeltaDCAzVsNoPrPt_PU  -> SetFillStyle(fFil);
  hDeltaDCAzVsNoPrPt_PU  -> SetTitleFont(FTxt);
  hDeltaDCAzVsNoPrPt_PU  -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hDeltaDCAzVsNoPrPt_PU  -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaDCAzVsNoPrPt_PU  -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaDCAzVsNoPrPt_PU  -> GetYaxis() -> SetTitle(sDeltaDCAz.Data());
  hDeltaDCAzVsNoPrPt_PU  -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaDCAzVsNoPrPt_PU  -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaDCAzVsNoPrPt_PU  -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaDCAzVsNoPrPt_PU  -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaDCAzVsNoPrPt_PU  -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaEtaVsNoPrPt_PU   -> SetMarkerColor(fColNoPr);
  hDeltaEtaVsNoPrPt_PU   -> SetMarkerStyle(fMarNoPr);
  hDeltaEtaVsNoPrPt_PU   -> SetLineColor(fColNoPr);
  hDeltaEtaVsNoPrPt_PU   -> SetLineStyle(fLin);
  hDeltaEtaVsNoPrPt_PU   -> SetFillColor(fColNoPr);
  hDeltaEtaVsNoPrPt_PU   -> SetFillStyle(fFil);
  hDeltaEtaVsNoPrPt_PU   -> SetTitleFont(FTxt);
  hDeltaEtaVsNoPrPt_PU   -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hDeltaEtaVsNoPrPt_PU   -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaEtaVsNoPrPt_PU   -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaEtaVsNoPrPt_PU   -> GetYaxis() -> SetTitle(sDeltaEta.Data());
  hDeltaEtaVsNoPrPt_PU   -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaEtaVsNoPrPt_PU   -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaEtaVsNoPrPt_PU   -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaEtaVsNoPrPt_PU   -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaEtaVsNoPrPt_PU   -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaEtaVsNoPrPt_PU   -> SetMarkerColor(fColNoPr);
  hDeltaPhiVsNoPrPt_PU   -> SetMarkerStyle(fMarNoPr);
  hDeltaPhiVsNoPrPt_PU   -> SetLineColor(fColNoPr);
  hDeltaPhiVsNoPrPt_PU   -> SetLineStyle(fLin);
  hDeltaPhiVsNoPrPt_PU   -> SetFillColor(fColNoPr);
  hDeltaPhiVsNoPrPt_PU   -> SetFillStyle(fFil);
  hDeltaPhiVsNoPrPt_PU   -> SetTitleFont(FTxt);
  hDeltaPhiVsNoPrPt_PU   -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hDeltaPhiVsNoPrPt_PU   -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaPhiVsNoPrPt_PU   -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaPhiVsNoPrPt_PU   -> GetYaxis() -> SetTitle(sDeltaPhi.Data());
  hDeltaPhiVsNoPrPt_PU   -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaPhiVsNoPrPt_PU   -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaPhiVsNoPrPt_PU   -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaPhiVsNoPrPt_PU   -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaPhiVsNoPrPt_PU   -> GetZaxis() -> SetTitleOffset(fOffZ);
  hDeltaEtaVsNoPrPt_PU   -> SetMarkerColor(fColNoPr);
  hDeltaPtVsNoPrPt_PU    -> SetMarkerStyle(fMarNoPr);
  hDeltaPtVsNoPrPt_PU    -> SetLineColor(fColNoPr);
  hDeltaPtVsNoPrPt_PU    -> SetLineStyle(fLin);
  hDeltaPtVsNoPrPt_PU    -> SetFillColor(fColNoPr);
  hDeltaPtVsNoPrPt_PU    -> SetFillStyle(fFil);
  hDeltaPtVsNoPrPt_PU    -> SetTitleFont(FTxt);
  hDeltaPtVsNoPrPt_PU    -> GetXaxis() -> SetTitle(sTrkPt.Data());
  hDeltaPtVsNoPrPt_PU    -> GetXaxis() -> SetTitleFont(FTxt);
  hDeltaPtVsNoPrPt_PU    -> GetXaxis() -> SetTitleOffset(fOffX);
  hDeltaPtVsNoPrPt_PU    -> GetYaxis() -> SetTitle(sDeltaPt.Data());
  hDeltaPtVsNoPrPt_PU    -> GetYaxis() -> SetTitleFont(FTxt);
  hDeltaPtVsNoPrPt_PU    -> GetYaxis() -> SetTitleOffset(fOffY);
  hDeltaPtVsNoPrPt_PU    -> GetZaxis() -> SetTitle(sCount.Data());
  hDeltaPtVsNoPrPt_PU    -> GetZaxis() -> SetTitleFont(FTxt);
  hDeltaPtVsNoPrPt_PU    -> GetZaxis() -> SetTitleOffset(fOffZ);
  cout << "      Set histogram styles." << endl;

}  // end 'SetHistStyles()'



void STrackCutStudy::CreatePlots(){

  // text parameters
  const TString sLeg[NTyp]   = {"Tracks", "Truth", "Weird Tracks", "Normal Tracks", "Pileup", "Pileup #bf{[gprimary == 1]}", "Pileup #bf{[gprimary != 1]}"};
  const TString sTxtEO[NTxt] = {"#bf{#it{sPHENIX}} Simulation", "single #pi^{-}, p_{T} #in (0, 20) GeV/c", "#bf{Embedded Only Tracks}"};
  const TString sTxtPU[NTxt] = {"#bf{#it{sPHENIX}} Simulation", "0-20 fm Hijing, 50 kHz pileup", "#bf{With Pileup Tracks}"};

  // create legend and text box
  const UInt_t  fAln        = 12;
  const UInt_t  fFilL       = 0;
  const UInt_t  fLinL       = 1;
  const UInt_t  fColFilL    = 0;
  const UInt_t  fColLinL    = 0;
  const UInt_t  fColTxtL    = 1;
  const UInt_t  nObjL       = NTyp - 5;
  const UInt_t  nObjW       = NTyp - 3;
  const UInt_t  nObjN       = NTyp - 4;
  const UInt_t  nObjP       = NTyp - 3;
  const UInt_t  nObjT       = NTxt;
  const Float_t hObj        = 0.05;
  const Float_t hObjL       = nObjL * hObj;
  const Float_t hObjW       = nObjW * hObj;
  const Float_t hObjN       = nObjN * hObj;
  const Float_t hObjP       = nObjP * hObj;
  const Float_t hObjT       = nObjT * hObj;
  const Float_t yLeg        = 0.1 + hObjL;
  const Float_t yOdd        = 0.1 + hObjW;
  const Float_t yNon        = 0.1 + hObjN;
  const Float_t yPil        = 0.1 + hObjP;
  const Float_t yTxt        = 0.1 + hObjT;
  const Float_t legXY[NVtx] = {0.1, 0.1, 0.3, yLeg};
  const Float_t oddXY[NVtx] = {0.1, 0.1, 0.3, yOdd};
  const Float_t nonXY[NVtx] = {0.1, 0.1, 0.3, yNon};
  const Float_t txtXY[NVtx] = {0.3, 0.1, 0.5, yTxt};
  const Float_t pilXY[NVtx] = {0.1, 0.1, 0.3, yPil};

  TLegend *leg = new TLegend(legXY[0], legXY[1], legXY[2], legXY[3]);
  leg -> SetFillColor(fColFilL);
  leg -> SetFillStyle(fFilL);
  leg -> SetLineColor(fColLinL);
  leg -> SetLineStyle(fLinL);
  leg -> SetTextFont(FTxt);
  leg -> SetTextAlign(fAln);
  leg -> SetTextColor(fColTxtL);
  leg -> AddEntry(hTrackPt, sLeg[0].Data(), "pf");
  leg -> AddEntry(hTruthPt, sLeg[1].Data(), "pf");

  TLegend *odd = new TLegend(oddXY[0], oddXY[1], oddXY[2], oddXY[3]);
  odd -> SetFillColor(fColFilL);
  odd -> SetFillStyle(fFilL);
  odd -> SetLineColor(fColLinL);
  odd -> SetLineStyle(fLinL);
  odd -> SetTextFont(FTxt);
  odd -> SetTextAlign(fAln);
  odd -> SetTextColor(fColTxtL);
  odd -> AddEntry(hTrackPt,  sLeg[0].Data(), "pf");
  odd -> AddEntry(hTruthPt,  sLeg[1].Data(), "pf");
  odd -> AddEntry(hWeirdPt,  sLeg[2].Data(), "pf");
  odd -> AddEntry(hNormalPt, sLeg[3].Data(), "pf");

  TLegend *oddNT = new TLegend(nonXY[0], nonXY[1], nonXY[2], nonXY[3]);
  oddNT -> SetFillColor(fColFilL);
  oddNT -> SetFillStyle(fFilL);
  oddNT -> SetLineColor(fColLinL);
  oddNT -> SetLineStyle(fLinL);
  oddNT -> SetTextFont(FTxt);
  oddNT -> SetTextAlign(fAln);
  oddNT -> SetTextColor(fColTxtL);
  oddNT -> AddEntry(hTrackPt,  sLeg[0].Data(), "pf");
  oddNT -> AddEntry(hWeirdPt,  sLeg[2].Data(), "pf");
  oddNT -> AddEntry(hNormalPt, sLeg[3].Data(), "pf");

  TLegend *pil = new TLegend(pilXY[0], pilXY[1], pilXY[2], pilXY[3]);
  pil -> SetFillColor(fColFilL);
  pil -> SetFillStyle(fFilL);
  pil -> SetLineColor(fColLinL);
  pil -> SetLineStyle(fLinL);
  pil -> SetTextFont(FTxt);
  pil -> SetTextAlign(fAln);
  pil -> SetTextColor(fColTxtL);
  pil -> AddEntry(hTrackPt_PU,   sLeg[4].Data(), "pf");
  pil -> AddEntry(hPrimaryPt_PU, sLeg[5].Data(), "pf");
  pil -> AddEntry(hNonPrimPt_PU, sLeg[6].Data(), "pf");

  TPaveText *txtEO = new TPaveText(txtXY[0], txtXY[1], txtXY[2], txtXY[3], "NDC NB");
  txtEO -> SetFillColor(fColFilL);
  txtEO -> SetFillStyle(fFilL);
  txtEO -> SetLineColor(fColLinL);
  txtEO -> SetLineStyle(fLinL);
  txtEO -> SetTextFont(FTxt);
  txtEO -> SetTextAlign(fAln);
  txtEO -> SetTextColor(fColTxtL);
  for (UInt_t iTxt = 0; iTxt < NTxt; iTxt++) {
    txtEO -> AddText(sTxtEO[iTxt].Data());
  }

  TPaveText *txtPU = new TPaveText(txtXY[0], txtXY[1], txtXY[2], txtXY[3], "NDC NB");
  txtPU -> SetFillColor(fColFilL);
  txtPU -> SetFillStyle(fFilL);
  txtPU -> SetLineColor(fColLinL);
  txtPU -> SetLineStyle(fLinL);
  txtPU -> SetTextFont(FTxt);
  txtPU -> SetTextAlign(fAln);
  txtPU -> SetTextColor(fColTxtL);
  for (UInt_t iTxt = 0; iTxt < NTxt; iTxt++) {
    txtPU -> AddText(sTxtPU[iTxt].Data());
  }
  cout << "      Made legend and text boxes." << endl;

  // create plots
  const UInt_t  fWidth1P(750);
  const UInt_t  fWidth2P(1500);
  const UInt_t  fHeight1P(750);
  const UInt_t  fHeight2P(750);
  const Float_t padXY[NPanel][NVtx]        = {{0., 0., 0.5, 1.}, {0.5, 0., 1., 1.}};
  const TString sOneVsTwoDimPanels[NPanel] = {"pOneDim", "pTwoDim"};
  const TString sTrkVsTruPanels[NPanel]    = {"pTrack",  "pTruth"};

  // make embed-only 1d plots
  TCanvas *cNMms = new TCanvas("cNMms", "", fWidth1P, fHeight1P);
  cNMms       -> cd();
  hTrackNMms  -> Draw();
  hTruthNMms  -> Draw("same");
  hWeirdNMms  -> Draw("same");
  hNormalNMms -> Draw("same");
  odd         -> Draw();
  txtEO       -> Draw();
  fOut        -> cd();
  cNMms       -> Write();
  cNMms       -> Close();

  // make embed-only 1d plots
  TCanvas *cNMap = new TCanvas("cNMap", "", fWidth1P, fHeight1P);
  cNMap       -> cd();
  hTrackNMap  -> Draw();
  hTruthNMap  -> Draw("same");
  hWeirdNMap  -> Draw("same");
  hNormalNMap -> Draw("same");
  odd         -> Draw();
  txtEO       -> Draw();
  fOut        -> cd();
  cNMap       -> Write();
  cNMap       -> Close();

  TCanvas *cNInt = new TCanvas("cNInt", "", fWidth1P, fHeight1P);
  cNInt       -> cd();
  hTrackNInt  -> Draw();
  hTruthNInt  -> Draw("same");
  hWeirdNInt  -> Draw("same");
  hNormalNInt -> Draw("same");
  odd         -> Draw();
  txtEO       -> Draw();
  fOut        -> cd();
  cNInt       -> Write();
  cNInt       -> Close();

  TCanvas *cNTpc = new TCanvas("cNTpc", "", fWidth1P, fHeight1P);
  cNTpc       -> cd();
  hTrackNTpc  -> Draw();
  hTruthNTpc  -> Draw("same");
  hWeirdNTpc  -> Draw("same");
  hNormalNTpc -> Draw("same");
  odd         -> Draw();
  txtEO       -> Draw();
  fOut        -> cd();
  cNTpc       -> Write();
  cNTpc       -> Close();

  TCanvas *cNTot = new TCanvas("cNTot", "", fWidth1P, fHeight1P);
  cNTot       -> cd();
  hTrackNTot  -> Draw();
  hTruthNTot  -> Draw("same");
  hWeirdNTot  -> Draw("same");
  hNormalNTot -> Draw("same");
  odd         -> Draw();
  txtEO       -> Draw();
  fOut        -> cd();
  cNTot       -> Write();
  cNTot       -> Close();

  TCanvas *cChi21D = new TCanvas("cChi21D", "", fWidth1P, fHeight1P);
  cChi21D     -> cd();
  hTrackChi2  -> Draw();
  hWeirdChi2  -> Draw("same");
  hNormalChi2 -> Draw("same");
  oddNT       -> Draw();
  txtEO       -> Draw();
  fOut        -> cd();
  cChi21D     -> Write();
  cChi21D     -> Close();

  TCanvas *cNDF1D = new TCanvas("cNDF1D", "", fWidth1P, fHeight1P);
  cNDF1D     -> cd();
  hTrackNDF  -> Draw();
  hWeirdNDF  -> Draw("same");
  hNormalNDF -> Draw("same");
  oddNT      -> Draw();
  txtEO      -> Draw();
  fOut       -> cd();
  cNDF1D     -> Write();
  cNDF1D     -> Close();

  TCanvas *cQuality1D = new TCanvas("cQuality1D", "", fWidth1P, fHeight1P);
  cQuality1D     -> cd();
  hTrackQuality  -> Draw();
  hWeirdQuality  -> Draw("same");
  hNormalQuality -> Draw("same");
  oddNT          -> Draw();
  txtEO          -> Draw();
  fOut           -> cd();
  cQuality1D     -> Write();
  cQuality1D     -> Close();

  TCanvas *cDcaXY1D = new TCanvas("cDcaXY1D", "", fWidth1P, fHeight1P);
  cDcaXY1D     -> cd();
  hTrackDCAxy  -> Draw();
  hWeirdDCAxy  -> Draw("same");
  hNormalDCAxy -> Draw("same");
  odd          -> Draw();
  txtEO        -> Draw();
  fOut         -> cd();
  cDcaXY1D     -> Write();
  cDcaXY1D     -> Close();

  TCanvas *cDcaZ1D = new TCanvas("cDcaZ1D", "", fWidth1P, fHeight1P);
  cDcaZ1D     -> cd();
  hTrackDCAz  -> Draw();
  hWeirdDCAz  -> Draw("same");
  hNormalDCAz -> Draw("same");
  oddNT       -> Draw();
  txtEO       -> Draw();
  fOut        -> cd();
  cDcaZ1D     -> Write();
  cDcaZ1D     -> Close();

  TCanvas *cVtxX = new TCanvas("cVtxX", "", fWidth1P, fHeight1P);
  cVtxX     -> cd();
  hTrackVx  -> Draw();
  hTruthVx  -> Draw("same");
  hWeirdVx  -> Draw("same");
  hNormalVx -> Draw("same");
  odd       -> Draw();
  txtEO     -> Draw();
  fOut      -> cd();
  cVtxX     -> Write();
  cVtxX     -> Close();

  TCanvas *cVtxY = new TCanvas("cVtxY", "", fWidth1P, fHeight1P);
  cVtxY     -> cd();
  hTrackVy  -> Draw();
  hTruthVy  -> Draw("same");
  hWeirdVy  -> Draw("same");
  hNormalVy -> Draw("same");
  odd       -> Draw();
  txtEO     -> Draw();
  fOut      -> cd();
  cVtxY     -> Write();
  cVtxY     -> Close();

  TCanvas *cVtxZ = new TCanvas("cVtxZ", "", fWidth1P, fHeight1P);
  cVtxZ     -> cd();
  hTrackVz  -> Draw();
  hTruthVz  -> Draw("same");
  hWeirdVz  -> Draw("same");
  hNormalVz -> Draw("same");
  odd       -> Draw();
  txtEO     -> Draw();
  fOut      -> cd();
  cVtxZ     -> Write();
  cVtxZ     -> Close();

  TCanvas *cEta = new TCanvas("cEta", "", fWidth1P, fHeight1P);
  cEta       -> cd();
  hTrackEta  -> Draw();
  hTruthEta  -> Draw("same");
  hWeirdEta  -> Draw("same");
  hNormalEta -> Draw("same");
  oddNT      -> Draw();
  txtEO      -> Draw();
  fOut       -> cd();
  cEta       -> Write();
  cEta       -> Close();
  
  TCanvas *cPhi = new TCanvas("cPhi", "", fWidth1P, fHeight1P);
  cPhi       -> cd();
  hTrackPhi  -> Draw();
  hTruthPhi  -> Draw("same");
  hWeirdPhi  -> Draw("same");
  hNormalPhi -> Draw("same");
  odd        -> Draw();
  txtEO      -> Draw();
  fOut       -> cd();
  cPhi       -> Write();
  cPhi       -> Close();

  TCanvas *cPt = new TCanvas("cPt", "", fWidth1P, fHeight1P);
  cPt       -> cd();
  hTrackPt  -> Draw();
  hTruthPt  -> Draw("same");
  hWeirdPt  -> Draw("same");
  hNormalPt -> Draw("same");
  odd       -> Draw();
  txtEO     -> Draw();
  fOut      -> cd();
  cPt       -> Write();
  cPt       -> Close();

  TCanvas *cDeltaDcaXY = new TCanvas("cDeltaDcaXY", "", fWidth1P, fHeight1P);
  cDeltaDcaXY       -> cd();
  hDeltaDCAxy       -> Draw();
  hWeirdDeltaDCAxy  -> Draw("same");
  hNormalDeltaDCAxy -> Draw("same");
  oddNT             -> Draw();
  txtEO             -> Draw();
  fOut              -> cd();
  cDeltaDcaXY       -> Write();
  cDeltaDcaXY       -> Close();

  TCanvas *cDeltaDcaZ = new TCanvas("cDeltaDcaZ", "", fWidth1P, fHeight1P);
  cDeltaDcaZ       -> cd();
  hDeltaDCAz       -> Draw();
  hWeirdDeltaDCAz  -> Draw("same");
  hNormalDeltaDCAz -> Draw("same");
  oddNT            -> Draw();
  txtEO            -> Draw();
  fOut             -> cd();
  cDeltaDcaZ       -> Write();
  cDeltaDcaZ       -> Close();

  TCanvas *cDeltaEta = new TCanvas("cDeltaEta", "", fWidth1P, fHeight1P);
  cDeltaEta       -> cd();
  hDeltaEta       -> Draw();
  hWeirdDeltaEta  -> Draw("same");
  hNormalDeltaEta -> Draw("same");
  oddNT           -> Draw();
  txtEO           -> Draw();
  fOut            -> cd();
  cDeltaEta       -> Write();
  cDeltaEta       -> Close();
  
  TCanvas *cDeltaPhi = new TCanvas("cDeltaPhi", "", fWidth1P, fHeight1P);
  cDeltaPhi       -> cd();
  hDeltaPhi       -> Draw();
  hWeirdDeltaPhi  -> Draw("same");
  hNormalDeltaPhi -> Draw("same");
  oddNT           -> Draw();
  txtEO           -> Draw();
  fOut            -> cd();
  cDeltaPhi       -> Write();
  cDeltaPhi       -> Close();

  TCanvas *cDeltaPt = new TCanvas("cDeltaPt", "", fWidth1P, fHeight1P);
  cDeltaPt       -> cd();
  hDeltaPt       -> Draw();
  hWeirdDeltaPt  -> Draw("same");
  hNormalDeltaPt -> Draw("same");
  oddNT          -> Draw();
  txtEO          -> Draw();
  fOut           -> cd();
  cDeltaPt       -> Write();
  cDeltaPt       -> Close();

  TCanvas *cDiffVx = new TCanvas("cDiffVx", "", fWidth1P, fHeight1P);
  cDiffVx       -> cd();
  hTruthVxDiff  -> Draw();
  hWeirdVxDiff  -> Draw("same");
  hNormalVxDiff -> Draw("same");
  oddNT         -> Draw();
  txtEO         -> Draw();
  fOut          -> cd();
  cDiffVx       -> Write();
  cDiffVx       -> Close();

  TCanvas *cDiffVy = new TCanvas("cDiffVy", "", fWidth1P, fHeight1P);
  cDiffVy       -> cd();
  hTruthVyDiff  -> Draw();
  hWeirdVyDiff  -> Draw("same");
  hNormalVyDiff -> Draw("same");
  oddNT         -> Draw();
  txtEO         -> Draw();
  fOut          -> cd();
  cDiffVy       -> Write();
  cDiffVy       -> Close();

  TCanvas *cDiffVz = new TCanvas("cDiffVz", "", fWidth1P, fHeight1P);
  cDiffVz       -> cd();
  hTruthVzDiff  -> Draw();
  hWeirdVzDiff  -> Draw("same");
  hNormalVzDiff -> Draw("same");
  oddNT         -> Draw();
  txtEO         -> Draw();
  fOut          -> cd();
  cDiffVz       -> Write();
  cDiffVz       -> Close();

  // make embed-only 2d plots
  TCanvas *cPerMms   = new TCanvas("cPerMms", "", fWidth2P, fHeight2P);
  TPad    *pPerMms1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pPerMms2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cPerMms          -> cd();
  pPerMms1D        -> Draw();
  pPerMms2D        -> Draw();
  pPerMms1D        -> cd();
  hTrackPerMms     -> Draw();
  hWeirdPerMms     -> Draw("same");
  hNormalPerMms    -> Draw("same");
  oddNT            -> Draw();
  txtEO            -> Draw();
  pPerMms2D        -> cd();
  hTrackPtVsPerMms -> Draw("colz");
  fOut             -> cd();
  cPerMms          -> Write();
  cPerMms          -> Close();

  TCanvas *cPerMap   = new TCanvas("cPerMap", "", fWidth2P, fHeight2P);
  TPad    *pPerMap1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pPerMap2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cPerMap          -> cd();
  pPerMap1D        -> Draw();
  pPerMap2D        -> Draw();
  pPerMap1D        -> cd();
  hTrackPerMap     -> Draw();
  hWeirdPerMap     -> Draw("same");
  hNormalPerMap    -> Draw("same");
  oddNT            -> Draw();
  txtEO            -> Draw();
  pPerMap2D        -> cd();
  hTrackPtVsPerMap -> Draw("colz");
  fOut             -> cd();
  cPerMap          -> Write();
  cPerMap          -> Close();

  TCanvas *cPerInt   = new TCanvas("cPerInt", "", fWidth2P, fHeight2P);
  TPad    *pPerInt1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pPerInt2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cPerInt          -> cd();
  pPerInt1D        -> Draw();
  pPerInt2D        -> Draw();
  pPerInt1D        -> cd();
  hTrackPerInt     -> Draw();
  hWeirdPerInt     -> Draw("same");
  hNormalPerInt    -> Draw("same");
  oddNT            -> Draw();
  txtEO            -> Draw();
  pPerInt2D        -> cd();
  hTrackPtVsPerInt -> Draw("colz");
  fOut             -> cd();
  cPerInt          -> Write();
  cPerInt          -> Close();

  TCanvas *cPerTpc   = new TCanvas("cPerTpc", "", fWidth2P, fHeight2P);
  TPad    *pPerTpc1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pPerTpc2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cPerTpc          -> cd();
  pPerTpc1D        -> Draw();
  pPerTpc2D        -> Draw();
  pPerTpc1D        -> cd();
  hTrackPerTpc     -> Draw();
  hWeirdPerTpc     -> Draw("same");
  hNormalPerTpc    -> Draw("same");
  oddNT            -> Draw();
  txtEO            -> Draw();
  pPerTpc2D        -> cd();
  hTrackPtVsPerTpc -> Draw("colz");
  fOut             -> cd();
  cPerTpc          -> Write();
  cPerTpc          -> Close();

  TCanvas *cPerTot   = new TCanvas("cPerTot", "", fWidth2P, fHeight2P);
  TPad    *pPerTot1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pPerTot2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cPerTot          -> cd();
  pPerTot1D        -> Draw();
  pPerTot2D        -> Draw();
  pPerTot1D        -> cd();
  hTrackPerTot     -> Draw();
  hWeirdPerTot     -> Draw("same");
  hNormalPerTot    -> Draw("same");
  oddNT            -> Draw();
  txtEO            -> Draw();
  pPerTot2D        -> cd();
  hTrackPtVsPerTot -> Draw("colz");
  fOut             -> cd();
  cPerTot          -> Write();
  cPerTot          -> Close();

  TCanvas *cChi2   = new TCanvas("cChi2", "", fWidth2P, fHeight2P);
  TPad    *pChi21D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pChi22D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cChi2          -> cd();
  pChi21D        -> Draw();
  pChi22D        -> Draw();
  pChi21D        -> cd();
  hTrackChi2     -> Draw();
  hWeirdChi2     -> Draw("same");
  hNormalChi2    -> Draw("same");
  oddNT          -> Draw();
  txtEO          -> Draw();
  pChi22D        -> cd();
  hTrackPtVsChi2 -> Draw("colz");
  fOut           -> cd();
  cChi2          -> Write();
  cChi2          -> Close();

  TCanvas *cQuality   = new TCanvas("cQuality", "", fWidth2P, fHeight2P);
  TPad    *pQuality1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pQuality2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cQuality          -> cd();
  pQuality1D        -> Draw();
  pQuality2D        -> Draw();
  pQuality1D        -> cd();
  hTrackQuality     -> Draw();
  hWeirdQuality     -> Draw("same");
  hNormalQuality    -> Draw("same");
  oddNT             -> Draw();
  txtEO             -> Draw();
  pQuality2D        -> cd();
  hTrackPtVsQuality -> Draw("colz");
  fOut              -> cd();
  cQuality          -> Write();
  cQuality          -> Close();

  TCanvas *cDCAxy   = new TCanvas("cDCAxy", "", fWidth2P, fHeight2P);
  TPad    *pDCAxy1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDCAxy2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDCAxy          -> cd();
  pDCAxy1D        -> Draw();
  pDCAxy2D        -> Draw();
  pDCAxy1D        -> cd();
  hTrackDCAxy     -> Draw();
  hWeirdDCAxy     -> Draw("same");
  hNormalDCAxy    -> Draw("same");
  oddNT           -> Draw();
  txtEO           -> Draw();
  pDCAxy2D        -> cd();
  hTrackPtVsDCAxy -> Draw("colz");
  fOut            -> cd();
  cDCAxy          -> Write();
  cDCAxy          -> Close();

  TCanvas *cDCAz   = new TCanvas("cDCAz", "", fWidth2P, fHeight2P);
  TPad    *pDCAz1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDCAz2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDCAz          -> cd();
  pDCAz1D        -> Draw();
  pDCAz2D        -> Draw();
  pDCAz1D        -> cd();
  hTrackDCAz     -> Draw();
  hWeirdDCAz     -> Draw("same");
  hNormalDCAz    -> Draw("same");
  oddNT          -> Draw();
  txtEO          -> Draw();
  pDCAz2D        -> cd();
  hTrackPtVsDCAz -> Draw("colz");
  fOut           -> cd();
  cDCAz          -> Write();
  cDCAz          -> Close();

  TCanvas *cDeltaDCAxyVsTrkPt   = new TCanvas("cDeltaDCAxyVsTrkPt", "", fWidth2P, fHeight2P);
  TPad    *pDeltaDCAxyVsTrkPt1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDeltaDCAxyVsTrkPt2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDeltaDCAxyVsTrkPt   -> cd();
  pDeltaDCAxyVsTrkPt1D -> Draw();
  pDeltaDCAxyVsTrkPt2D -> Draw();
  pDeltaDCAxyVsTrkPt1D -> cd();
  hDeltaDCAxy          -> Draw();
  hWeirdDeltaDCAxy     -> Draw("same");
  hNormalDeltaDCAxy    -> Draw("same");
  oddNT                -> Draw();
  txtEO                -> Draw();
  pDeltaDCAxyVsTrkPt2D -> cd();
  hDeltaDCAxyVsTrkPt   -> Draw("colz");
  fOut                 -> cd();
  cDeltaDCAxyVsTrkPt   -> Write();
  cDeltaDCAxyVsTrkPt   -> Close();

  TCanvas *cDeltaDCAzVsTrkPt   = new TCanvas("cDeltaDCAzVsTrkPt", "", fWidth2P, fHeight2P);
  TPad    *pDeltaDCAzVsTrkPt1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDeltaDCAzVsTrkPt2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDeltaDCAzVsTrkPt   -> cd();
  pDeltaDCAzVsTrkPt1D -> Draw();
  pDeltaDCAzVsTrkPt2D -> Draw();
  pDeltaDCAzVsTrkPt1D -> cd();
  hDeltaDCAz          -> Draw();
  hWeirdDeltaDCAz     -> Draw("same");
  hNormalDeltaDCAz    -> Draw("same");
  oddNT               -> Draw();
  txtEO               -> Draw();
  pDeltaDCAzVsTrkPt2D -> cd();
  hDeltaDCAzVsTrkPt   -> Draw("colz");
  fOut                -> cd();
  cDeltaDCAzVsTrkPt   -> Write();
  cDeltaDCAzVsTrkPt   -> Close();

  TCanvas *cDeltaEtaVsTrkPt   = new TCanvas("cDeltaEtaVsTrkPt", "", fWidth2P, fHeight2P);
  TPad    *pDeltaEtaVsTrkPt1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDeltaEtaVsTrkPt2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDeltaEtaVsTrkPt   -> cd();
  pDeltaEtaVsTrkPt1D -> Draw();
  pDeltaEtaVsTrkPt2D -> Draw();
  pDeltaEtaVsTrkPt1D -> cd();
  hDeltaEta          -> Draw();
  hWeirdDeltaEta     -> Draw("same");
  hNormalDeltaEta    -> Draw("same");
  oddNT              -> Draw();
  txtEO              -> Draw();
  pDeltaEtaVsTrkPt2D -> cd();
  hDeltaEtaVsTrkPt   -> Draw("colz");
  fOut               -> cd();
  cDeltaEtaVsTrkPt   -> Write();
  cDeltaEtaVsTrkPt   -> Close();

  TCanvas *cDeltaPhiVsTrkPt   = new TCanvas("cDeltaPhiVsTrkPt", "", fWidth2P, fHeight2P);
  TPad    *pDeltaPhiVsTrkPt1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDeltaPhiVsTrkPt2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDeltaPhiVsTrkPt   -> cd();
  pDeltaPhiVsTrkPt1D -> Draw();
  pDeltaPhiVsTrkPt2D -> Draw();
  pDeltaPhiVsTrkPt1D -> cd();
  hDeltaPhi          -> Draw();
  hWeirdDeltaPhi     -> Draw("same");
  hNormalDeltaPhi    -> Draw("same");
  oddNT              -> Draw();
  txtEO              -> Draw();
  pDeltaPhiVsTrkPt2D -> cd();
  hDeltaPhiVsTrkPt   -> Draw("colz");
  fOut               -> cd();
  cDeltaPhiVsTrkPt   -> Write();
  cDeltaPhiVsTrkPt   -> Close();

  TCanvas *cDeltaPtVsTrkPt   = new TCanvas("cDeltaPtVsTrkPt", "", fWidth2P, fHeight2P);
  TPad    *pDeltaPtVsTrkPt1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDeltaPtVsTrkPt2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDeltaPtVsTrkPt   -> cd();
  pDeltaPtVsTrkPt1D -> Draw();
  pDeltaPtVsTrkPt2D -> Draw();
  pDeltaPtVsTrkPt1D -> cd();
  hDeltaPt          -> Draw();
  hWeirdDeltaPt     -> Draw("same");
  hNormalDeltaPt    -> Draw("same");
  oddNT             -> Draw();
  txtEO             -> Draw();
  pDeltaPtVsTrkPt2D -> cd();
  hDeltaPtVsTrkPt   -> Draw("colz");
  fOut              -> cd();
  cDeltaPtVsTrkPt   -> Write();
  cDeltaPtVsTrkPt   -> Close();

  TCanvas *cTrkVsTruEta   = new TCanvas("cTrkVsTruEta", "", fWidth2P, fHeight2P);
  TPad    *pTrkVsTruEta1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pTrkVsTruEta2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cTrkVsTruEta     -> cd();
  pTrkVsTruEta1D   -> Draw();
  pTrkVsTruEta2D   -> Draw();
  pTrkVsTruEta1D   -> cd();
  hTrackEta        -> Draw();
  hTruthEta        -> Draw("same");
  hWeirdEta        -> Draw("same");
  hNormalEta       -> Draw("same");
  odd              -> Draw();
  txtEO            -> Draw();
  pTrkVsTruEta2D   -> cd();
  hTruthVsTrackEta -> Draw("colz");
  fOut             -> cd();
  cTrkVsTruEta     -> Write();
  cTrkVsTruEta     -> Close();

  TCanvas *cTrkVsTruPhi   = new TCanvas("cTrkVsTruPhi", "", fWidth2P, fHeight2P);
  TPad    *pTrkVsTruPhi1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pTrkVsTruPhi2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cTrkVsTruPhi     -> cd();
  pTrkVsTruPhi1D   -> Draw();
  pTrkVsTruPhi2D   -> Draw();
  pTrkVsTruPhi1D   -> cd();
  hTrackPhi        -> Draw();
  hTruthPhi        -> Draw("same");
  hWeirdPhi        -> Draw("same");
  hNormalPhi       -> Draw("same");
  odd              -> Draw();
  txtEO            -> Draw();
  pTrkVsTruPhi2D   -> cd();
  hTruthVsTrackPhi -> Draw("colz");
  fOut             -> cd();
  cTrkVsTruPhi     -> Write();

  TCanvas *cTrkVsTruPt   = new TCanvas("cTrkVsTruPt", "", fWidth2P, fHeight2P);
  TPad    *pTrkVsTruPt1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pTrkVsTruPt2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cTrkVsTruPt     -> cd();
  pTrkVsTruPt1D   -> Draw();
  pTrkVsTruPt2D   -> Draw();
  pTrkVsTruPt1D   -> cd();
  hTrackPt        -> Draw();
  hTruthPt        -> Draw("same");
  hWeirdPt        -> Draw("same");
  hNormalPt       -> Draw("same");
  odd             -> Draw();
  txtEO           -> Draw();
  pTrkVsTruPt2D   -> cd();
  hTruthVsTrackPt -> Draw("colz");
  fOut            -> cd();
  cTrkVsTruPt     -> Write();
  cTrkVsTruPt     -> Close();

  TCanvas *cTrkVsTruVx   = new TCanvas("cTrkVsTruVx", "", fWidth2P, fHeight2P);
  TPad    *pTrkVsTruVx1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pTrkVsTruVx2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cTrkVsTruVx     -> cd();
  pTrkVsTruVx1D   -> Draw();
  pTrkVsTruVx2D   -> Draw();
  pTrkVsTruVx1D   -> cd();
  hTrackVx        -> Draw();
  hTruthVx        -> Draw("same");
  hWeirdVx        -> Draw("same");
  hNormalVx       -> Draw("same");
  odd             -> Draw();
  txtEO           -> Draw();
  pTrkVsTruVx2D   -> cd();
  hTruthVsTrackVx -> Draw("colz");
  fOut            -> cd();
  cTrkVsTruVx     -> Write();
  cTrkVsTruVx     -> Close();

  TCanvas *cTrkVsTruVy   = new TCanvas("cTrkVsTruVy", "", fWidth2P, fHeight2P);
  TPad    *pTrkVsTruVy1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pTrkVsTruVy2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cTrkVsTruVy     -> cd();
  pTrkVsTruVy1D   -> Draw();
  pTrkVsTruVy2D   -> Draw();
  pTrkVsTruVy1D   -> cd();
  hTrackVy        -> Draw();
  hTruthVy        -> Draw("same");
  hWeirdVy        -> Draw("same");
  hNormalVy       -> Draw("same");
  odd             -> Draw();
  txtEO           -> Draw();
  pTrkVsTruVy2D   -> cd();
  hTruthVsTrackVy -> Draw("colz");
  fOut            -> cd();
  cTrkVsTruVy     -> Write();
  cTrkVsTruVy     -> Close();

  TCanvas *cTrkVsTruVz   = new TCanvas("cTrkVsTruVz", "", fWidth2P, fHeight2P);
  TPad    *pTrkVsTruVz1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pTrkVsTruVz2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cTrkVsTruVz     -> cd();
  pTrkVsTruVz1D   -> Draw();
  pTrkVsTruVz2D   -> Draw();
  pTrkVsTruVz1D   -> cd();
  hTrackVz        -> Draw();
  hTruthVz        -> Draw("same");
  hWeirdVz        -> Draw("same");
  hNormalVz       -> Draw("same");
  odd             -> Draw();
  txtEO           -> Draw();
  pTrkVsTruVz2D   -> cd();
  hTruthVsTrackVz -> Draw("colz");
  fOut            -> cd();
  cTrkVsTruVz     -> Write();
  cTrkVsTruVz     -> Close();

  TCanvas *cFracVsTruEta   = new TCanvas("cFracVsTruEta", "", fWidth2P, fHeight2P);
  TPad    *pFracVsTruEta1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pFracVsTruEta2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cFracVsTruEta   -> cd();
  pFracVsTruEta1D -> Draw();
  pFracVsTruEta2D -> Draw();
  pFracVsTruEta1D -> cd();
  hTruthEtaFrac   -> Draw();
  txtEO           -> Draw();
  pFracVsTruEta2D -> cd();
  hFracVsTruthEta -> Draw("colz");
  fOut            -> cd();
  cFracVsTruEta   -> Write();
  cFracVsTruEta   -> Close();

  TCanvas *cFracVsTruPhi   = new TCanvas("cFracVsTruPhi", "", fWidth2P, fHeight2P);
  TPad    *pFracVsTruPhi1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pFracVsTruPhi2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cFracVsTruPhi   -> cd();
  pFracVsTruPhi1D -> Draw();
  pFracVsTruPhi2D -> Draw();
  pFracVsTruPhi1D -> cd();
  hTruthPhiFrac   -> Draw();
  txtEO           -> Draw();
  pFracVsTruPhi2D -> cd();
  hFracVsTruthPhi -> Draw("colz");
  fOut            -> cd();
  cFracVsTruPhi   -> Write();
  cFracVsTruPhi   -> Close();

  TCanvas *cFracVsTruPt   = new TCanvas("cFracVsTruPt", "", fWidth2P, fHeight2P);
  TPad    *pFracVsTruPt1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pFracVsTruPt2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cFracVsTruPt   -> cd();
  pFracVsTruPt1D -> Draw();
  pFracVsTruPt2D -> Draw();
  pFracVsTruPt1D -> cd();
  hTruthPtFrac   -> Draw();
  txtEO          -> Draw();
  pFracVsTruPt2D -> cd();
  hFracVsTruthPt -> Draw("colz");
  fOut           -> cd();
  cFracVsTruPt   -> Write();
  cFracVsTruPt   -> Close();

  TCanvas *cDiffVsTruEta   = new TCanvas("cDiffVsTruEta", "", fWidth2P, fHeight2P);
  TPad    *pDiffVsTruEta1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDiffVsTruEta2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDiffVsTruEta   -> cd();
  pDiffVsTruEta1D -> Draw();
  pDiffVsTruEta2D -> Draw();
  pDiffVsTruEta1D -> cd();
  hTruthEtaDiff   -> Draw();
  txtEO           -> Draw();
  pDiffVsTruEta2D -> cd();
  hDiffVsTruthEta -> Draw("colz");
  fOut            -> cd();
  cDiffVsTruEta   -> Write();
  cDiffVsTruEta   -> Close();

  TCanvas *cDiffVsTruPhi   = new TCanvas("cDiffVsTruPhi", "", fWidth2P, fHeight2P);
  TPad    *pDiffVsTruPhi1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDiffVsTruPhi2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDiffVsTruPhi   -> cd();
  pDiffVsTruPhi1D -> Draw();
  pDiffVsTruPhi2D -> Draw();
  pDiffVsTruPhi1D -> cd();
  hTruthPhiDiff   -> Draw();
  txtEO           -> Draw();
  pDiffVsTruPhi2D -> cd();
  hDiffVsTruthPhi -> Draw("colz");
  fOut            -> cd();
  cDiffVsTruPhi   -> Write();
  cDiffVsTruPhi   -> Close();

  TCanvas *cDiffVsTruPt   = new TCanvas("cDiffVsTruPt", "", fWidth2P, fHeight2P);
  TPad    *pDiffVsTruPt1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDiffVsTruPt2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDiffVsTruPt   -> cd();
  pDiffVsTruPt1D -> Draw();
  pDiffVsTruPt2D -> Draw();
  pDiffVsTruPt1D -> cd();
  hTruthPtDiff   -> Draw();
  txtEO          -> Draw();
  pDiffVsTruPt2D -> cd();
  hDiffVsTruthPt -> Draw("colz");
  fOut           -> cd();
  cDiffVsTruPt   -> Write();
  cDiffVsTruPt   -> Close();

  TCanvas *cTruPtVsDCAxy   = new TCanvas("cTruPtVsDCAxy", "", fWidth2P, fHeight2P);
  TPad    *pTruPtVsDCAxy1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pTruPtVsDCAxy2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cTruPtVsDCAxy   -> cd();
  pTruPtVsDCAxy1D -> Draw();
  pTruPtVsDCAxy2D -> Draw();
  pTruPtVsDCAxy1D -> cd();
  hTrackDCAxy     -> Draw();
  hWeirdDCAxy     -> Draw("same");
  hNormalDCAxy    -> Draw("same");
  oddNT           -> Draw();
  txtEO           -> Draw();
  pTruPtVsDCAxy2D -> cd();
  hTruthPtVsDCAxy -> Draw("colz");
  fOut            -> cd();
  cTruPtVsDCAxy   -> Write();
  cTruPtVsDCAxy   -> Close();

  TCanvas *cTruPtVsDCAz   = new TCanvas("cTruPtVsDCAz", "", fWidth2P, fHeight2P);
  TPad    *pTruPtVsDCAz1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pTruPtVsDCAz2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cTruPtVsDCAz   -> cd();
  pTruPtVsDCAz1D -> Draw();
  pTruPtVsDCAz2D -> Draw();
  pTruPtVsDCAz1D -> cd();
  hTrackDCAz     -> Draw();
  hWeirdDCAz     -> Draw("same");
  hNormalDCAz    -> Draw("same");
  oddNT          -> Draw();
  txtEO          -> Draw();
  pTruPtVsDCAz2D -> cd();
  hTruthPtVsDCAz -> Draw("colz");
  fOut           -> cd();
  cTruPtVsDCAz   -> Write();
  cTruPtVsDCAz   -> Close();

  TCanvas *cTruPtVsNMms   = new TCanvas("cTruPtVsNMms", "", fWidth2P, fHeight2P);
  TPad    *pTruPtVsNMms1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pTruPtVsNMms2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cTruPtVsNMms   -> cd();
  pTruPtVsNMms1D -> Draw();
  pTruPtVsNMms2D -> Draw();
  pTruPtVsNMms1D -> cd();
  hTrackNMms     -> Draw();
  hTruthNMms     -> Draw("same");
  hWeirdNMms     -> Draw("same");
  hNormalNMms    -> Draw("same");
  odd            -> Draw();
  txtEO          -> Draw();
  pTruPtVsNMms2D -> cd();
  hTruthPtVsNMms -> Draw("colz");
  fOut           -> cd();
  cTruPtVsNMms   -> Write();
  cTruPtVsNMms   -> Close();

  TCanvas *cTruPtVsNMap   = new TCanvas("cTruPtVsNMap", "", fWidth2P, fHeight2P);
  TPad    *pTruPtVsNMap1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pTruPtVsNMap2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cTruPtVsNMap   -> cd();
  pTruPtVsNMap1D -> Draw();
  pTruPtVsNMap2D -> Draw();
  pTruPtVsNMap1D -> cd();
  hTrackNMap     -> Draw();
  hTruthNMap     -> Draw("same");
  hWeirdNMap     -> Draw("same");
  hNormalNMms    -> Draw("same");
  odd            -> Draw();
  txtEO          -> Draw();
  pTruPtVsNMap2D -> cd();
  hTruthPtVsNMap -> Draw("colz");
  fOut           -> cd();
  cTruPtVsNMap   -> Write();
  cTruPtVsNMap   -> Close();

  TCanvas *cTruPtVsNInt   = new TCanvas("cTruPtVsNInt", "", fWidth2P, fHeight2P);
  TPad    *pTruPtVsNInt1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pTruPtVsNInt2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cTruPtVsNInt   -> cd();
  pTruPtVsNInt1D -> Draw();
  pTruPtVsNInt2D -> Draw();
  pTruPtVsNInt1D -> cd();
  hTrackNInt     -> Draw();
  hTruthNInt     -> Draw("same");
  hWeirdNInt     -> Draw("same");
  hNormalNInt    -> Draw("same");
  odd            -> Draw();
  txtEO          -> Draw();
  pTruPtVsNInt2D -> cd();
  hTruthPtVsNInt -> Draw("colz");
  fOut           -> cd();
  cTruPtVsNInt   -> Write();
  cTruPtVsNInt   -> Close();

  TCanvas *cTruPtVsNTpc   = new TCanvas("cTruPtVsNTpc", "", fWidth2P, fHeight2P);
  TPad    *pTruPtVsNTpc1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pTruPtVsNTpc2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cTruPtVsNTpc   -> cd();
  pTruPtVsNTpc1D -> Draw();
  pTruPtVsNTpc2D -> Draw();
  pTruPtVsNTpc1D -> cd();
  hTrackNTpc     -> Draw();
  hTruthNTpc     -> Draw("same");
  hWeirdNTpc     -> Draw("same");
  hNormalNTpc    -> Draw("same");
  odd            -> Draw();
  txtEO          -> Draw();
  pTruPtVsNTpc2D -> cd();
  hTruthPtVsNTpc -> Draw("colz");
  fOut           -> cd();
  cTruPtVsNTpc   -> Write();
  cTruPtVsNTpc   -> Close();

  TCanvas *cTruPtVsNTot   = new TCanvas("cTruPtVsNTot", "", fWidth2P, fHeight2P);
  TPad    *pTruPtVsNTot1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pTruPtVsNTot2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cTruPtVsNTot   -> cd();
  pTruPtVsNTot1D -> Draw();
  pTruPtVsNTot2D -> Draw();
  pTruPtVsNTot1D -> cd();
  hTrackNTot     -> Draw();
  hTruthNTot     -> Draw("same");
  hWeirdNTot     -> Draw("same");
  hNormalNTot    -> Draw("same");
  odd            -> Draw();
  txtEO          -> Draw();
  pTruPtVsNTot2D -> cd();
  hTruthPtVsNTot -> Draw("colz");
  fOut           -> cd();
  cTruPtVsNTot   -> Write();
  cTruPtVsNTot   -> Close();

  TCanvas *cTruPtVsChi2   = new TCanvas("cTruPtVsChi2", "", fWidth2P, fHeight2P);
  TPad    *pTruPtVsChi21D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pTruPtVsChi22D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cTruPtVsChi2   -> cd();
  pTruPtVsChi21D -> Draw();
  pTruPtVsChi22D -> Draw();
  pTruPtVsChi21D -> cd();
  hTrackChi2     -> Draw();
  hWeirdChi2     -> Draw("same");
  hNormalChi2    -> Draw("same");
  oddNT          -> Draw();
  txtEO          -> Draw();
  pTruPtVsChi22D -> cd();
  hTruthPtVsChi2 -> Draw("colz");
  fOut           -> cd();
  cTruPtVsChi2   -> Write();
  cTruPtVsChi2   -> Close();

  TCanvas *cTruPtVsNDF   = new TCanvas("cTruPtVsNDF", "", fWidth2P, fHeight2P);
  TPad    *pTruPtVsNDF1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pTruPtVsNDF2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cTruPtVsNDF   -> cd();
  pTruPtVsNDF1D -> Draw();
  pTruPtVsNDF2D -> Draw();
  pTruPtVsNDF1D -> cd();
  hTrackNDF     -> Draw();
  hWeirdNDF     -> Draw("same");
  hNormalNDF    -> Draw("same");
  oddNT         -> Draw();
  txtEO         -> Draw();
  pTruPtVsNDF2D -> cd();
  hTruthPtVsNDF -> Draw("colz");
  fOut          -> cd();
  cTruPtVsNDF   -> Write();
  cTruPtVsNDF   -> Close();

  TCanvas *cFracPtVsQuality   = new TCanvas("cFracPtVsQuality", "", fWidth2P, fHeight2P);
  TPad    *pFracPtVsQuality1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pFracPtVsQuality2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cFracPtVsQuality  -> cd();
  pFracPtVsQuality1D -> Draw();
  pFracPtVsQuality2D -> Draw();
  pFracPtVsQuality1D -> cd();
  hTrackQuality      -> Draw();
  hWeirdQuality      -> Draw("same");
  hNormalQuality     -> Draw("same");
  oddNT              -> Draw();
  txtEO              -> Draw();
  pFracPtVsQuality2D -> cd();
  hFracPtVsQuality   -> Draw("colz");
  fOut               -> cd();
  cFracPtVsQuality   -> Write();
  cFracPtVsQuality   -> Close();

  TCanvas *cTruPtVsQuality   = new TCanvas("cTruPtVsQuality", "", fWidth2P, fHeight2P);
  TPad    *pTruPtVsQuality1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pTruPtVsQuality2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cTruPtVsQuality   -> cd();
  pTruPtVsQuality1D -> Draw();
  pTruPtVsQuality2D -> Draw();
  pTruPtVsQuality1D -> cd();
  hTrackQuality     -> Draw();
  hWeirdQuality     -> Draw("same");
  hNormalQuality    -> Draw("same");
  oddNT             -> Draw();
  txtEO             -> Draw();
  pTruPtVsQuality2D -> cd();
  hTruthPtVsQuality -> Draw("colz");
  fOut              -> cd();
  cTruPtVsQuality   -> Write();
  cTruPtVsQuality   -> Close();

  TCanvas *cDeltaDCAxyVsTruPt   = new TCanvas("cDeltaDCAxyVsTruPt", "", fWidth2P, fHeight2P);
  TPad    *pDeltaDCAxyVsTruPt1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDeltaDCAxyVsTruPt2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDeltaDCAxyVsTruPt   -> cd();
  pDeltaDCAxyVsTruPt1D -> Draw();
  pDeltaDCAxyVsTruPt2D -> Draw();
  pDeltaDCAxyVsTruPt1D -> cd();
  hDeltaDCAxy          -> Draw();
  hWeirdDeltaDCAxy     -> Draw("same");
  hNormalDeltaDCAxy    -> Draw("same");
  oddNT                -> Draw();
  txtEO                -> Draw();
  pDeltaDCAxyVsTruPt2D -> cd();
  hDeltaDCAxyVsTruPt   -> Draw("colz");
  fOut                 -> cd();
  cDeltaDCAxyVsTruPt   -> Write();
  cDeltaDCAxyVsTruPt   -> Close();

  TCanvas *cDeltaDCAzVsTruPt   = new TCanvas("cDeltaDCAzVsTruPt", "", fWidth2P, fHeight2P);
  TPad    *pDeltaDCAzVsTruPt1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDeltaDCAzVsTruPt2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDeltaDCAzVsTruPt   -> cd();
  pDeltaDCAzVsTruPt1D -> Draw();
  pDeltaDCAzVsTruPt2D -> Draw();
  pDeltaDCAzVsTruPt1D -> cd();
  hDeltaDCAz          -> Draw();
  hWeirdDeltaDCAz     -> Draw("same");
  hNormalDeltaDCAz    -> Draw("same");
  oddNT               -> Draw();
  txtEO               -> Draw();
  pDeltaDCAzVsTruPt2D -> cd();
  hDeltaDCAzVsTruPt   -> Draw("colz");
  fOut                -> cd();
  cDeltaDCAzVsTruPt   -> Write();
  cDeltaDCAzVsTruPt   -> Close();

  TCanvas *cDeltaEtaVsTruPt   = new TCanvas("cDeltaEtaVsTruPt", "", fWidth2P, fHeight2P);
  TPad    *pDeltaEtaVsTruPt1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDeltaEtaVsTruPt2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDeltaEtaVsTruPt   -> cd();
  pDeltaEtaVsTruPt1D -> Draw();
  pDeltaEtaVsTruPt2D -> Draw();
  pDeltaEtaVsTruPt1D -> cd();
  hDeltaEta          -> Draw();
  hWeirdDeltaEta     -> Draw("same");
  hNormalDeltaEta    -> Draw("same");
  oddNT              -> Draw();
  txtEO              -> Draw();
  pDeltaEtaVsTruPt2D -> cd();
  hDeltaEtaVsTruPt   -> Draw("colz");
  fOut               -> cd();
  cDeltaEtaVsTruPt   -> Write();
  cDeltaEtaVsTruPt   -> Close();

  TCanvas *cDeltaPhiVsTruPt   = new TCanvas("cDeltaPhiVsTruPt", "", fWidth2P, fHeight2P);
  TPad    *pDeltaPhiVsTruPt1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDeltaPhiVsTruPt2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDeltaPhiVsTruPt   -> cd();
  pDeltaPhiVsTruPt1D -> Draw();
  pDeltaPhiVsTruPt2D -> Draw();
  pDeltaPhiVsTruPt1D -> cd();
  hDeltaPhi          -> Draw();
  hWeirdDeltaPhi     -> Draw("same");
  hNormalDeltaPhi    -> Draw("same");
  oddNT              -> Draw();
  txtEO              -> Draw();
  pDeltaPhiVsTruPt2D -> cd();
  hDeltaPhiVsTruPt   -> Draw("colz");
  fOut               -> cd();
  cDeltaPhiVsTruPt   -> Write();
  cDeltaPhiVsTruPt   -> Close();

  TCanvas *cDeltaPtVsTruPt   = new TCanvas("cDeltaPtVsTruPt", "", fWidth2P, fHeight2P);
  TPad    *pDeltaPtVsTruPt1D = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDeltaPtVsTruPt2D = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDeltaPtVsTruPt   -> cd();
  pDeltaPtVsTruPt1D -> Draw();
  pDeltaPtVsTruPt2D -> Draw();
  pDeltaPtVsTruPt1D -> cd();
  hDeltaPt          -> Draw();
  hWeirdDeltaPt     -> Draw("same");
  hNormalDeltaPt    -> Draw("same");
  oddNT             -> Draw();
  txtEO             -> Draw();
  pDeltaPtVsTruPt2D -> cd();
  hDeltaPtVsTruPt   -> Draw("colz");
  fOut              -> cd();
  cDeltaPtVsTruPt   -> Write();
  cDeltaPtVsTruPt   -> Close();

  // make with-pileup 1d plots
  TCanvas *cNMms_PU = new TCanvas("cNMmsWithPileup", "", fWidth1P, fHeight1P);
  cNMms_PU         -> cd();
  hTrackNMms_PU   -> Draw();
  hPrimaryNMms_PU -> Draw("same");
  hNonPrimNMms_PU -> Draw("same");
  pil             -> Draw();
  txtPU           -> Draw();
  fOut            -> cd();
  cNMms_PU        -> Write();
  cNMms_PU        -> Close();

  TCanvas *cNMap_PU = new TCanvas("cNMapWithPileup", "", fWidth1P, fHeight1P);
  cNMap_PU        -> cd();
  hTrackNMap_PU   -> Draw();
  hPrimaryNMap_PU -> Draw("same");
  hNonPrimNMap_PU -> Draw("same");
  pil             -> Draw();
  txtPU           -> Draw();
  fOut            -> cd();
  cNMap_PU        -> Write();
  cNMap_PU        -> Close();

  TCanvas *cNInt_PU = new TCanvas("cNIntWithPileup", "", fWidth1P, fHeight1P);
  cNInt_PU        -> cd();
  hTrackNInt_PU   -> Draw();
  hPrimaryNInt_PU -> Draw("same");
  hNonPrimNInt_PU -> Draw("same");
  pil             -> Draw();
  txtPU           -> Draw();
  fOut            -> cd();
  cNInt_PU        -> Write();
  cNInt_PU        -> Close();

  TCanvas *cNTpc_PU = new TCanvas("cNTpcWithPileup", "", fWidth1P, fHeight1P);
  cNTpc_PU        -> cd();
  hTrackNTpc_PU   -> Draw();
  hPrimaryNTpc_PU -> Draw("same");
  hNonPrimNTpc_PU -> Draw("same");
  pil             -> Draw();
  txtPU           -> Draw();
  fOut            -> cd();
  cNTpc_PU        -> Write();
  cNTpc_PU        -> Close();

  TCanvas *cNTot_PU = new TCanvas("cNTotWithPileup", "", fWidth1P, fHeight1P);
  cNTot_PU        -> cd();
  hTrackNTot_PU   -> Draw();
  hPrimaryNTot_PU -> Draw("same");
  hNonPrimNTot_PU -> Draw("same");
  pil             -> Draw();
  txtPU           -> Draw();
  fOut            -> cd();
  cNTot_PU        -> Write();
  cNTot_PU        -> Close();

  TCanvas *cChi21D_PU = new TCanvas("cChi21DwithPileup", "", fWidth1P, fHeight1P);
  cChi21D_PU      -> cd();
  hTrackChi2_PU   -> Draw();
  hPrimaryChi2_PU -> Draw("same");
  hNonPrimChi2_PU -> Draw("same");
  pil             -> Draw();
  txtPU           -> Draw();
  fOut            -> cd();
  cChi21D_PU      -> Write();
  cChi21D_PU      -> Close();

  TCanvas *cNDF1D_PU = new TCanvas("cNDF1DwithPileup", "", fWidth1P, fHeight1P);
  cNDF1D_PU      -> cd();
  hTrackNDF_PU   -> Draw();
  hPrimaryNDF_PU -> Draw("same");
  hNonPrimNDF_PU -> Draw("same");
  pil            -> Draw();
  txtPU          -> Draw();
  fOut           -> cd();
  cNDF1D_PU      -> Write();
  cNDF1D_PU      -> Close();

  TCanvas *cDcaXY1D_PU = new TCanvas("cDcaXY1DwithPileup", "", fWidth1P, fHeight1P);
  cDcaXY1D_PU      -> cd();
  hTrackDCAxy_PU   -> Draw();
  hPrimaryDCAxy_PU -> Draw("same");
  hNonPrimDCAxy_PU -> Draw("same");
  pil              -> Draw();
  txtPU            -> Draw();
  fOut             -> cd();
  cDcaXY1D_PU      -> Write();
  cDcaXY1D_PU      -> Close();

  TCanvas *cDcaZ1D_PU = new TCanvas("cDcaZ1DwithPileup", "", fWidth1P, fHeight1P);
  cDcaZ1D_PU      -> cd();
  hTrackDCAz_PU   -> Draw();
  hPrimaryDCAz_PU -> Draw("same");
  hNonPrimDCAz_PU -> Draw("same");
  pil             -> Draw();
  txtPU           -> Draw();
  fOut            -> cd();
  cDcaZ1D_PU      -> Write();
  cDcaZ1D_PU      -> Close();

  TCanvas *cVtxX_PU = new TCanvas("cVtxXwithPileup", "", fWidth1P, fHeight1P);
  cVtxX_PU      -> cd();
  hTrackVx_PU   -> Draw();
  hPrimaryVx_PU -> Draw("same");
  hNonPrimVx_PU -> Draw("same");
  pil           -> Draw();
  txtPU         -> Draw();
  fOut          -> cd();
  cVtxX_PU      -> Write();
  cVtxX_PU      -> Close();

  TCanvas *cVtxY_PU = new TCanvas("cVtxYwithPileup", "", fWidth1P, fHeight1P);
  cVtxY_PU      -> cd();
  hTrackVy_PU   -> Draw();
  hPrimaryVy_PU -> Draw("same");
  hNonPrimVy_PU -> Draw("same");
  pil           -> Draw();
  txtPU         -> Draw();
  fOut          -> cd();
  cVtxY_PU      -> Write();
  cVtxY_PU      -> Close();

  TCanvas *cVtxZ_PU = new TCanvas("cVtxZwithPileup", "", fWidth1P, fHeight1P);
  cVtxZ_PU      -> cd();
  hTrackVz_PU   -> Draw();
  hPrimaryVz_PU -> Draw("same");
  hNonPrimVz_PU -> Draw("same");
  pil           -> Draw();
  txtPU         -> Draw();
  fOut          -> cd();
  cVtxZ_PU      -> Write();
  cVtxZ_PU      -> Close();

  TCanvas *cEta_PU = new TCanvas("cEtaWithPileup", "", fWidth1P, fHeight1P);
  cEta_PU        -> cd();
  hTrackEta_PU   -> Draw();
  hPrimaryEta_PU -> Draw("same");
  hNonPrimEta_PU -> Draw("same");
  pil            -> Draw();
  txtPU          -> Draw();
  fOut           -> cd();
  cEta_PU        -> Write();
  cEta_PU        -> Close();
  
  TCanvas *cPhi_PU = new TCanvas("cPhiWithPileup", "", fWidth1P, fHeight1P);
  cPhi_PU        -> cd();
  hTrackPhi_PU   -> Draw();
  hPrimaryPhi_PU -> Draw("same");
  hNonPrimPhi_PU -> Draw("same");
  pil            -> Draw();
  txtPU          -> Draw();
  fOut           -> cd();
  cPhi_PU        -> Write();
  cPhi_PU        -> Close();

  TCanvas *cPt_PU = new TCanvas("cPtWithPileup", "", fWidth1P, fHeight1P);
  cPt_PU         -> cd();
  hTrackPt_PU    -> Draw();
  hPrimaryPt_PU  -> Draw("same");
  hNonPrimPhi_PU -> Draw("same");
  pil            -> Draw();
  txtPU          -> Draw();
  fOut           -> cd();
  cPt_PU         -> Write();
  cPt_PU         -> Close();

  TCanvas *cDeltaDcaXY_PU = new TCanvas("cDeltaDcaXYwithPileup", "", fWidth1P, fHeight1P);
  cDeltaDcaXY_PU     -> cd();
  hDeltaDCAxy_PU     -> Draw();
  hDeltaPrimDCAxy_PU -> Draw("same");
  hDeltaNoPrDCAxy_PU -> Draw("same");
  pil                -> Draw();
  txtPU              -> Draw();
  fOut               -> cd();
  cDeltaDcaXY_PU     -> Write();
  cDeltaDcaXY_PU     -> Close();

  TCanvas *cDeltaDcaZ_PU = new TCanvas("cDeltaDcaZwithPileup", "", fWidth1P, fHeight1P);
  cDeltaDcaZ_PU     -> cd();
  hDeltaDCAz_PU     -> Draw();
  hDeltaPrimDCAz_PU -> Draw("same");
  hDeltaNoPrDCAz_PU -> Draw("same");
  pil               -> Draw();
  txtPU             -> Draw();
  fOut              -> cd();
  cDeltaDcaZ_PU     -> Write();
  cDeltaDcaZ_PU     -> Close();

  TCanvas *cDeltaEta_PU = new TCanvas("cDeltaEtaWithPileup", "", fWidth1P, fHeight1P);
  cDeltaEta_PU      -> cd();
  hDeltaEta_PU     -> Draw();
  hDeltaPrimEta_PU -> Draw("same");
  hDeltaNoPrEta_PU -> Draw("same");
  pil              -> Draw();
  txtPU            -> Draw();
  fOut             -> cd();
  cDeltaEta_PU     -> Write();
  cDeltaEta_PU     -> Close();
  
  TCanvas *cDeltaPhi_PU = new TCanvas("cDeltaPhiWithPileup", "", fWidth1P, fHeight1P);
  cDeltaPhi_PU     -> cd();
  hDeltaPhi_PU     -> Draw();
  hDeltaPrimPhi_PU -> Draw("same");
  hDeltaNoPrPhi_PU -> Draw("same");
  pil              -> Draw();
  txtPU            -> Draw();
  fOut             -> cd();
  cDeltaPhi_PU     -> Write();
  cDeltaPhi_PU     -> Close();

  TCanvas *cDeltaPt_PU = new TCanvas("cDeltaPtWithPileup", "", fWidth1P, fHeight1P);
  cDeltaPt_PU     -> cd();
  hDeltaPt_PU     -> Draw();
  hDeltaPrimPt_PU -> Draw("same");
  hDeltaNoPrPt_PU -> Draw("same");
  pil             -> Draw();
  txtPU           -> Draw();
  fOut            -> cd();
  cDeltaPt_PU     -> Write();
  cDeltaPt_PU     -> Close();

  // make embed-only 2d plots
  TCanvas *cPerMms_PU   = new TCanvas("cPerMmsWithPileup", "", fWidth2P, fHeight2P);
  TPad    *pPerMms1D_PU = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pPerMms2D_PU = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cPerMms_PU          -> cd();
  pPerMms1D_PU        -> Draw();
  pPerMms2D_PU        -> Draw();
  pPerMms1D_PU        -> cd();
  hTrackPerMms_PU     -> Draw();
  hPrimaryPerMms_PU   -> Draw("same");
  hNonPrimPerMms_PU   -> Draw("same");
  pil                 -> Draw();
  txtPU               -> Draw();
  pPerMms2D_PU        -> cd();
  hTrackPtVsPerMms_PU -> Draw("colz");
  fOut                -> cd();
  cPerMms_PU          -> Write();
  cPerMms_PU          -> Close();

  TCanvas *cPerMap_PU   = new TCanvas("cPerMapWithPileup", "", fWidth2P, fHeight2P);
  TPad    *pPerMap1D_PU = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pPerMap2D_PU = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cPerMap_PU          -> cd();
  pPerMap1D_PU        -> Draw();
  pPerMap2D_PU        -> Draw();
  pPerMap1D_PU        -> cd();
  hTrackPerMap_PU     -> Draw();
  hPrimaryPerMap_PU   -> Draw("same");
  hNonPrimPerMap_PU   -> Draw("same");
  pil                 -> Draw();
  txtPU               -> Draw();
  pPerMap2D_PU        -> cd();
  hTrackPtVsPerMap_PU -> Draw("colz");
  fOut                -> cd();
  cPerMap_PU          -> Write();
  cPerMap_PU          -> Close();

  TCanvas *cPerInt_PU   = new TCanvas("cPerIntWithPileup", "", fWidth2P, fHeight2P);
  TPad    *pPerInt1D_PU = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pPerInt2D_PU = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cPerInt_PU          -> cd();
  pPerInt1D_PU        -> Draw();
  pPerInt2D_PU        -> Draw();
  pPerInt1D_PU        -> cd();
  hTrackPerInt_PU     -> Draw();
  hPrimaryPerInt_PU   -> Draw("same");
  hNonPrimPerInt_PU   -> Draw("same");
  pil                 -> Draw();
  txtPU               -> Draw();
  pPerInt2D_PU        -> cd();
  hTrackPtVsPerInt_PU -> Draw("colz");
  fOut                -> cd();
  cPerInt_PU          -> Write();
  cPerInt_PU          -> Close();

  TCanvas *cPerTpc_PU   = new TCanvas("cPerTpcWithPileup", "", fWidth2P, fHeight2P);
  TPad    *pPerTpc1D_PU = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pPerTpc2D_PU = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cPerTpc_PU          -> cd();
  pPerTpc1D_PU        -> Draw();
  pPerTpc2D_PU        -> Draw();
  pPerTpc1D_PU        -> cd();
  hTrackPerTpc_PU     -> Draw();
  hPrimaryPerTpc_PU   -> Draw("same");
  hNonPrimPerTpc_PU   -> Draw("same");
  pil                 -> Draw();
  txtPU               -> Draw();
  pPerTpc2D_PU        -> cd();
  hTrackPtVsPerTpc_PU -> Draw("colz");
  fOut                -> cd();
  cPerTpc_PU          -> Write();
  cPerTpc_PU          -> Close();

  TCanvas *cPerTot_PU   = new TCanvas("cPerTotWithPileup", "", fWidth2P, fHeight2P);
  TPad    *pPerTot1D_PU = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pPerTot2D_PU = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cPerTot_PU          -> cd();
  pPerTot1D_PU        -> Draw();
  pPerTot2D_PU        -> Draw();
  pPerTot1D_PU        -> cd();
  hTrackPerTot_PU     -> Draw();
  hPrimaryPerTot_PU   -> Draw("same");
  hNonPrimPerTot_PU   -> Draw("same");
  pil                 -> Draw();
  txtPU               -> Draw();
  pPerTot2D_PU        -> cd();
  hTrackPtVsPerTot_PU -> Draw("colz");
  fOut                -> cd();
  cPerTot_PU          -> Write();
  cPerTot_PU          -> Close();

  TCanvas *cChi2_PU   = new TCanvas("cChi2WithPileup", "", fWidth2P, fHeight2P);
  TPad    *pChi21D_PU = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pChi22D_PU = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cChi2_PU          -> cd();
  pChi21D_PU        -> Draw();
  pChi22D_PU        -> Draw();
  pChi21D_PU        -> cd();
  hTrackChi2_PU     -> Draw();
  hPrimaryChi2_PU   -> Draw("same");
  hNonPrimChi2_PU   -> Draw("same");
  pil               -> Draw();
  txtPU             -> Draw();
  pChi22D_PU        -> cd();
  hTrackPtVsChi2_PU -> Draw("colz");
  fOut              -> cd();
  cChi2_PU          -> Write();
  cChi2_PU          -> Close();

  TCanvas *cNDF_PU   = new TCanvas("cNDFWithPileup", "", fWidth2P, fHeight2P);
  TPad    *pNDF1D_PU = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pNDF2D_PU = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cNDF_PU          -> cd();
  pNDF1D_PU        -> Draw();
  pNDF2D_PU        -> Draw();
  pNDF1D_PU        -> cd();
  hTrackNDF_PU     -> Draw();
  hPrimaryNDF_PU   -> Draw("same");
  hNonPrimNDF_PU   -> Draw("same");
  pil              -> Draw();
  txtPU            -> Draw();
  pNDF2D_PU        -> cd();
  hTrackPtVsNDF_PU -> Draw("colz");
  fOut             -> cd();
  cNDF_PU          -> Write();
  cNDF_PU          -> Close();

  TCanvas *cQuality_PU   = new TCanvas("cQualityWithPileup", "", fWidth2P, fHeight2P);
  TPad    *pQuality1D_PU = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pQuality2D_PU = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cQuality_PU          -> cd();
  pQuality1D_PU        -> Draw();
  pQuality2D_PU        -> Draw();
  pQuality1D_PU        -> cd();
  hTrackQuality_PU     -> Draw();
  hPrimaryQuality_PU   -> Draw("same");
  hNonPrimQuality_PU   -> Draw("same");
  pil                  -> Draw();
  txtPU                -> Draw();
  pQuality2D_PU        -> cd();
  hTrackPtVsQuality_PU -> Draw("colz");
  fOut                 -> cd();
  cQuality_PU          -> Write();
  cQuality_PU          -> Close();

  TCanvas *cDCAxy_PU   = new TCanvas("cDCAxyWithPileup", "", fWidth2P, fHeight2P);
  TPad    *pDCAxy1D_PU = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDCAxy2D_PU = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDCAxy_PU          -> cd();
  pDCAxy1D_PU        -> Draw();
  pDCAxy2D_PU        -> Draw();
  pDCAxy1D_PU        -> cd();
  hTrackDCAxy_PU     -> Draw();
  hPrimaryDCAxy_PU   -> Draw("same");
  hNonPrimDCAxy_PU   -> Draw("same");
  pil                -> Draw();
  txtPU              -> Draw();
  pDCAxy2D_PU        -> cd();
  hTrackPtVsDCAxy_PU -> Draw("colz");
  fOut               -> cd();
  cDCAxy_PU          -> Write();
  cDCAxy_PU          -> Close();

  TCanvas *cDCAz_PU   = new TCanvas("cDCAzWithPileup", "", fWidth2P, fHeight2P);
  TPad    *pDCAz1D_PU = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDCAz2D_PU = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDCAz_PU          -> cd();
  pDCAz1D_PU        -> Draw();
  pDCAz2D_PU        -> Draw();
  pDCAz1D_PU        -> cd();
  hTrackDCAz_PU     -> Draw();
  hPrimaryDCAz_PU   -> Draw("same");
  hNonPrimDCAz_PU   -> Draw("same");
  pil               -> Draw();
  txtPU             -> Draw();
  pDCAz2D_PU        -> cd();
  hTrackPtVsDCAz_PU -> Draw("colz");
  fOut              -> cd();
  cDCAz_PU          -> Write();
  cDCAz_PU          -> Close();

  TCanvas *cDeltaDCAxyVsTrkPt_PU   = new TCanvas("cDeltaDCAxyVsTrkPtWithPileup", "", fWidth2P, fHeight2P);
  TPad    *pDeltaDCAxyVsTrkPt1D_PU = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDeltaDCAxyVsTrkPt2D_PU = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDeltaDCAxyVsTrkPt_PU   -> cd();
  pDeltaDCAxyVsTrkPt1D_PU -> Draw();
  pDeltaDCAxyVsTrkPt2D_PU -> Draw();
  pDeltaDCAxyVsTrkPt1D_PU -> cd();
  hDeltaDCAxy_PU          -> Draw();
  hDeltaPrimDCAxy_PU      -> Draw("same");
  hDeltaNoPrDCAxy_PU      -> Draw("same");
  pil                     -> Draw();
  txtPU                   -> Draw();
  pDeltaDCAxyVsTrkPt2D_PU -> cd();
  hDeltaDCAxyVsTrkPt_PU   -> Draw("colz");
  fOut                    -> cd();
  cDeltaDCAxyVsTrkPt_PU   -> Write();
  cDeltaDCAxyVsTrkPt_PU   -> Close();

  TCanvas *cDeltaDCAzVsTrkPt_PU   = new TCanvas("cDeltaDCAzVsTrkPtWithPileup", "", fWidth2P, fHeight2P);
  TPad    *pDeltaDCAzVsTrkPt1D_PU = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDeltaDCAzVsTrkPt2D_PU = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDeltaDCAzVsTrkPt_PU   -> cd();
  pDeltaDCAzVsTrkPt1D_PU -> Draw();
  pDeltaDCAzVsTrkPt2D_PU -> Draw();
  pDeltaDCAzVsTrkPt1D_PU -> cd();
  hDeltaDCAz_PU          -> Draw();
  hDeltaPrimDCAz_PU      -> Draw("same");
  hDeltaNoPrDCAz_PU      -> Draw("same");
  pil                    -> Draw();
  txtPU                  -> Draw();
  pDeltaDCAzVsTrkPt2D_PU -> cd();
  hDeltaDCAzVsTrkPt_PU   -> Draw("colz");
  fOut                   -> cd();
  cDeltaDCAzVsTrkPt_PU   -> Write();
  cDeltaDCAzVsTrkPt_PU   -> Close();

  TCanvas *cDeltaEtaVsTrkPt_PU   = new TCanvas("cDeltaEtaVsTrkPtWithPileup", "", fWidth2P, fHeight2P);
  TPad    *pDeltaEtaVsTrkPt1D_PU = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDeltaEtaVsTrkPt2D_PU = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDeltaEtaVsTrkPt_PU   -> cd();
  pDeltaEtaVsTrkPt1D_PU -> Draw();
  pDeltaEtaVsTrkPt2D_PU -> Draw();
  pDeltaEtaVsTrkPt1D_PU -> cd();
  hDeltaEta_PU          -> Draw();
  hDeltaPrimEta_PU      -> Draw("same");
  hDeltaNoPrEta_PU      -> Draw("same");
  pil                   -> Draw();
  txtPU                 -> Draw();
  pDeltaEtaVsTrkPt2D_PU -> cd();
  hDeltaEtaVsTrkPt_PU   -> Draw("colz");
  fOut                  -> cd();
  cDeltaEtaVsTrkPt_PU   -> Write();
  cDeltaEtaVsTrkPt_PU   -> Close();

  TCanvas *cDeltaPhiVsTrkPt_PU   = new TCanvas("cDeltaPhiVsTrkPtWithPileup", "", fWidth2P, fHeight2P);
  TPad    *pDeltaPhiVsTrkPt1D_PU = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDeltaPhiVsTrkPt2D_PU = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDeltaPhiVsTrkPt_PU   -> cd();
  pDeltaPhiVsTrkPt1D_PU -> Draw();
  pDeltaPhiVsTrkPt2D_PU -> Draw();
  pDeltaPhiVsTrkPt1D_PU -> cd();
  hDeltaPhi_PU          -> Draw();
  hDeltaPrimPhi_PU      -> Draw("same");
  hDeltaNoPrPhi_PU      -> Draw("same");
  pil                   -> Draw();
  txtPU                 -> Draw();
  pDeltaPhiVsTrkPt2D_PU -> cd();
  hDeltaPhiVsTrkPt_PU   -> Draw("colz");
  fOut                  -> cd();
  cDeltaPhiVsTrkPt_PU   -> Write();
  cDeltaPhiVsTrkPt_PU   -> Close();

  TCanvas *cDeltaPtVsTrkPt_PU   = new TCanvas("cDeltaPtVsTrkPtWithPileup", "", fWidth2P, fHeight2P);
  TPad    *pDeltaPtVsTrkPt1D_PU = new TPad(sOneVsTwoDimPanels[0].Data(), "", padXY[0][0], padXY[0][1], padXY[0][2], padXY[0][3]); 
  TPad    *pDeltaPtVsTrkPt2D_PU = new TPad(sOneVsTwoDimPanels[1].Data(), "", padXY[1][0], padXY[1][1], padXY[1][2], padXY[1][3]); 
  cDeltaPtVsTrkPt_PU   -> cd();
  pDeltaPtVsTrkPt1D_PU -> Draw();
  pDeltaPtVsTrkPt2D_PU -> Draw();
  pDeltaPtVsTrkPt1D_PU -> cd();
  hDeltaPt_PU          -> Draw();
  hDeltaPrimPt_PU      -> Draw("same");
  hDeltaNoPrPt_PU      -> Draw("same");
  pil                  -> Draw();
  txtPU                -> Draw();
  pDeltaPtVsTrkPt2D_PU -> cd();
  hDeltaPtVsTrkPt_PU   -> Draw("colz");
  fOut                 -> cd();
  cDeltaPtVsTrkPt_PU   -> Write();
  cDeltaPtVsTrkPt_PU   -> Close();
  cout << "      Created plots." << endl;

}  // end 'CreatePlots()'



void STrackCutStudy::SaveHists() {

  // directory parameters
  const TString sOutDir[NTyp] = {"Track", "Truth", "Weird", "Normal", "Pileup", "Primary", "NonPrimary"};

  // create output directories
  TDirectory *dOut[NTyp];
  for (UInt_t iDir = 0; iDir < NTyp; iDir++) {
    fOut       -> cd();
    dOut[iDir] = (TDirectory*) fOut -> mkdir(sOutDir[iDir].Data());
  }
  cout << "      Made directories." << endl;

  // save histograms
  dOut[0]                -> cd();
  hTrackNMms             -> Write();
  hTrackNMap             -> Write();
  hTrackNInt             -> Write();
  hTrackNTpc             -> Write();
  hTrackNTot             -> Write();
  hTrackPerMms           -> Write();
  hTrackPerMap           -> Write();
  hTrackPerInt           -> Write();
  hTrackPerTpc           -> Write();
  hTrackPerTot           -> Write();
  hTrackChi2             -> Write();
  hTrackNDF              -> Write();
  hTrackQuality          -> Write();
  hTrackDCAxy            -> Write();
  hTrackDCAz             -> Write();
  hTrackVx               -> Write();
  hTrackVy               -> Write();
  hTrackVz               -> Write();
  hTrackEta              -> Write();
  hTrackPhi              -> Write();
  hTrackPt               -> Write();
  hDeltaDCAxy            -> Write();
  hDeltaDCAz             -> Write();
  hDeltaEta              -> Write();
  hDeltaPhi              -> Write();
  hDeltaPt               -> Write();
  hTrackPtVsNMms         -> Write();
  hTrackPtVsNMap         -> Write();
  hTrackPtVsNInt         -> Write();
  hTrackPtVsNTpc         -> Write();
  hTrackPtVsNTot         -> Write();
  hTrackPtVsPerMap       -> Write();
  hTrackPtVsPerInt       -> Write();
  hTrackPtVsPerTpc       -> Write();
  hTrackPtVsPerTot       -> Write();
  hTrackPtVsChi2         -> Write();
  hTrackPtVsNDF          -> Write();
  hTrackPtVsQuality      -> Write();
  hTrackPtVsDCAxy        -> Write();
  hTrackPtVsDCAz         -> Write();
  hDeltaDCAxyVsTrkPt     -> Write();
  hDeltaDCAzVsTrkPt      -> Write();
  hDeltaEtaVsTrkPt       -> Write();
  hDeltaPhiVsTrkPt       -> Write();
  hDeltaPtVsTrkPt        -> Write();
  dOut[1]                -> cd();
  hTruthNMms             -> Write();
  hTruthNMap             -> Write();
  hTruthNInt             -> Write();
  hTruthNTpc             -> Write();
  hTruthNTot             -> Write();
  hTruthEta              -> Write();
  hTruthPhi              -> Write();
  hTruthPt               -> Write();
  hTruthVx               -> Write();
  hTruthVy               -> Write();
  hTruthVz               -> Write();
  hTruthEtaFrac          -> Write();
  hTruthPhiFrac          -> Write();
  hTruthPtFrac           -> Write();
  hTruthEtaDiff          -> Write();
  hTruthPhiDiff          -> Write();
  hTruthPtDiff           -> Write();
  hTruthVxDiff           -> Write();
  hTruthVyDiff           -> Write();
  hTruthVzDiff           -> Write();
  hTruthVsTrackEta       -> Write();
  hTruthVsTrackPhi       -> Write();
  hTruthVsTrackPt        -> Write();
  hTruthVsTrackVx        -> Write();
  hTruthVsTrackVy        -> Write();
  hTruthVsTrackVz        -> Write();
  hFracVsTruthEta        -> Write();
  hFracVsTruthPhi        -> Write();
  hFracVsTruthPt         -> Write();
  hDiffVsTruthEta        -> Write();
  hDiffVsTruthPhi        -> Write();
  hDiffVsTruthPt         -> Write();
  hTruthPtVsNMms         -> Write();
  hTruthPtVsNMap         -> Write();
  hTruthPtVsNInt         -> Write();
  hTruthPtVsNTpc         -> Write();
  hTruthPtVsNTot         -> Write();
  hTruthPtVsChi2         -> Write();
  hTruthPtVsNDF          -> Write();
  hTruthPtVsQuality      -> Write();
  hFracPtVsQuality       -> Write();
  hTruthPtVsDCAxy        -> Write();
  hTruthPtVsDCAz         -> Write();
  hDeltaDCAxyVsTruPt     -> Write();
  hDeltaDCAzVsTruPt      -> Write();
  hDeltaEtaVsTruPt       -> Write();
  hDeltaPhiVsTruPt       -> Write();
  hDeltaPtVsTruPt        -> Write();
  dOut[2]                -> cd();
  hWeirdNMms             -> Write();
  hWeirdNMap             -> Write();
  hWeirdNInt             -> Write();
  hWeirdNTpc             -> Write();
  hWeirdNTot             -> Write();
  hWeirdPerMms           -> Write();
  hWeirdPerMap           -> Write();
  hWeirdPerInt           -> Write();
  hWeirdPerTpc           -> Write();
  hWeirdPerTot           -> Write();
  hWeirdChi2             -> Write();
  hWeirdNDF              -> Write();
  hWeirdQuality          -> Write();
  hWeirdDCAxy            -> Write();
  hWeirdDCAz             -> Write();
  hWeirdVx               -> Write();
  hWeirdVy               -> Write();
  hWeirdVz               -> Write();
  hWeirdEta              -> Write();
  hWeirdPhi              -> Write();
  hWeirdPt               -> Write();
  hWeirdDeltaDCAxy       -> Write();
  hWeirdDeltaDCAz        -> Write();
  hWeirdDeltaEta         -> Write();
  hWeirdDeltaPhi         -> Write();
  hWeirdDeltaPt          -> Write();
  hWeirdVxDiff           -> Write();
  hWeirdVyDiff           -> Write();
  hWeirdVzDiff           -> Write();
  dOut[3]                -> cd();
  hNormalNMms            -> Write();
  hNormalNMap            -> Write();
  hNormalNInt            -> Write();
  hNormalNTpc            -> Write();
  hNormalNTot            -> Write();
  hNormalPerMms          -> Write();
  hNormalPerMap          -> Write();
  hNormalPerInt          -> Write();
  hNormalPerTpc          -> Write();
  hNormalPerTot          -> Write();
  hNormalChi2            -> Write();
  hNormalNDF             -> Write();
  hNormalQuality         -> Write();
  hNormalDCAxy           -> Write();
  hNormalDCAz            -> Write();
  hNormalVx              -> Write();
  hNormalVy              -> Write();
  hNormalVz              -> Write();
  hNormalEta             -> Write();
  hNormalPhi             -> Write();
  hNormalPt              -> Write();
  hNormalDeltaDCAxy      -> Write();
  hNormalDeltaDCAz       -> Write();
  hNormalDeltaEta        -> Write();
  hNormalDeltaPhi        -> Write();
  hNormalDeltaPt         -> Write();
  hNormalVxDiff          -> Write();
  hNormalVyDiff          -> Write();
  hNormalVzDiff          -> Write();
  dOut[4]                -> cd();
  hTrackNMms_PU          -> Write();
  hTrackNMap_PU          -> Write();
  hTrackNInt_PU          -> Write();
  hTrackNTpc_PU          -> Write();
  hTrackNTot_PU          -> Write();
  hTrackPerMms_PU        -> Write();
  hTrackPerMap_PU        -> Write();
  hTrackPerInt_PU        -> Write();
  hTrackPerTpc_PU        -> Write();
  hTrackPerTot_PU        -> Write();
  hTrackChi2_PU          -> Write();
  hTrackNDF_PU           -> Write();
  hTrackQuality_PU       -> Write();
  hTrackDCAxy_PU         -> Write();
  hTrackDCAz_PU          -> Write();
  hTrackVx_PU            -> Write();
  hTrackVy_PU            -> Write();
  hTrackVz_PU            -> Write();
  hTrackEta_PU           -> Write();
  hTrackPhi_PU           -> Write();
  hTrackPt_PU            -> Write();
  hDeltaDCAxy_PU         -> Write();
  hDeltaDCAz_PU          -> Write();
  hDeltaEta_PU           -> Write();
  hDeltaPhi_PU           -> Write();
  hDeltaPt_PU            -> Write();
  hTrackPtVsNMms_PU      -> Write();
  hTrackPtVsNMap_PU      -> Write();
  hTrackPtVsNInt_PU      -> Write();
  hTrackPtVsNTpc_PU      -> Write();
  hTrackPtVsNTot_PU      -> Write();
  hTrackPtVsPerMap_PU    -> Write();
  hTrackPtVsPerInt_PU    -> Write();
  hTrackPtVsPerTpc_PU    -> Write();
  hTrackPtVsPerTot_PU    -> Write();
  hTrackPtVsChi2_PU      -> Write();
  hTrackPtVsNDF_PU       -> Write();
  hTrackPtVsQuality_PU   -> Write();
  hTrackPtVsDCAxy_PU     -> Write();
  hTrackPtVsDCAz_PU      -> Write();
  hDeltaDCAxyVsTrkPt_PU  -> Write();
  hDeltaDCAzVsTrkPt_PU   -> Write();
  hDeltaEtaVsTrkPt_PU    -> Write();
  hDeltaPhiVsTrkPt_PU    -> Write();
  hDeltaPtVsTrkPt_PU     -> Write();
  dOut[5]                -> cd();
  hPrimaryNMms_PU        -> Write();
  hPrimaryNMap_PU        -> Write();
  hPrimaryNInt_PU        -> Write();
  hPrimaryNTpc_PU        -> Write();
  hPrimaryNTot_PU        -> Write();
  hPrimaryPerMms_PU      -> Write();
  hPrimaryPerMap_PU      -> Write();
  hPrimaryPerInt_PU      -> Write();
  hPrimaryPerTpc_PU      -> Write();
  hPrimaryPerTot_PU      -> Write();
  hPrimaryChi2_PU        -> Write();
  hPrimaryNDF_PU         -> Write();
  hPrimaryQuality_PU     -> Write();
  hPrimaryDCAxy_PU       -> Write();
  hPrimaryDCAz_PU        -> Write();
  hPrimaryVx_PU          -> Write();
  hPrimaryVy_PU          -> Write();
  hPrimaryVz_PU          -> Write();
  hPrimaryEta_PU         -> Write();
  hPrimaryPhi_PU         -> Write();
  hPrimaryPt_PU          -> Write();
  hDeltaPrimDCAxy_PU     -> Write();
  hDeltaPrimDCAz_PU      -> Write();
  hDeltaPrimEta_PU       -> Write();
  hDeltaPrimPhi_PU       -> Write();
  hDeltaPrimPt_PU        -> Write();
  hPrimaryPtVsNMms_PU    -> Write();
  hPrimaryPtVsNMap_PU    -> Write();
  hPrimaryPtVsNInt_PU    -> Write();
  hPrimaryPtVsNTpc_PU    -> Write();
  hPrimaryPtVsNTot_PU    -> Write();
  hPrimaryPtVsPerMms_PU  -> Write();
  hPrimaryPtVsPerMap_PU  -> Write();
  hPrimaryPtVsPerInt_PU  -> Write();
  hPrimaryPtVsPerTpc_PU  -> Write();
  hPrimaryPtVsPerTot_PU  -> Write();
  hPrimaryPtVsChi2_PU    -> Write();
  hPrimaryPtVsNDF_PU     -> Write();
  hPrimaryPtVsQuality_PU -> Write();
  hPrimaryPtVsDCAxy_PU   -> Write();
  hPrimaryPtVsDCAz_PU    -> Write();
  hDeltaDCAxyVsPrimPt_PU -> Write();
  hDeltaDCAzVsPrimPt_PU  -> Write();
  hDeltaEtaVsPrimPt_PU   -> Write();
  hDeltaPhiVsPrimPt_PU   -> Write();
  hDeltaPtVsPrimPt_PU    -> Write();
  dOut[6]                -> Write();
  hNonPrimNMms_PU        -> Write();
  hNonPrimNMap_PU        -> Write();
  hNonPrimNInt_PU        -> Write();
  hNonPrimNTpc_PU        -> Write();
  hNonPrimNTot_PU        -> Write();
  hNonPrimPerMms_PU      -> Write();
  hNonPrimPerMap_PU      -> Write();
  hNonPrimPerInt_PU      -> Write();
  hNonPrimPerTpc_PU      -> Write();
  hNonPrimPerTot_PU      -> Write();
  hNonPrimChi2_PU        -> Write();
  hNonPrimNDF_PU         -> Write();
  hNonPrimQuality_PU     -> Write();
  hNonPrimDCAxy_PU       -> Write();
  hNonPrimDCAz_PU        -> Write();
  hNonPrimVx_PU          -> Write();
  hNonPrimVy_PU          -> Write();
  hNonPrimVz_PU          -> Write();
  hNonPrimEta_PU         -> Write();
  hNonPrimPhi_PU         -> Write();
  hNonPrimPt_PU          -> Write();
  hDeltaNoPrDCAxy_PU     -> Write();
  hDeltaNoPrDCAz_PU      -> Write();
  hDeltaNoPrEta_PU       -> Write();
  hDeltaNoPrPhi_PU       -> Write();
  hDeltaNoPrPt_PU        -> Write();
  hNonPrimPtVsNMms_PU    -> Write();
  hNonPrimPtVsNMap_PU    -> Write();
  hNonPrimPtVsNInt_PU    -> Write();
  hNonPrimPtVsNTpc_PU    -> Write();
  hNonPrimPtVsNTot_PU    -> Write();
  hNonPrimPtVsPerMms_PU  -> Write();
  hNonPrimPtVsPerMap_PU  -> Write();
  hNonPrimPtVsPerInt_PU  -> Write();
  hNonPrimPtVsPerTpc_PU  -> Write();
  hNonPrimPtVsPerTot_PU  -> Write();
  hNonPrimPtVsChi2_PU    -> Write();
  hNonPrimPtVsNDF_PU     -> Write();
  hNonPrimPtVsQuality_PU -> Write();
  hNonPrimPtVsDCAxy_PU   -> Write();
  hNonPrimPtVsDCAz_PU    -> Write();
  hDeltaDCAxyVsNoPrPt_PU -> Write();
  hDeltaDCAzVsNoPrPt_PU  -> Write();
  hDeltaEtaVsNoPrPt_PU   -> Write();
  hDeltaPhiVsNoPrPt_PU   -> Write();
  cout << "      Saved histograms." << endl;

}  // end 'SaveHists()'

// end ------------------------------------------------------------------------
